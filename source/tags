!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACTIVATE_TRAN	ctlsmod.c	/^	SET_BAUD = 0, PING, PASSTHRU, SET_LED, SET_POLL, ACTIVATE_TRAN, SET_DISP, UPDATE_BAL, GET_EMV_CONFIG, SET_EMV_CONFIG,$/;"	e	enum:__anon2	file:
AID	ctlsmod.c	/^	unsigned char AID[16];				\/\/ x9F06 - Application Identifier (AID)$/;"	m	struct:__anon8	file:
AIDLength	ctlsmod.c	/^	int AIDLength;$/;"	m	struct:__anon8	file:
AID_DATA	ctlsmod.c	/^} AID_DATA;$/;"	t	typeref:struct:__anon8	file:
AS2805BcdLength	as2805.c	/^void AS2805BcdLength(bool state)$/;"	f
AS2805BufferPack	as2805.c	/^void AS2805BufferPack(char * data, uchar format, uint size, uchar * buffer, uint * index)$/;"	f
AS2805BufferUnpack	as2805.c	/^void AS2805BufferUnpack(char * data, uchar format, uint size, uchar * buffer, uint * index)$/;"	f
AS2805Close	as2805.c	/^void AS2805Close()$/;"	f
AS2805Init	as2805.c	/^uchar * AS2805Init(uint size)$/;"	f
AS2805Pack	as2805.c	/^uint AS2805Pack(uchar field, char * data)$/;"	f
AS2805Position	as2805.c	/^uchar * AS2805Position(uint * length)$/;"	f
AS2805SetBit	as2805.c	/^void AS2805SetBit(uchar field)$/;"	f
AS2805Unpack	as2805.c	/^void AS2805Unpack(uchar field, char * data, uchar * buffer, uint length)$/;"	f
AS2805_Error	iris2805.c	/^int AS2805_Error = -1;$/;"	v
AUXMARK	lua/loadlib.c	590;"	d	file:
AddTermCap	ctlsmod.c	/^	unsigned char AddTermCap[5];		\/\/ x9F40 - Additional Terminal Capabilities$/;"	m	struct:__anon8	file:
Arith	lua/lvm.c	/^static void Arith (lua_State *L, StkId ra, const TValue *rb,$/;"	f	file:
Ascii2Hex	emvAid.c	/^BYTE Ascii2Hex (unsigned char AscByte)$/;"	f
Ascii2HexStream	emvAid.c	/^unsigned short Ascii2HexStream(char * ptAsciiData, unsigned char * hex_data )$/;"	f
Assert	include/zutil.h	245;"	d
Assert	include/zutil.h	252;"	d
B8	Prtean13.c	53;"	d	file:
B8__	Prtean13.c	56;"	d	file:
BAD	include/inflate.h	/^    BAD,        \/* got a data error -- remain here until reset *\/$/;"	e	enum:__anon36
BASE	adler32.c	11;"	d	file:
BIG_ENDIAN	ctlsmod.c	/^typedef enum {LITTLE_ENDIAN = 0, BIG_ENDIAN} CRC_TYPE;$/;"	e	enum:__anon3	file:
BIT0	include/inputmacro.h	57;"	d
BIT1	include/inputmacro.h	58;"	d
BIT10	include/inputmacro.h	67;"	d
BIT11	include/inputmacro.h	68;"	d
BIT12	include/inputmacro.h	69;"	d
BIT13	include/inputmacro.h	70;"	d
BIT14	include/inputmacro.h	71;"	d
BIT15	include/inputmacro.h	72;"	d
BIT16	include/inputmacro.h	73;"	d
BIT17	include/inputmacro.h	74;"	d
BIT18	include/inputmacro.h	75;"	d
BIT19	include/inputmacro.h	76;"	d
BIT2	include/inputmacro.h	59;"	d
BIT20	include/inputmacro.h	77;"	d
BIT21	include/inputmacro.h	78;"	d
BIT22	include/inputmacro.h	79;"	d
BIT23	include/inputmacro.h	80;"	d
BIT24	include/inputmacro.h	81;"	d
BIT25	include/inputmacro.h	82;"	d
BIT26	include/inputmacro.h	83;"	d
BIT27	include/inputmacro.h	84;"	d
BIT28	include/inputmacro.h	85;"	d
BIT29	include/inputmacro.h	86;"	d
BIT3	include/inputmacro.h	60;"	d
BIT30	include/inputmacro.h	87;"	d
BIT31	include/inputmacro.h	88;"	d
BIT4	include/inputmacro.h	61;"	d
BIT5	include/inputmacro.h	62;"	d
BIT6	include/inputmacro.h	63;"	d
BIT7	include/inputmacro.h	64;"	d
BIT8	include/inputmacro.h	65;"	d
BIT9	include/inputmacro.h	66;"	d
BITS	inflate.c	436;"	d	file:
BUILDFIXED	inflate.c	90;"	d	file:
BYFOUR	crc32.c	37;"	d	file:
BYFOUR	crc32.c	47;"	d	file:
BYTEBITS	inflate.c	447;"	d	file:
BlockCnt	lua/lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	lua/lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
BuildEan128BarCode	Prtean128.c	/^int BuildEan128BarCode(uchar * data, uchar * out, uint size, int height)$/;"	f
BuildEan13BarCode	Prtean13.c	/^int BuildEan13BarCode ( uchar * bpChar, uchar * abPrintBlock, uint wSizePrintBlock)$/;"	f
Byte	include/zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t
Byte	include/zconf.h	50;"	d
Bytef	include/zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t
Bytef	include/zconf.h	268;"	d
Bytef	include/zconf.h	53;"	d
CANCEL_TRANSACTION	ctlsmod.c	/^	CANCEL_TRANSACTION, DEL_CFG_GROUP, SET_CFG_GROUP, DEL_CFG_AID, GET_CFG_AID, GET_CFG_GRP, GET_ALL_GRPS$/;"	e	enum:__anon2	file:
CAPK_EXP_DATE_LEN	include/emv.h	156;"	d
CAP_POSITION	lua/lstrlib.c	168;"	d	file:
CAP_UNFINISHED	lua/lstrlib.c	167;"	d	file:
CARD_DATA	ctlsmod.c	/^} CARD_DATA;$/;"	t	typeref:struct:__anon7	file:
CCallS	lua/lapi.c	/^struct CCallS {  \/* data to `f_Ccall' *\/$/;"	s	file:
CEEvent	include/IrisComm.h	/^typedef void (*CEEvent) (unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen);$/;"	t
CENTRE_GUARD	Prtean13.c	135;"	d	file:
CENTRE_GUARD_WIDTH	Prtean13.c	43;"	d	file:
CHECK	include/inflate.h	/^    CHECK,      \/* i: waiting for 32-bit check value *\/$/;"	e	enum:__anon36
CODELENS	include/inflate.h	/^        CODELENS,   \/* i: waiting for length\/lit and distance code lengths *\/$/;"	e	enum:__anon36
CODES	include/inftrees.h	/^    CODES,$/;"	e	enum:__anon38
CODE_A	Prtean128.c	158;"	d	file:
CODE_B	Prtean128.c	159;"	d	file:
CODE_C	Prtean128.c	160;"	d	file:
COMMENT	include/inflate.h	/^    COMMENT,    \/* i: waiting for end of comment (gzip) *\/$/;"	e	enum:__anon36
COMMS_115200	include/comms.h	112;"	d
COMMS_1200	include/comms.h	102;"	d
COMMS_12000	include/comms.h	106;"	d
COMMS_14400	include/comms.h	107;"	d
COMMS_19200	include/comms.h	108;"	d
COMMS_2400	include/comms.h	103;"	d
COMMS_28800	include/comms.h	109;"	d
COMMS_300	include/comms.h	100;"	d
COMMS_38400	include/comms.h	110;"	d
COMMS_4800	include/comms.h	104;"	d
COMMS_57600	include/comms.h	111;"	d
COMMS_600	include/comms.h	101;"	d
COMMS_9600	include/comms.h	105;"	d
COMMS_BAUDRATE_MAX_COUNT	include/comms.h	113;"	d
COMM_DIAL	include/IrisComm.h	32;"	d
COMM_DPPP	include/IrisComm.h	34;"	d
COMM_ETH	include/IrisComm.h	31;"	d
COMM_GPRS	include/IrisComm.h	33;"	d
COPY	include/inflate.h	/^        COPY,       \/* i\/o: waiting for input or output to copy stored block *\/$/;"	e	enum:__anon36
CO_DEAD	lua/lbaselib.c	485;"	d	file:
CO_NOR	lua/lbaselib.c	484;"	d	file:
CO_RUN	lua/lbaselib.c	482;"	d	file:
CO_SUS	lua/lbaselib.c	483;"	d	file:
CRC2	inflate.c	371;"	d	file:
CRC4	inflate.c	378;"	d	file:
CRC_TYPE	ctlsmod.c	/^typedef enum {LITTLE_ENDIAN = 0, BIG_ENDIAN} CRC_TYPE;$/;"	t	typeref:enum:__anon3	file:
CTLS_H_	include/ctlsmod.h	16;"	d
CTLS_READ_RETRY	include/ctlsmod.h	18;"	d
CTLS_VIVOTECH_CMD_TYPE	ctlsmod.c	/^} CTLS_VIVOTECH_CMD_TYPE;$/;"	t	typeref:enum:__anon2	file:
CTLS_VIVOTECH_CMD_VALUES	ctlsmod.c	/^} CTLS_VIVOTECH_CMD_VALUES;$/;"	t	typeref:struct:__anon4	file:
CTLS_WAVE3_CMD_TYPE	ctlsmod.c	/^} CTLS_WAVE3_CMD_TYPE;$/;"	t	typeref:enum:__anon9	file:
CTLS_WAVE3_CMD_VALUES	ctlsmod.c	/^} CTLS_WAVE3_CMD_VALUES;$/;"	t	typeref:struct:__anon10	file:
CVMReqLimit	ctlsmod.c	/^	unsigned char CVMReqLimit[6];		\/\/ xFFF5 - CVM Required Limit$/;"	m	struct:__anon8	file:
CVMReqLimitExists	ctlsmod.c	/^	int CVMReqLimitExists;$/;"	m	struct:__anon8	file:
C_ADD	include/as2805.h	55;"	d
C_AMOUNT	include/as2805.h	26;"	d
C_APPNAME_MAX	security.c	113;"	d	file:
C_BCD	include/as2805.h	25;"	d
C_BCD_LINK	include/as2805.h	28;"	d
C_BIG_BLOCK_SIZE	include/alloc.h	31;"	d
C_BITMAP	include/as2805.h	24;"	d
C_CFG_FILE_LEN	iriscfg.c	51;"	d	file:
C_CHK	include/as2805.h	52;"	d
C_DAY	iristime.c	48;"	d	file:
C_END_LOOP	include/as2805.h	46;"	d
C_FMT_MAX	iristime.c	53;"	d	file:
C_GET	include/as2805.h	51;"	d
C_GETS	include/as2805.h	56;"	d
C_HOUR	iristime.c	49;"	d	file:
C_IGN	include/as2805.h	53;"	d
C_LLAVAR	include/as2805.h	37;"	d
C_LLLNVAR	include/as2805.h	39;"	d
C_LLLVAR	include/as2805.h	40;"	d
C_LLNVAR	include/as2805.h	36;"	d
C_LLVAR	include/as2805.h	41;"	d
C_LOOP	include/as2805.h	45;"	d
C_MAX_BIG_BLOCKS	include/alloc.h	32;"	d
C_MAX_MED_BLOCKS	include/alloc.h	29;"	d
C_MAX_STACK	iris.c	49;"	d	file:
C_MAX_STACK	iris_old.c	49;"	d	file:
C_MAX_TINY_BLOCKS	include/alloc.h	26;"	d
C_MED_BLOCK_SIZE	include/alloc.h	28;"	d
C_MIN	iristime.c	50;"	d	file:
C_MMDD	include/as2805.h	31;"	d
C_MMDDhhmmss	include/as2805.h	30;"	d
C_MON	iristime.c	47;"	d	file:
C_NO_OF_KEYS	security.c	111;"	d	file:
C_NO_OF_RSA	security.c	112;"	d	file:
C_PPID	iriscfg.c	48;"	d	file:
C_PPID_LEN	iriscfg.c	46;"	d	file:
C_PUT	include/as2805.h	54;"	d
C_SCRIPT_ID	security.c	50;"	d	file:
C_SEC	iristime.c	51;"	d	file:
C_STRING	include/as2805.h	27;"	d
C_TINY_BLOCK_SIZE	include/alloc.h	25;"	d
C_YEAR	iristime.c	46;"	d	file:
C_YYMM	include/as2805.h	32;"	d
C_YYMMDD	include/as2805.h	34;"	d
C_hhmmss	include/as2805.h	33;"	d
CallS	lua/lapi.c	/^struct CallS {  \/* data to `f_call' *\/$/;"	s	file:
CardData	ctlsmod.c	/^CARD_DATA CardData;$/;"	v
CentreGuard	Prtean13.c	/^const uchar CentreGuard[2] = {B8(00011100),B8(01110000)};\/\/{0x38, 0x0E};$/;"	v
Class	include/LibCtls.h	/^  char  Class;          \/*   (in a command: xxxxxx--)                                    *\/$/;"	m	struct:__anon26
ClearCardData	ctlsmod.c	/^void ClearCardData(void)$/;"	f
Comms	comms.c	/^uint Comms(E_COMMS_FUNC eFunc, T_COMMS * psComms)$/;"	f
CommsConnect	comms.c	/^uint CommsConnect(T_COMMS * psComms)$/;"	f
CommsReceive	comms.c	/^uint CommsReceive( T_COMMS * psComms, bool fFirstChar)$/;"	f
CommsSend	comms.c	/^uint CommsSend( T_COMMS * psComms )$/;"	f
CommsSerialDataAvailable	comms.c	/^static uint CommsSerialDataAvailable(int port)$/;"	f	file:
CommsSetSerial	comms.c	/^static uint CommsSetSerial(T_COMMS * psComms)$/;"	f	file:
ConsControl	lua/lparser.c	/^struct ConsControl {$/;"	s	file:
DEFAULT	ctlsmod.c	/^	DEFAULT = 0, QX1000, QX120, VX810_CTLS$/;"	e	enum:__anon5	file:
DEF_MEM_LEVEL	include/zutil.h	70;"	d
DEF_MEM_LEVEL	include/zutil.h	72;"	d
DEF_WBITS	include/zutil.h	65;"	d
DEL_ALL_CAPK	ctlsmod.c	/^	GET_VER, GET_LCD, STORE_LCD, SET_LCD, GET_ALL_AIDS, SET_CFG_AID, SET_CAPK, DEL_ALL_CAPK, GET_PRODUCT_TYPE,$/;"	e	enum:__anon2	file:
DEL_CFG_AID	ctlsmod.c	/^	CANCEL_TRANSACTION, DEL_CFG_GROUP, SET_CFG_GROUP, DEL_CFG_AID, GET_CFG_AID, GET_CFG_GRP, GET_ALL_GRPS$/;"	e	enum:__anon2	file:
DEL_CFG_GROUP	ctlsmod.c	/^	CANCEL_TRANSACTION, DEL_CFG_GROUP, SET_CFG_GROUP, DEL_CFG_AID, GET_CFG_AID, GET_CFG_GRP, GET_ALL_GRPS$/;"	e	enum:__anon2	file:
DICT	include/inflate.h	/^    DICT,       \/* waiting for inflateSetDictionary() call *\/$/;"	e	enum:__anon36
DICTID	include/inflate.h	/^    DICTID,     \/* i: waiting for dictionary check value *\/$/;"	e	enum:__anon36
DIST	include/inflate.h	/^            DIST,       \/* i: waiting for distance code *\/$/;"	e	enum:__anon36
DISTEXT	include/inflate.h	/^            DISTEXT,    \/* i: waiting for distance extra bits *\/$/;"	e	enum:__anon36
DISTS	include/inftrees.h	/^    DISTS$/;"	e	enum:__anon38
DLMSG	lua/loadlib.c	236;"	d	file:
DO1	adler32.c	15;"	d	file:
DO1	crc32.c	210;"	d	file:
DO16	adler32.c	19;"	d	file:
DO2	adler32.c	16;"	d	file:
DO4	adler32.c	17;"	d	file:
DO8	adler32.c	18;"	d	file:
DO8	crc32.c	211;"	d	file:
DOBIG32	crc32.c	290;"	d	file:
DOBIG4	crc32.c	287;"	d	file:
DOLIT32	crc32.c	253;"	d	file:
DOLIT4	crc32.c	250;"	d	file:
DONE	include/inflate.h	/^    DONE,       \/* finished check, done -- remain here until reset *\/$/;"	e	enum:__anon36
DPPrintDebug	printer.c	/^void DPPrintDebug(char * data)$/;"	f
DPPrintDebug1	printer.c	/^void DPPrintDebug1(char * data, int len)$/;"	f
DROPBITS	inflate.c	440;"	d	file:
DYNAMIC_CRC_TABLE	crc32.c	25;"	d	file:
DYN_TREES	include/zutil.h	78;"	d
DataFromCard	include/LibCtls.h	/^  char  *DataFromCard;  \/*   response data, no NULL!!!!!                                 *\/$/;"	m	struct:__anon26
DataToCard	include/LibCtls.h	/^  char  *DataToCard;    \/*   (in a command)                                              *\/$/;"	m	struct:__anon26
DebugDisp	display.c	/^void DebugDisp (const char *template, ...)$/;"	f
DebugDisp	include/auris.h	79;"	d
DebugPrint	display.c	/^void DebugPrint (const char *template, ...)$/;"	f
DefaultTDOL	ctlsmod.c	/^	unsigned char DefaultTDOL[64];		\/\/ x97	 - Default Transaction Certificate Data Object List (TDOL)$/;"	m	struct:__anon8	file:
DefaultTDOLLen	ctlsmod.c	/^	int DefaultTDOLLen;$/;"	m	struct:__anon8	file:
DefaultTimer	timer.c	/^static TIMER_TYPE DefaultTimer;$/;"	v	file:
DispArray	display.c	/^int	DispArray(int timeout,char **pcMenuItems, int iMenuItemsTotal)$/;"	f
DispClearScreen	display.c	/^void DispClearScreen(void)$/;"	f
DispGraphics	display.c	/^void DispGraphics(const char * graphics, uint row, uint col)$/;"	f
DispInit	display.c	/^void DispInit(void)$/;"	f
DispSignal	display.c	/^void DispSignal(uint row, uint col)$/;"	f
DispText	display.c	/^void DispText(const char * text, uint row, uint col, bool clearLine, bool largeFont, bool inverse)$/;"	f
DispText2	comms.c	75;"	d	file:
DispUpdateBattery	display.c	/^void DispUpdateBattery(uint row, uint col)$/;"	f
DisplayObject	irismain.c	/^int DisplayObject(const char *lines,T_KEYBITMAP keyBitmap,T_EVTBITMAP keepEvtBitmap,int timeout, char* outevent, char* outinput)$/;"	f
DumpBlock	lua/ldump.c	/^static void DumpBlock(const void* b, size_t size, DumpState* D)$/;"	f	file:
DumpChar	lua/ldump.c	/^static void DumpChar(int y, DumpState* D)$/;"	f	file:
DumpCode	lua/ldump.c	76;"	d	file:
DumpConstants	lua/ldump.c	/^static void DumpConstants(const Proto* f, DumpState* D)$/;"	f	file:
DumpDebug	lua/ldump.c	/^static void DumpDebug(const Proto* f, DumpState* D)$/;"	f	file:
DumpFunction	lua/ldump.c	/^static void DumpFunction(const Proto* f, const TString* p, DumpState* D)$/;"	f	file:
DumpHeader	lua/ldump.c	/^static void DumpHeader(DumpState* D)$/;"	f	file:
DumpInt	lua/ldump.c	/^static void DumpInt(int x, DumpState* D)$/;"	f	file:
DumpMem	lua/ldump.c	26;"	d	file:
DumpNumber	lua/ldump.c	/^static void DumpNumber(lua_Number x, DumpState* D)$/;"	f	file:
DumpState	lua/ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anon16	file:
DumpString	lua/ldump.c	/^static void DumpString(const TString* s, DumpState* D)$/;"	f	file:
DumpVar	lua/ldump.c	27;"	d	file:
DumpVector	lua/ldump.c	/^static void DumpVector(const void* b, int n, size_t size, DumpState* D)$/;"	f	file:
EAN13_PRINT_HEIGHT	include/Prtean13.h	22;"	d
EAN13_PRINT_WIDTH	include/Prtean13.h	23;"	d
EAN13_START_COLUMN	include/Prtean13.h	19;"	d
EAN_NORMAL_WIDTH	Prtean13.c	40;"	d	file:
ECHO	ctlsmod.c	/^	POLL = 0, ECHO, RESET, INITCOMMS, MUTUAL_AUTH, GET_KEYS, INV_READER, SWITCH_ADMIN,$/;"	e	enum:__anon9	file:
EMVAddAIDRecord	emvAid.c	/^int	EMVAddAIDRecord( EMV_AID_RECORD *psRecord)$/;"	f
EMVCB_BLACK_CARDS_FILE	emvCallback.c	39;"	d	file:
EMVDataAuth	emv.c	/^int EMVDataAuth(void)$/;"	f
EMVGetAIDRecordFor	emvAid.c	/^int	EMVGetAIDRecordFor(const unsigned char *pbAID, EMV_AID_RECORD *psRecord)$/;"	f
EMVPowerOn	emv.c	/^int	EMVPowerOn(void)$/;"	f
EMVProcessingRestrictions	emv.c	/^int EMVProcessingRestrictions (void)$/;"	f
EMVReadAppData	emv.c	/^int	EMVReadAppData(void)$/;"	f
EMVSelectApplication	emv.c	/^int	EMVSelectApplication(void)$/;"	f
EMVTransInit	emv.c	/^int	EMVTransInit(void)$/;"	f
EMV_ACCOUNT_TYPE_LENGTH	include/emv.h	101;"	d
EMV_ACQUIRER_ID_LENGTH	include/emv.h	102;"	d
EMV_AC_LENGTH	include/emv.h	100;"	d
EMV_ADD_TERMCAP_LENGTH	include/emv.h	126;"	d
EMV_AIP_LENGTH	include/emv.h	129;"	d
EMV_APPLICATION_PREF_NAME_LENGTH	include/emv.h	85;"	d
EMV_APP_VERSION_LENGTH	include/emv.h	83;"	d
EMV_ARC_LENGTH	include/emv.h	103;"	d
EMV_ATC_LENGTH	include/emv.h	104;"	d
EMV_AUTH_CODE_LENGTH	include/emv.h	105;"	d
EMV_BCD_AMOUNT_LENGTH	include/emv.h	107;"	d
EMV_BINARY_AMOUNT_LENGTH	include/emv.h	106;"	d
EMV_CERT_SERIAL_LENGHT	include/emv.h	90;"	d
EMV_CID_LENGTH	include/emv.h	108;"	d
EMV_COUNTRY_CODE_LENGTH	include/emv.h	109;"	d
EMV_CSV_AID_FIELDS	emvAid.c	/^}EMV_CSV_AID_FIELDS;$/;"	t	typeref:enum:__anon11	file:
EMV_CURRENCY_CODE_LENGTH	include/emv.h	110;"	d
EMV_CVM_RESULT_LENGTH	include/emv.h	112;"	d
EMV_EXP_DATE_YYMMDD_LEN_MAX	include/emv.h	133;"	d
EMV_EXP_DATE_YYMM_LEN_MAX	include/emv.h	134;"	d
EMV_FILE_ACCOUNTS_AVAILABLE	emvAid.c	/^    EMV_FILE_ACCOUNTS_AVAILABLE,$/;"	e	enum:__anon11	file:
EMV_FILE_ACCOUNTS_EARLY_EMV	emvAid.c	/^    EMV_FILE_ACCOUNTS_EARLY_EMV,$/;"	e	enum:__anon11	file:
EMV_FILE_AID	emvAid.c	/^    EMV_FILE_AID = 4,$/;"	e	enum:__anon11	file:
EMV_FILE_AID_MAX_ELEMENTS	emvAid.c	/^    EMV_FILE_AID_MAX_ELEMENTS$/;"	e	enum:__anon11	file:
EMV_FILE_BIAS_THRESHOLD_DOMESTIC	emvAid.c	/^    EMV_FILE_BIAS_THRESHOLD_DOMESTIC,$/;"	e	enum:__anon11	file:
EMV_FILE_BIAS_THRESHOLD_INTERNATIONAL	emvAid.c	/^    EMV_FILE_BIAS_THRESHOLD_INTERNATIONAL,$/;"	e	enum:__anon11	file:
EMV_FILE_FLOOR_LIMIT_DOMESTIC	emvAid.c	/^    EMV_FILE_FLOOR_LIMIT_DOMESTIC,$/;"	e	enum:__anon11	file:
EMV_FILE_FLOOR_LIMIT_INTERNATIONAL	emvAid.c	/^    EMV_FILE_FLOOR_LIMIT_INTERNATIONAL,$/;"	e	enum:__anon11	file:
EMV_FILE_MAX_TARGET_PERCENT_DOMESTIC	emvAid.c	/^    EMV_FILE_MAX_TARGET_PERCENT_DOMESTIC,$/;"	e	enum:__anon11	file:
EMV_FILE_MAX_TARGET_PERCENT_INTERNATIONAL	emvAid.c	/^    EMV_FILE_MAX_TARGET_PERCENT_INTERNATIONAL,$/;"	e	enum:__anon11	file:
EMV_FILE_PIN_BYPASS_DOMESTIC	emvAid.c	/^    EMV_FILE_PIN_BYPASS_DOMESTIC,$/;"	e	enum:__anon11	file:
EMV_FILE_PIN_BYPASS_INTERNATIONAL	emvAid.c	/^    EMV_FILE_PIN_BYPASS_INTERNATIONAL,    $/;"	e	enum:__anon11	file:
EMV_FILE_TAC_DEFAULT_DOMESTIC	emvAid.c	/^    EMV_FILE_TAC_DEFAULT_DOMESTIC,$/;"	e	enum:__anon11	file:
EMV_FILE_TAC_DEFAULT_INTERNATIONAL	emvAid.c	/^    EMV_FILE_TAC_DEFAULT_INTERNATIONAL,$/;"	e	enum:__anon11	file:
EMV_FILE_TAC_DENIAL_DOMESTIC	emvAid.c	/^    EMV_FILE_TAC_DENIAL_DOMESTIC,$/;"	e	enum:__anon11	file:
EMV_FILE_TAC_DENIAL_INTERNATIONAL	emvAid.c	/^    EMV_FILE_TAC_DENIAL_INTERNATIONAL,$/;"	e	enum:__anon11	file:
EMV_FILE_TAC_ONLINE_DOMESTIC	emvAid.c	/^    EMV_FILE_TAC_ONLINE_DOMESTIC,$/;"	e	enum:__anon11	file:
EMV_FILE_TAC_ONLINE_INTERNATIONAL	emvAid.c	/^    EMV_FILE_TAC_ONLINE_INTERNATIONAL,    $/;"	e	enum:__anon11	file:
EMV_FILE_TARGET_PERCENT_DOMESTIC	emvAid.c	/^    EMV_FILE_TARGET_PERCENT_DOMESTIC,$/;"	e	enum:__anon11	file:
EMV_FILE_TARGET_PERCENT_INTERNATIONAL	emvAid.c	/^    EMV_FILE_TARGET_PERCENT_INTERNATIONAL,$/;"	e	enum:__anon11	file:
EMV_GLOBAL	include/emv.h	/^} EMV_GLOBAL;$/;"	t	typeref:struct:__anon35
EMV_MAX_AID_LENGTH	include/emv.h	81;"	d
EMV_MAX_AID_RECORDS	include/emv.h	158;"	d
EMV_MAX_APPLICATION_NAME	include/emv.h	84;"	d
EMV_MAX_ASCII_AID_LENGTH	include/emv.h	82;"	d
EMV_MAX_ASCII_PARAM_LENGTH	include/emv.h	117;"	d
EMV_MAX_CAPK_MODULUS	include/emv.h	89;"	d
EMV_MAX_CAPK_RECORDS	include/emv.h	160;"	d
EMV_MAX_CARD_APPLICATIONS	include/emv.h	87;"	d
EMV_MAX_CSN_RECORDS	include/emv.h	161;"	d
EMV_MAX_CVM_LIST_LEN	include/emv.h	111;"	d
EMV_MAX_DEFAULT_DOL_LENGTH	include/emv.h	113;"	d
EMV_MAX_EXCEPTION_RECORDS	include/emv.h	159;"	d
EMV_MAX_ISS_AUTH_DATA_LENGTH	include/emv.h	115;"	d
EMV_MAX_MERCHANT_NAME	include/emv.h	93;"	d
EMV_MAX_PIN_LENGTH	include/emv.h	98;"	d
EMV_MERCHANT_CAT_CODE_LENGTH	include/emv.h	92;"	d
EMV_MERCHANT_ID_LENGTH	include/emv.h	94;"	d
EMV_MIN_PIN_LENGTH	include/emv.h	97;"	d
EMV_PAN_LENGTH	include/emv.h	116;"	d
EMV_PAN_LEN_MAX	include/emv.h	132;"	d
EMV_PIN_TRY_COUNTER_LENGTH	include/emv.h	96;"	d
EMV_RID_LENGTH	include/emv.h	80;"	d
EMV_SHA1_HASH_LENGTH	include/emv.h	118;"	d
EMV_SUPPORTED_APP_VERSIONS	include/emv.h	86;"	d
EMV_T2_DATA_LEN_MAX	include/emv.h	131;"	d
EMV_TAC_LENGTH	include/emv.h	119;"	d
EMV_TAG_REC	ctlsmod.c	/^} EMV_TAG_REC;$/;"	t	typeref:struct:__anon6	file:
EMV_TERMCAP_LENGTH	include/emv.h	125;"	d
EMV_TERMINAL_ID_LENGTH	include/emv.h	127;"	d
EMV_TERMINAL_SERIAL_LENGTH	include/emv.h	128;"	d
EMV_TERM_TYPE_LENGTH	include/emv.h	124;"	d
EMV_TRANSACTION_TYPE_LENGTH	include/emv.h	120;"	d
EMV_TRANS_CAT_CODE_LENGTH	include/emv.h	114;"	d
EMV_TSI_LENGTH	include/emv.h	121;"	d
EMV_TVR_LENGTH	include/emv.h	122;"	d
ENOUGH	include/inftrees.h	43;"	d
ERRFUNC	lua/loadlib.c	40;"	d	file:
ERRLIB	lua/loadlib.c	39;"	d	file:
ERR_COMMS_ALREADYCLOSED	include/comms.h	56;"	d
ERR_COMMS_ALREADYOPEN	include/comms.h	55;"	d
ERR_COMMS_CANCEL	include/comms.h	66;"	d
ERR_COMMS_CARRIER_LOST	include/comms.h	49;"	d
ERR_COMMS_CONNECT_FAILURE	include/comms.h	31;"	d
ERR_COMMS_CONNECT_NOT_SUPPORTED	include/comms.h	30;"	d
ERR_COMMS_CTS_LOW	include/comms.h	60;"	d
ERR_COMMS_ENGAGED_TONE	include/comms.h	45;"	d
ERR_COMMS_ERROR	include/comms.h	32;"	d
ERR_COMMS_ETH_CMD_SEND	include/comms.h	77;"	d
ERR_COMMS_ETH_CONNECTION_ABORTED	include/comms.h	74;"	d
ERR_COMMS_ETH_INVALID_RESP	include/comms.h	79;"	d
ERR_COMMS_ETH_IPCP_FAILED	include/comms.h	73;"	d
ERR_COMMS_ETH_NOT_CONNECTED	include/comms.h	76;"	d
ERR_COMMS_ETH_NO_IPADDR	include/comms.h	80;"	d
ERR_COMMS_ETH_NO_RESP	include/comms.h	78;"	d
ERR_COMMS_ETH_TCP_SHUTDOWN	include/comms.h	75;"	d
ERR_COMMS_FEATURE_NOT_SUPPORTED	include/comms.h	69;"	d
ERR_COMMS_FUNC_NOT_SUPPORTED	include/comms.h	28;"	d
ERR_COMMS_GENERAL	include/comms.h	52;"	d
ERR_COMMS_INTERCHAR_TIMEOUT	include/comms.h	64;"	d
ERR_COMMS_INVALID_PARM	include/comms.h	68;"	d
ERR_COMMS_LOW_BATTERY	include/comms.h	37;"	d
ERR_COMMS_LOW_SIGNAL	include/comms.h	36;"	d
ERR_COMMS_NETWORK_LOST	include/comms.h	40;"	d
ERR_COMMS_NONE	include/comms.h	26;"	d
ERR_COMMS_NOSPACE	include/comms.h	54;"	d
ERR_COMMS_NOTFOUND	include/comms.h	58;"	d
ERR_COMMS_NOTOWNER	include/comms.h	57;"	d
ERR_COMMS_NOT_CONNECTED	include/comms.h	62;"	d
ERR_COMMS_NOT_DIALED	include/comms.h	67;"	d
ERR_COMMS_NO_ANSWER	include/comms.h	46;"	d
ERR_COMMS_NO_COVERAGE	include/comms.h	38;"	d
ERR_COMMS_NO_DIAL_TONE	include/comms.h	47;"	d
ERR_COMMS_NO_LINE	include/comms.h	65;"	d
ERR_COMMS_NO_PDPCONTEXT	include/comms.h	39;"	d
ERR_COMMS_NO_PHONE_NO	include/comms.h	48;"	d
ERR_COMMS_NO_SIGNAL	include/comms.h	35;"	d
ERR_COMMS_PORT_NOT_OPEN	include/comms.h	61;"	d
ERR_COMMS_PORT_USED	include/comms.h	70;"	d
ERR_COMMS_PPP_LCP_FAILED	include/comms.h	72;"	d
ERR_COMMS_PPP_PAP_CHAP_FAILED	include/comms.h	71;"	d
ERR_COMMS_RECEIVE_FAILURE	include/comms.h	42;"	d
ERR_COMMS_RECEIVE_TIMEOUT	include/comms.h	43;"	d
ERR_COMMS_SENDING_ERROR	include/comms.h	51;"	d
ERR_COMMS_SIM	include/comms.h	34;"	d
ERR_COMMS_SSL_CERT_EXPIRED	include/comms.h	94;"	d
ERR_COMMS_SSL_CERT_NOT_YET_VALID	include/comms.h	93;"	d
ERR_COMMS_SSL_CERT_REJECTED	include/comms.h	88;"	d
ERR_COMMS_SSL_DECODING_PUBLIC_KEY	include/comms.h	91;"	d
ERR_COMMS_SSL_GENERAL	include/comms.h	95;"	d
ERR_COMMS_SSL_INVALID_CA	include/comms.h	86;"	d
ERR_COMMS_SSL_NO_ISSUER_CA	include/comms.h	84;"	d
ERR_COMMS_SSL_NO_ROOT_CA	include/comms.h	83;"	d
ERR_COMMS_SSL_SELF_SIGNED	include/comms.h	82;"	d
ERR_COMMS_SSL_SIGNATURE_FAILURE	include/comms.h	92;"	d
ERR_COMMS_SSL_UNTRUSTED_CERT	include/comms.h	89;"	d
ERR_COMMS_SSL_UNTRUSTED_SGL_CERT	include/comms.h	85;"	d
ERR_COMMS_SSL_WEAK_KEY	include/comms.h	90;"	d
ERR_COMMS_SSL_WRONG_PURPOSE_CA	include/comms.h	87;"	d
ERR_COMMS_TIMEOUT	include/comms.h	63;"	d
ERR_COMS_OFFSET	include/comms.h	24;"	d
ERR_EMV_ALREADY_INIT	include/emv.h	/^    ERR_EMV_ALREADY_INIT,				\/* 102-Initialisation function has been called already (102) *\/$/;"	e	enum:E_EMV
ERR_EMV_APPLICATION_BLOCKED	include/emv.h	/^    ERR_EMV_APPLICATION_BLOCKED,		\/* 112-One or more applications on the card is\/are blocked. Fallback to magnetic-stripe$/;"	e	enum:E_EMV
ERR_EMV_CANDIDATE_LIST_EMPTY	include/emv.h	/^    ERR_EMV_CANDIDATE_LIST_EMPTY,		\/* 115-No applications could be found that are supported$/;"	e	enum:E_EMV
ERR_EMV_CAPK_CHECKSUM	include/emv.h	/^	ERR_EMV_CAPK_CHECKSUM,				\/* 124-CAPK checksum is invalid (124) *\/$/;"	e	enum:E_EMV
ERR_EMV_CAPK_DATA	include/emv.h	/^	ERR_EMV_CAPK_DATA,					\/* 122-CAPK data is missing (122) *\/$/;"	e	enum:E_EMV
ERR_EMV_CAPK_EXPIRED	include/emv.h	/^	ERR_EMV_CAPK_EXPIRED,				\/* 123-CAPK has expired (123) *\/$/;"	e	enum:E_EMV
ERR_EMV_CARD_BLOCKED	include/emv.h	/^    ERR_EMV_CARD_BLOCKED,				\/* 118-Card is blocked. Fallback to magnetic-stripe operation should not be allowed (118) *\/$/;"	e	enum:E_EMV
ERR_EMV_CARD_ERROR	include/emv.h	/^    ERR_EMV_CARD_ERROR,					\/* 113-Invalid response was received from the card (113) *\/$/;"	e	enum:E_EMV
ERR_EMV_CARD_FAILURE	include/emv.h	/^    ERR_EMV_CARD_FAILURE,				\/* 114-Error occurred during communication with the$/;"	e	enum:E_EMV
ERR_EMV_CARD_REMOVED	include/emv.h	/^    ERR_EMV_CARD_REMOVED,				\/* 101-Card was removed before the transaction was completed (101) *\/$/;"	e	enum:E_EMV
ERR_EMV_CBFN_ERROR	include/emv.h	/^	ERR_EMV_CBFN_ERROR,					\/* 121-Callback function returned an error (121) *\/$/;"	e	enum:E_EMV
ERR_EMV_CLIENT_ABORTED	include/emv.h	/^    ERR_EMV_CLIENT_ABORTED,				\/* 116-Client application requested that the transaction be aborted (116) *\/$/;"	e	enum:E_EMV
ERR_EMV_CLIENT_BACKSTEP	include/emv.h	/^    ERR_EMV_CLIENT_BACKSTEP,			\/* 117-Client application requested that the transaction$/;"	e	enum:E_EMV
ERR_EMV_CONFIG_ERROR	include/emv.h	/^    ERR_EMV_CONFIG_ERROR,				\/* 106-Data required to start a transaction has not be set in the module (106) *\/$/;"	e	enum:E_EMV
ERR_EMV_DATA_NOT_AVAILIBLE	include/emv.h	/^    ERR_EMV_DATA_NOT_AVAILIBLE,			\/* 103-Requested data is not available (103) *\/$/;"	e	enum:E_EMV
ERR_EMV_DECLINE_OFFLINE	include/emv.h	/^	ERR_EMV_DECLINE_OFFLINE,			\/* 125-Transaction should be declined offline (125) *\/$/;"	e	enum:E_EMV
ERR_EMV_EXPLICIT_SELECT_REQD	include/emv.h	/^	ERR_EMV_EXPLICIT_SELECT_REQD,		\/* 120-Application must be selected explicitly (ie: cannot be selected automatically) (120) *\/$/;"	e	enum:E_EMV
ERR_EMV_FAILURE	include/emv.h	/^    ERR_EMV_FAILURE = 100,				\/* 100-A critical error occurred (100)*\/$/;"	e	enum:E_EMV
ERR_EMV_FUNCTION_MISSING	include/emv.h	/^    ERR_EMV_FUNCTION_MISSING,			\/* 109-Required callback function required has not been implemented (109) *\/$/;"	e	enum:E_EMV
ERR_EMV_INVALID_PARAMETER	include/emv.h	/^    ERR_EMV_INVALID_PARAMETER,			\/* 108-Operation failed because an invalid parameter was passed in (108) *\/$/;"	e	enum:E_EMV
ERR_EMV_NONE	include/emv.h	/^    ERR_EMV_NONE = 0,					\/* Operation completed successfully *\/$/;"	e	enum:E_EMV
ERR_EMV_NO_RETRY_FAILURE	include/emv.h	/^	ERR_EMV_NO_RETRY_FAILURE,			\/* 119-An error occurred when the selected application$/;"	e	enum:E_EMV
ERR_EMV_PARAMETER_SET_FAILED	include/emv.h	/^    ERR_EMV_PARAMETER_SET_FAILED,		\/* 104-Parameter set\/update operation failed (104) *\/$/;"	e	enum:E_EMV
ERR_EMV_PIN_CANCEL	include/emv.h	/^    ERR_EMV_PIN_CANCEL,					\/* 111-Operation was cancelled by the user at the PIN entry stage (111) *\/$/;"	e	enum:E_EMV
ERR_EMV_PIN_TIMEOUT	include/emv.h	/^    ERR_EMV_PIN_TIMEOUT,				\/* 110-Operation timed out waiting for the user to enter a PIN (110) *\/$/;"	e	enum:E_EMV
ERR_EMV_REQUIRED_DATA_MISSING	include/emv.h	/^    ERR_EMV_REQUIRED_DATA_MISSING,		\/* 107-Data required to complete the transaction is not available (107) *\/$/;"	e	enum:E_EMV
ERR_EMV_TABLE_FULL	include/emv.h	/^    ERR_EMV_TABLE_FULL,					\/* 105-Configuration data tables maintained	by the module are full (105) *\/$/;"	e	enum:E_EMV
ERR_GO_ONLINE	include/emv.h	/^	ERR_GO_ONLINE,						\/* 126-Transaction has to be sent online 126*\/$/;"	e	enum:E_EMV
ERR_MSG	include/zutil.h	56;"	d
ERR_RETURN	include/zutil.h	58;"	d
EST_CAPK_INDEX_INVALID	include/emv.h	168;"	d
EST_REC_AID_MAX	include/emv.h	154;"	d
EST_REC_CAPK_MAX	include/emv.h	155;"	d
EVT_CTLS_CARD	include/inputmacro.h	180;"	d
EVT_INIT	include/inputmacro.h	175;"	d
EVT_INIT0	include/inputmacro.h	179;"	d
EVT_INIT2	include/inputmacro.h	176;"	d
EVT_IP_CONNECTION	include/inputmacro.h	168;"	d
EVT_IP_DATA	include/inputmacro.h	169;"	d
EVT_LAST	include/inputmacro.h	177;"	d
EVT_LAST2	include/inputmacro.h	178;"	d
EVT_MCR	include/inputmacro.h	167;"	d
EVT_MODEM_CONNECTION	include/inputmacro.h	173;"	d
EVT_MODEM_DATA	include/inputmacro.h	174;"	d
EVT_NONE	include/inputmacro.h	163;"	d
EVT_SCT_IN	include/inputmacro.h	165;"	d
EVT_SCT_OUT	include/inputmacro.h	166;"	d
EVT_SERIAL2_DATA	include/inputmacro.h	172;"	d
EVT_SERIAL_CONNECTION	include/inputmacro.h	170;"	d
EVT_SERIAL_DATA	include/inputmacro.h	171;"	d
EVT_TIMEOUT	include/inputmacro.h	164;"	d
EVT_TOUCH	include/inputmacro.h	181;"	d
EXLEN	include/inflate.h	/^    EXLEN,      \/* i: waiting for extra length (gzip) *\/$/;"	e	enum:__anon36
EXTRA	include/inflate.h	/^    EXTRA,      \/* i: waiting for extra bytes (gzip) *\/$/;"	e	enum:__anon36
E_COMMS_FUNC	include/comms.h	/^} E_COMMS_FUNC;$/;"	t	typeref:enum:__anon31
E_COMMS_FUNC_CONNECT	include/comms.h	/^	E_COMMS_FUNC_CONNECT,$/;"	e	enum:__anon31
E_COMMS_FUNC_DATA_AVAILABLE	include/comms.h	/^	E_COMMS_FUNC_DATA_AVAILABLE,$/;"	e	enum:__anon31
E_COMMS_FUNC_DISCONNECT	include/comms.h	/^	E_COMMS_FUNC_DISCONNECT,$/;"	e	enum:__anon31
E_COMMS_FUNC_DISP_GPRS_STS	include/comms.h	/^	E_COMMS_FUNC_DISP_GPRS_STS,$/;"	e	enum:__anon31
E_COMMS_FUNC_PING	include/comms.h	/^	E_COMMS_FUNC_PING$/;"	e	enum:__anon31
E_COMMS_FUNC_PSTN_WAIT	include/comms.h	/^	E_COMMS_FUNC_PSTN_WAIT,$/;"	e	enum:__anon31
E_COMMS_FUNC_RECEIVE	include/comms.h	/^	E_COMMS_FUNC_RECEIVE,$/;"	e	enum:__anon31
E_COMMS_FUNC_SEND	include/comms.h	/^	E_COMMS_FUNC_SEND,$/;"	e	enum:__anon31
E_COMMS_FUNC_SERIAL2_DATA_AVAILABLE	include/comms.h	/^	E_COMMS_FUNC_SERIAL2_DATA_AVAILABLE,$/;"	e	enum:__anon31
E_COMMS_FUNC_SERIAL_DATA_AVAILABLE	include/comms.h	/^	E_COMMS_FUNC_SERIAL_DATA_AVAILABLE,$/;"	e	enum:__anon31
E_COMMS_FUNC_SET_SERIAL	include/comms.h	/^	E_COMMS_FUNC_SET_SERIAL,$/;"	e	enum:__anon31
E_COMMS_FUNC_SIGNAL_STRENGTH	include/comms.h	/^	E_COMMS_FUNC_SIGNAL_STRENGTH,$/;"	e	enum:__anon31
E_COMMS_FUNC_SYNC_SWITCH	include/comms.h	/^	E_COMMS_FUNC_SYNC_SWITCH,$/;"	e	enum:__anon31
E_CONNECTION_TYPE	include/comms.h	/^} E_CONNECTION_TYPE;$/;"	t	typeref:enum:__anon32
E_CONNECTION_TYPE_IP	include/comms.h	/^	E_CONNECTION_TYPE_IP,$/;"	e	enum:__anon32
E_CONNECTION_TYPE_IP_SETUP	include/comms.h	/^	E_CONNECTION_TYPE_IP_SETUP,$/;"	e	enum:__anon32
E_CONNECTION_TYPE_LAST	include/comms.h	/^	E_CONNECTION_TYPE_LAST$/;"	e	enum:__anon32
E_CONNECTION_TYPE_PSTN	include/comms.h	/^	E_CONNECTION_TYPE_PSTN,$/;"	e	enum:__anon32
E_CONNECTION_TYPE_UART_1	include/comms.h	/^	E_CONNECTION_TYPE_UART_1,$/;"	e	enum:__anon32
E_CONNECTION_TYPE_UART_2	include/comms.h	/^	E_CONNECTION_TYPE_UART_2,$/;"	e	enum:__anon32
E_EMV	include/emv.h	/^typedef enum	E_EMV$/;"	g
E_EMV	include/emv.h	/^} E_EMV;$/;"	t	typeref:enum:E_EMV
E_HEADER	include/comms.h	/^} E_HEADER;$/;"	t	typeref:enum:__anon33
E_HEADER_CBA_LENGTH	include/comms.h	/^	E_HEADER_CBA_LENGTH,$/;"	e	enum:__anon33
E_HEADER_CLNP	include/comms.h	/^	E_HEADER_CLNP,$/;"	e	enum:__anon33
E_HEADER_HTTP	include/comms.h	/^	E_HEADER_HTTP,$/;"	e	enum:__anon33
E_HEADER_HTTPS	include/comms.h	/^	E_HEADER_HTTPS,$/;"	e	enum:__anon33
E_HEADER_LENGTH	include/comms.h	/^	E_HEADER_LENGTH,$/;"	e	enum:__anon33
E_HEADER_MAX	include/comms.h	/^	E_HEADER_MAX$/;"	e	enum:__anon33
E_HEADER_NONE	include/comms.h	/^	E_HEADER_NONE = 0,$/;"	e	enum:__anon33
E_HEADER_SSL	include/comms.h	/^	E_HEADER_SSL,$/;"	e	enum:__anon33
E_HEADER_SSL_LENGTH	include/comms.h	/^	E_HEADER_SSL_LENGTH,$/;"	e	enum:__anon33
E_HEADER_TPDU_20	include/comms.h	/^	E_HEADER_TPDU_20,$/;"	e	enum:__anon33
E_HEADER_TPDU_30	include/comms.h	/^	E_HEADER_TPDU_30,$/;"	e	enum:__anon33
E_HEADER_TPDU_WESTPAC	include/comms.h	/^	E_HEADER_TPDU_WESTPAC,$/;"	e	enum:__anon33
E_INP_AMOUNT_ENTRY	include/Input.h	/^	E_INP_AMOUNT_ENTRY,$/;"	e	enum:__anon21
E_INP_DATE_ENTRY	include/Input.h	/^	E_INP_DATE_ENTRY,$/;"	e	enum:__anon21
E_INP_DECIMAL_ENTRY	include/Input.h	/^	E_INP_DECIMAL_ENTRY,$/;"	e	enum:__anon21
E_INP_ENTRY_TYPE	include/Input.h	/^} E_INP_ENTRY_TYPE;$/;"	t	typeref:enum:__anon21
E_INP_MMYY_ENTRY	include/Input.h	/^	E_INP_MMYY_ENTRY,$/;"	e	enum:__anon21
E_INP_NO_ENTRY	include/Input.h	/^	E_INP_NO_ENTRY = 0,$/;"	e	enum:__anon21
E_INP_PERCENT_ENTRY	include/Input.h	/^	E_INP_PERCENT_ENTRY,$/;"	e	enum:__anon21
E_INP_PIN	include/Input.h	/^	E_INP_PIN,$/;"	e	enum:__anon21
E_INP_STRING_ALPHANUMERIC_ENTRY	include/Input.h	/^	E_INP_STRING_ALPHANUMERIC_ENTRY,$/;"	e	enum:__anon21
E_INP_STRING_ALPHANUMERIC_ENTRY_1	include/Input.h	/^	E_INP_STRING_ALPHANUMERIC_ENTRY_1,$/;"	e	enum:__anon21
E_INP_STRING_ENTRY	include/Input.h	/^	E_INP_STRING_ENTRY,$/;"	e	enum:__anon21
E_INP_STRING_HEX_ENTRY	include/Input.h	/^	E_INP_STRING_HEX_ENTRY,$/;"	e	enum:__anon21
E_INP_TIME_ENTRY	include/Input.h	/^	E_INP_TIME_ENTRY$/;"	e	enum:__anon21
E_PRINT	include/printer.h	/^} E_PRINT;$/;"	t	typeref:enum:__anon42
E_PRINT_APPEND	include/printer.h	/^	E_PRINT_APPEND,$/;"	e	enum:__anon42
E_PRINT_END	include/printer.h	/^	E_PRINT_END$/;"	e	enum:__anon42
E_PRINT_START	include/printer.h	/^	E_PRINT_START,$/;"	e	enum:__anon42
E_PRINT_STATE	printer.c	/^} E_PRINT_STATE;$/;"	t	typeref:enum:__anon15	file:
E_PRINT_STATE_BARCODE_EAN128	printer.c	/^	E_PRINT_STATE_BARCODE_EAN128,$/;"	e	enum:__anon15	file:
E_PRINT_STATE_BARCODE_EAN13	printer.c	/^	E_PRINT_STATE_BARCODE_EAN13,$/;"	e	enum:__anon15	file:
E_PRINT_STATE_DEFAULT	printer.c	/^	E_PRINT_STATE_DEFAULT = 0,$/;"	e	enum:__anon15	file:
E_PRINT_STATE_ESCAPE	printer.c	/^	E_PRINT_STATE_ESCAPE,$/;"	e	enum:__anon15	file:
E_PRINT_STATE_FIRST_0	printer.c	/^	E_PRINT_STATE_FIRST_0,$/;"	e	enum:__anon15	file:
E_PRINT_STATE_FIRST_9	printer.c	/^	E_PRINT_STATE_FIRST_9,$/;"	e	enum:__anon15	file:
E_PRINT_STATE_K	printer.c	/^	E_PRINT_STATE_K,$/;"	e	enum:__anon15	file:
E_PRINT_STATE_SECOND_03	printer.c	/^	E_PRINT_STATE_SECOND_03,$/;"	e	enum:__anon15	file:
E_PRINT_STATE_SECOND_04	printer.c	/^	E_PRINT_STATE_SECOND_04,$/;"	e	enum:__anon15	file:
E_PRINT_STATE_SECOND_90	printer.c	/^	E_PRINT_STATE_SECOND_90,$/;"	e	enum:__anon15	file:
E_PRINT_STATE_SECOND_99	printer.c	/^	E_PRINT_STATE_SECOND_99,$/;"	e	enum:__anon15	file:
E_PRT_ERR	include/printer.h	/^} E_PRT_ERR;$/;"	t	typeref:enum:__anon41
E_PRT_ERR_CONNECTION_FAILED	include/printer.h	/^	E_PRT_ERR_CONNECTION_FAILED,$/;"	e	enum:__anon41
E_PRT_ERR_FIRMWARE	include/printer.h	/^	E_PRT_ERR_FIRMWARE,$/;"	e	enum:__anon41
E_PRT_ERR_GENERAL	include/printer.h	/^	E_PRT_ERR_GENERAL$/;"	e	enum:__anon41
E_PRT_ERR_GRAPHICS	include/printer.h	/^	E_PRT_ERR_GRAPHICS,$/;"	e	enum:__anon41
E_PRT_ERR_MECHANISM	include/printer.h	/^	E_PRT_ERR_MECHANISM,$/;"	e	enum:__anon41
E_PRT_ERR_NONE	include/printer.h	/^	E_PRT_ERR_NONE = 0,$/;"	e	enum:__anon41
E_PRT_ERR_PAPER_OUT	include/printer.h	/^	E_PRT_ERR_PAPER_OUT,$/;"	e	enum:__anon41
E_PRT_ERR_SEND_FAILED	include/printer.h	/^	E_PRT_ERR_SEND_FAILED,$/;"	e	enum:__anon41
EmvAidLoad	emvAid.c	/^void	EmvAidLoad(void)$/;"	f
EmvCallbackFnInit	emvCallback.c	/^int	EmvCallbackFnInit(void)$/;"	f
EmvCallbackFnPromptManager	emvCallback.c	/^void	EmvCallbackFnPromptManager(unsigned short usPromptId)$/;"	f
EmvCallbackFnSelectAppMenu	emvCallback.c	/^int	EmvCallbackFnSelectAppMenu(char **pcMenuItems, int iMenuItemsTotal)$/;"	f
EmvCallbackIsCardBlackListed	emvCallback.c	/^EMVBoolean	EmvCallbackIsCardBlackListed(unsigned char *pucPan,$/;"	f
EmvCardPowerOff	emv.c	/^int	EmvCardPowerOff(void)$/;"	f
EmvCardholderVerify	emv.c	/^int	EmvCardholderVerify(void)$/;"	f
EmvDbAidDataInit	emvAid.c	/^void	EmvDbAidDataInit(void)$/;"	f
EmvDbEstRecLoad	emvAid.c	/^static int	EmvDbEstRecLoad(int iRecNo)$/;"	f	file:
EmvDbEstRecRestore	emvAid.c	/^static int	EmvDbEstRecRestore(void)$/;"	f	file:
EmvDbGetAidIndex	emvAid.c	/^int		EmvDbGetAidIndex(const unsigned char *pbAid)$/;"	f
EmvDbGetAidRecord	emvAid.c	/^int	EmvDbGetAidRecord(int iAidIndex, EMV_AID_RECORD *psRecord)$/;"	f
EmvDbMvtRecLoad	emvAid.c	/^static int	EmvDbMvtRecLoad(int iRecNo)$/;"	f	file:
EmvDbMvtRecRestore	emvAid.c	/^static int	EmvDbMvtRecRestore(void)$/;"	f	file:
EmvFnAmtEntry	emvCallback.c	/^unsigned short	EmvFnAmtEntry(unsigned long *pulTxnAmt)$/;"	f
EmvFnLastAmtEntry	emvCallback.c	/^unsigned short	EmvFnLastAmtEntry(unsigned long *pulTxnAmt)$/;"	f
EmvFnOfflinePin	emvCallback.c	/^unsigned short EmvFnOfflinePin(unsigned char *pin)$/;"	f
EmvFnOnlinePin	emvCallback.c	/^unsigned short EmvFnOnlinePin(void)$/;"	f
EmvGetAmtCallback	emv.c	/^int EmvGetAmtCallback(void)$/;"	f
EmvGetPTermID	emv.c	/^int EmvGetPTermID(char *ptid)$/;"	f
EmvGetTacIac	emvmisc.c	/^int EmvGetTacIac(char * tac_df, char * tac_dn, char *tac_ol, char * iac_df, char *iac_dn, char *iac_ol)$/;"	f
EmvGetTagData	emvmisc.c	/^int		EmvGetTagData(const unsigned char* pcTag, unsigned char* pbDataBuf, int *piTagLength, int iDataBufLen)$/;"	f
EmvGetTagDataRaw	emvmisc.c	/^int EmvGetTagDataRaw( unsigned short pcTag, char *databuf)$/;"	f
EmvGetUsrPin	emvCallback.c	/^unsigned short	EmvGetUsrPin(unsigned char *ucPin)$/;"	f
EmvIsCardPresent	emv.c	/^bool EmvIsCardPresent(void)$/;"	f
EmvMiscAidMatchLen	emvAid.c	/^int		EmvMiscAidMatchLen(unsigned char* pbAid1, unsigned char* pbAid2)$/;"	f
EmvMiscAscii2LenBinArray	emvAid.c	/^int	EmvMiscAscii2LenBinArray(char* pcDataAscii, int iDataAsciiLen, unsigned  char* pbDataBin, int iDataBinLenMax)$/;"	f
EmvMiscTagDataLen	emvmisc.c	/^unsigned short	EmvMiscTagDataLen(const unsigned char* pcTagLenBytes)$/;"	f
EmvMiscTagLenLen	emvmisc.c	/^unsigned short	EmvMiscTagLenLen(const unsigned char* pcTagLenBytes)$/;"	f
EmvMiscVerixVEmvErr2RisEmvErr	emvmisc.c	/^int	EmvMiscVerixVEmvErr2RisEmvErr(int iVerixVEmvErr)$/;"	f
EmvProcess1stAC	emv.c	/^int	EmvProcess1stAC(void)$/;"	f
EmvSetAccount	emv.c	/^int EmvSetAccount(unsigned char emvAcc)$/;"	f
EmvSetAmt	emv.c	/^int EmvSetAmt(long emvAmount,long emvCash)$/;"	f
EmvSetTagData	emvmisc.c	/^int	EmvSetTagData(const unsigned char* pcTag,const unsigned char* pbDataBuf, int iDataBufLen)$/;"	f
EmvSignature	emvCallback.c	/^unsigned short	EmvSignature(void)$/;"	f
EmvTag2VxTag	emvmisc.c	/^unsigned short	EmvTag2VxTag(const unsigned char* pcTag)$/;"	f
EmvTagLen	emvmisc.c	/^unsigned short	EmvTagLen(const unsigned char* pcTag)$/;"	f
EmvUseHostData	emv.c	/^int EmvUseHostData(int hostDecision,const char *hexdata,short len)$/;"	f
Enabled	ctlsmod.c	/^	int Enabled;$/;"	m	struct:__anon8	file:
F	sha1.c	119;"	d	file:
F	sha1.c	121;"	d	file:
F	sha1.c	146;"	d	file:
F	sha1.c	148;"	d	file:
F	sha1.c	173;"	d	file:
F	sha1.c	175;"	d	file:
F	sha1.c	200;"	d	file:
F	sha1.c	94;"	d	file:
FAR	include/zconf.h	185;"	d
FAR	include/zconf.h	187;"	d
FAR	include/zconf.h	194;"	d
FAR	include/zconf.h	196;"	d
FAR	include/zconf.h	220;"	d
FAR	include/zconf.h	257;"	d
FAR	include/zconf.h	311;"	d
FH_ERR	include/auris.h	66;"	d
FH_NEW	include/auris.h	61;"	d
FH_NEW_RDWR	include/auris.h	63;"	d
FH_OK	include/auris.h	65;"	d
FH_RDONLY	include/auris.h	60;"	d
FH_RDWR	include/auris.h	62;"	d
FILE_HANDLE	include/auris.h	72;"	d
FLAGS	include/inflate.h	/^    FLAGS,      \/* i: waiting for method and flags (gzip) *\/$/;"	e	enum:__anon36
FLAGS	lua/lstrlib.c	688;"	d	file:
FREELIST_REF	lua/lauxlib.c	28;"	d	file:
FUNC_COMMS	include/comms.h	115;"	d
FUNC_COMMS_ERROR_DESC	include/comms.h	116;"	d
F_OPEN	include/zutil.h	110;"	d
F_OPEN	include/zutil.h	173;"	d
FileExist	iris.c	/^bool FileExist(const char *filename)$/;"	f
FileExist	iris_old.c	/^bool FileExist(const char *filename)$/;"	f
FileRemove	iris.c	/^bool FileRemove(const char *filename)$/;"	f
FileRemove	iris_old.c	/^bool FileRemove(const char *filename)$/;"	f
FileRename	iris.c	/^bool FileRename(const char *ofilename,const char *nfilename)$/;"	f
FileRename	iris_old.c	/^bool FileRename(const char *ofilename,const char *nfilename)$/;"	f
FloorLimit	ctlsmod.c	/^	unsigned char FloorLimit[4];		\/\/ x9F1B - Termnal Floor Limit$/;"	m	struct:__anon8	file:
FloorLimitExists	ctlsmod.c	/^	int FloorLimitExists;$/;"	m	struct:__anon8	file:
GCFINALIZECOST	lua/lgc.c	29;"	d	file:
GCSTEPSIZE	lua/lgc.c	26;"	d	file:
GCSWEEPCOST	lua/lgc.c	28;"	d	file:
GCSWEEPMAX	lua/lgc.c	27;"	d	file:
GCTM	lua/lgc.c	/^static void GCTM (lua_State *L) {$/;"	f	file:
GET_ALL_AIDS	ctlsmod.c	/^	GET_VER, GET_LCD, STORE_LCD, SET_LCD, GET_ALL_AIDS, SET_CFG_AID, SET_CAPK, DEL_ALL_CAPK, GET_PRODUCT_TYPE,$/;"	e	enum:__anon2	file:
GET_ALL_GRPS	ctlsmod.c	/^	CANCEL_TRANSACTION, DEL_CFG_GROUP, SET_CFG_GROUP, DEL_CFG_AID, GET_CFG_AID, GET_CFG_GRP, GET_ALL_GRPS$/;"	e	enum:__anon2	file:
GET_CAPA	ctlsmod.c	/^	GET_CAPA, SET_CAPA, SALE_TRAN, SHOW_STS, GET_DATETIME, SET_DATETIME, GET_PARAMS,$/;"	e	enum:__anon9	file:
GET_CFG_AID	ctlsmod.c	/^	CANCEL_TRANSACTION, DEL_CFG_GROUP, SET_CFG_GROUP, DEL_CFG_AID, GET_CFG_AID, GET_CFG_GRP, GET_ALL_GRPS$/;"	e	enum:__anon2	file:
GET_CFG_GRP	ctlsmod.c	/^	CANCEL_TRANSACTION, DEL_CFG_GROUP, SET_CFG_GROUP, DEL_CFG_AID, GET_CFG_AID, GET_CFG_GRP, GET_ALL_GRPS$/;"	e	enum:__anon2	file:
GET_CVMCAPA	ctlsmod.c	/^	GET_VISAPK, SET_VISAPK, GET_EMVTAGS, SET_EMVTAGS, GET_CVMCAPA$/;"	e	enum:__anon9	file:
GET_DATETIME	ctlsmod.c	/^	GET_CAPA, SET_CAPA, SALE_TRAN, SHOW_STS, GET_DATETIME, SET_DATETIME, GET_PARAMS,$/;"	e	enum:__anon9	file:
GET_EMVTAGS	ctlsmod.c	/^	GET_VISAPK, SET_VISAPK, GET_EMVTAGS, SET_EMVTAGS, GET_CVMCAPA$/;"	e	enum:__anon9	file:
GET_EMV_CONFIG	ctlsmod.c	/^	SET_BAUD = 0, PING, PASSTHRU, SET_LED, SET_POLL, ACTIVATE_TRAN, SET_DISP, UPDATE_BAL, GET_EMV_CONFIG, SET_EMV_CONFIG,$/;"	e	enum:__anon2	file:
GET_KEYS	ctlsmod.c	/^	POLL = 0, ECHO, RESET, INITCOMMS, MUTUAL_AUTH, GET_KEYS, INV_READER, SWITCH_ADMIN,$/;"	e	enum:__anon9	file:
GET_LCD	ctlsmod.c	/^	GET_VER, GET_LCD, STORE_LCD, SET_LCD, GET_ALL_AIDS, SET_CFG_AID, SET_CAPK, DEL_ALL_CAPK, GET_PRODUCT_TYPE,$/;"	e	enum:__anon2	file:
GET_PARAMS	ctlsmod.c	/^	GET_CAPA, SET_CAPA, SALE_TRAN, SHOW_STS, GET_DATETIME, SET_DATETIME, GET_PARAMS,$/;"	e	enum:__anon9	file:
GET_PRODUCT_TYPE	ctlsmod.c	/^	GET_VER, GET_LCD, STORE_LCD, SET_LCD, GET_ALL_AIDS, SET_CFG_AID, SET_CAPK, DEL_ALL_CAPK, GET_PRODUCT_TYPE,$/;"	e	enum:__anon2	file:
GET_UINT32	sha1.c	25;"	d	file:
GET_VER	ctlsmod.c	/^	GET_VER, GET_LCD, STORE_LCD, SET_LCD, GET_ALL_AIDS, SET_CFG_AID, SET_CAPK, DEL_ALL_CAPK, GET_PRODUCT_TYPE,$/;"	e	enum:__anon2	file:
GET_VISAPK	ctlsmod.c	/^	GET_VISAPK, SET_VISAPK, GET_EMVTAGS, SET_EMVTAGS, GET_CVMCAPA$/;"	e	enum:__anon9	file:
GPRSProgress	comms.c	/^static void GPRSProgress(char * data)$/;"	f	file:
GPRS_CONNECTED	include/IrisComm.h	28;"	d
GPRS_DISCONNECTED	include/IrisComm.h	29;"	d
GUNZIP	include/inflate.h	16;"	d
GetConnStatus	IrisComm.c	/^static int GetConnStatus (int iNWIFHandle)$/;"	f	file:
GetCurrMediaInfo	IrisComm.c	/^static stNIInfo GetCurrMediaInfo (stNIInfo stArray[], int arrayCount, const char* szMedia)$/;"	f	file:
GetSetEmvPin	emvCallback.c	/^int GetSetEmvPin( unsigned short action,unsigned char *pin)$/;"	f
GroupNo	ctlsmod.c	/^	int GroupNo;						\/\/ xFFE4 - Group Number$/;"	m	struct:__anon8	file:
HAVE_MEMCPY	include/zutil.h	222;"	d
HAVE_VSNPRINTF	include/zutil.h	180;"	d
HAVE_VSNPRINTF	include/zutil.h	185;"	d
HCRC	include/inflate.h	/^    HCRC,       \/* i: waiting for header crc (gzip) *\/$/;"	e	enum:__anon36
HEAD	include/inflate.h	/^    HEAD,       \/* i: waiting for magic header *\/$/;"	e	enum:__anon36
HEX__	Prtean13.c	50;"	d	file:
HexAscii2Byte	emvAid.c	/^static char HexAscii2Byte (char * ptData)$/;"	f	file:
HiddenAttribute	input.c	/^static bool HiddenAttribute;$/;"	v	file:
HiddenString	input.c	/^const char HiddenString[] = "********************";$/;"	v
IF	lua/lundump.c	31;"	d	file:
IF	lua/lundump.c	34;"	d	file:
INITBITS	inflate.c	411;"	d	file:
INITCOMMS	ctlsmod.c	/^	POLL = 0, ECHO, RESET, INITCOMMS, MUTUAL_AUTH, GET_KEYS, INV_READER, SWITCH_ADMIN,$/;"	e	enum:__anon9	file:
INV_READER	ctlsmod.c	/^	POLL = 0, ECHO, RESET, INITCOMMS, MUTUAL_AUTH, GET_KEYS, INV_READER, SWITCH_ADMIN,$/;"	e	enum:__anon9	file:
IO_INPUT	lua/liolib.c	23;"	d	file:
IO_OUTPUT	lua/liolib.c	24;"	d	file:
IRIS_AppendToUpload	iris.c	/^void IRIS_AppendToUpload(const char * addition)$/;"	f
IRIS_AppendToUpload	iris_old.c	/^void IRIS_AppendToUpload(const char * addition)$/;"	f
IRIS_CommsDisconnect	iriscomms.c	/^void IRIS_CommsDisconnect(T_COMMS * comms, int retVal)$/;"	f
IRIS_CommsRecv	iriscomms.c	/^void IRIS_CommsRecv(T_COMMS * comms, const char* interCharTimeout, const char* timeout, const int bufLen, int * retVal,char** pstring,char* retMsg)$/;"	f
IRIS_CommsSend	iriscomms.c	/^void IRIS_CommsSend(const char *data,T_COMMS * comms, int * retVal,char*retMsg)$/;"	f
IRIS_DeallocateStringValue	iris.c	/^void IRIS_DeallocateStringValue(char * value)$/;"	f
IRIS_DeallocateStringValue	iris_old.c	/^void IRIS_DeallocateStringValue(char * value)$/;"	f
IRIS_GetObjectData	iris.c	/^char * IRIS_GetObjectData(const char * objectName, unsigned int * length)$/;"	f
IRIS_GetObjectData	iris_old.c	/^char * IRIS_GetObjectData(const char * objectName, unsigned int * length)$/;"	f
IRIS_GetObjectTagValue	iris.c	/^char * IRIS_GetObjectTagValue(const char *data, const char * intag)$/;"	f
IRIS_GetObjectTagValue	iris_old.c	/^char * IRIS_GetObjectTagValue(const char *data, const char * intag)$/;"	f
IRIS_GetStringValue	iris.c	/^char * IRIS_GetStringValue(const char * data, int size, const char * name)$/;"	f
IRIS_GetStringValue	iris_old.c	/^char * IRIS_GetStringValue(const char * data, int size, const char * name)$/;"	f
IRIS_PutNamedObjectData	iris.c	/^void IRIS_PutNamedObjectData(const char * objectData, uint length, const char * name)$/;"	f
IRIS_PutNamedObjectData	iris_old.c	/^void IRIS_PutNamedObjectData(const char * objectData, uint length, const char * name)$/;"	f
IRIS_PutObjectData	iris.c	/^void IRIS_PutObjectData(const char * objectData, uint length)$/;"	f
IRIS_PutObjectData	iris_old.c	/^void IRIS_PutObjectData(const char * objectData, uint length)$/;"	f
IRIS_StoreData	iris.c	/^void IRIS_StoreData(const char * objectName, const char *tag, const char * value, bool deleteFlag)$/;"	f
IRIS_StoreData	iris_old.c	/^void IRIS_StoreData(const char * objectName, const char *tag, const char * value, bool deleteFlag)$/;"	f
IS	lua/luac.c	68;"	d	file:
InitCEEvents	IrisComm.c	/^static int InitCEEvents (void)$/;"	f	file:
InitCTLS	ctlsmod.c	/^int InitCTLS(void)$/;"	f
InitComEngine	IrisComm.c	/^int InitComEngine (void)$/;"	f
InitNWIF	IrisComm.c	/^static int InitNWIF (void)$/;"	f	file:
InpBeep	input.c	/^void InpBeep(uchar count, uint onDuration, uint offDuration)$/;"	f
InpGetKeyEvent	input.c	/^uchar InpGetKeyEvent(T_KEYBITMAP keyBitmap, T_EVTBITMAP * evtBitmap, T_INP_ENTRY inpEntry, ulong timeout, bool largeFont, bool flush, bool * keyPress)$/;"	f
InpGetMCRTracks	input.c	/^bool InpGetMCRTracks(	char * ptTrack1, uchar * pbTrack1Length,$/;"	f
InpGetNumber	input.c	/^ulong InpGetNumber(void)$/;"	f
InpGetString	input.c	/^char * InpGetString(void)$/;"	f
InpSetNumber	input.c	/^void InpSetNumber(ulong value, bool override)$/;"	f
InpSetOverride	input.c	/^void InpSetOverride(bool override)$/;"	f
InpSetString	input.c	/^void InpSetString(char * value, bool hidden, bool override)$/;"	f
InpTurnOff	input.c	/^int InpTurnOff(bool serial0)$/;"	f
InpTurnOn	input.c	/^void InpTurnOn(void)$/;"	f
Instruct	include/LibCtls.h	/^  char  Instruct;       \/*   (in a command)                                              *\/$/;"	m	struct:__anon26
K	sha1.c	118;"	d	file:
K	sha1.c	122;"	d	file:
K	sha1.c	145;"	d	file:
K	sha1.c	149;"	d	file:
K	sha1.c	172;"	d	file:
K	sha1.c	176;"	d	file:
K	sha1.c	199;"	d	file:
K	sha1.c	95;"	d	file:
KBx	lua/lvm.c	351;"	d	file:
KEYWEAK	lua/lgc.c	47;"	d	file:
KEY_0	include/inputmacro.h	21;"	d
KEY_0_BIT	include/inputmacro.h	93;"	d
KEY_1	include/inputmacro.h	22;"	d
KEY_1_BIT	include/inputmacro.h	94;"	d
KEY_2	include/inputmacro.h	23;"	d
KEY_2_BIT	include/inputmacro.h	95;"	d
KEY_3	include/inputmacro.h	24;"	d
KEY_3_BIT	include/inputmacro.h	96;"	d
KEY_4	include/inputmacro.h	25;"	d
KEY_4_BIT	include/inputmacro.h	97;"	d
KEY_5	include/inputmacro.h	26;"	d
KEY_5_BIT	include/inputmacro.h	98;"	d
KEY_6	include/inputmacro.h	27;"	d
KEY_6_BIT	include/inputmacro.h	99;"	d
KEY_7	include/inputmacro.h	28;"	d
KEY_7_BIT	include/inputmacro.h	100;"	d
KEY_8	include/inputmacro.h	29;"	d
KEY_8_BIT	include/inputmacro.h	101;"	d
KEY_9	include/inputmacro.h	30;"	d
KEY_9_BIT	include/inputmacro.h	102;"	d
KEY_ALL	include/inputmacro.h	18;"	d
KEY_ALL_BITS	include/inputmacro.h	158;"	d
KEY_ALPHA	include/inputmacro.h	47;"	d
KEY_ALPHA_BIT	include/inputmacro.h	110;"	d
KEY_ASTERISK	include/inputmacro.h	32;"	d
KEY_ASTERISK_BIT	include/inputmacro.h	124;"	d
KEY_CLR	include/inputmacro.h	36;"	d
KEY_CLR_BIT	include/inputmacro.h	107;"	d
KEY_CNCL	include/inputmacro.h	34;"	d
KEY_CNCL_BIT	include/inputmacro.h	105;"	d
KEY_CTRL_BITS	include/inputmacro.h	150;"	d
KEY_F0	include/inputmacro.h	40;"	d
KEY_F0_BIT	include/inputmacro.h	117;"	d
KEY_F1	include/inputmacro.h	41;"	d
KEY_F1_BIT	include/inputmacro.h	118;"	d
KEY_F2	include/inputmacro.h	42;"	d
KEY_F2_BIT	include/inputmacro.h	119;"	d
KEY_F3	include/inputmacro.h	43;"	d
KEY_F3_BIT	include/inputmacro.h	120;"	d
KEY_F4	include/inputmacro.h	44;"	d
KEY_F4_BIT	include/inputmacro.h	121;"	d
KEY_F5	include/inputmacro.h	45;"	d
KEY_F5_BIT	include/inputmacro.h	122;"	d
KEY_FUNC	include/inputmacro.h	33;"	d
KEY_FUNC_BIT	include/inputmacro.h	104;"	d
KEY_HOOK	lua/ldblib.c	/^static const char KEY_HOOK = 'h';$/;"	v	file:
KEY_LCLR	include/inputmacro.h	37;"	d
KEY_LCLR_BIT	include/inputmacro.h	125;"	d
KEY_NONE	include/inputmacro.h	16;"	d
KEY_NO_BITS	include/inputmacro.h	132;"	d
KEY_NO_PIN	include/inputmacro.h	19;"	d
KEY_NO_PIN_BIT	include/inputmacro.h	127;"	d
KEY_NUM	include/inputmacro.h	17;"	d
KEY_NUM_BITS	include/inputmacro.h	135;"	d
KEY_OK	include/inputmacro.h	38;"	d
KEY_OK_BIT	include/inputmacro.h	108;"	d
KEY_SCROLL_BITS	include/inputmacro.h	148;"	d
KEY_SK1	include/inputmacro.h	49;"	d
KEY_SK1_BIT	include/inputmacro.h	112;"	d
KEY_SK2	include/inputmacro.h	50;"	d
KEY_SK2_BIT	include/inputmacro.h	113;"	d
KEY_SK3	include/inputmacro.h	51;"	d
KEY_SK3_BIT	include/inputmacro.h	114;"	d
KEY_SK4	include/inputmacro.h	52;"	d
KEY_SK4_BIT	include/inputmacro.h	115;"	d
KEY_SK_BITS	include/inputmacro.h	146;"	d
L	lua/ldump.c	/^ lua_State* L;$/;"	m	struct:__anon16	file:
L	lua/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:
L	lua/lundump.c	/^ lua_State* L;$/;"	m	struct:__anon19	file:
LEFT_GUARD	Prtean13.c	134;"	d	file:
LEFT_GUARD_WIDTH	Prtean13.c	41;"	d	file:
LEN	include/inflate.h	/^            LEN,        \/* i: waiting for length\/lit code *\/$/;"	e	enum:__anon36
LENEXT	include/inflate.h	/^            LENEXT,     \/* i: waiting for length extra bits *\/$/;"	e	enum:__anon36
LENGTH	include/inflate.h	/^    LENGTH,     \/* i: waiting for 32-bit length (gzip) *\/$/;"	e	enum:__anon36
LENLENS	include/inflate.h	/^        LENLENS,    \/* i: waiting for code length code lengths *\/$/;"	e	enum:__anon36
LENS	include/inftrees.h	/^    LENS,$/;"	e	enum:__anon38
LEVELS1	lua/ldblib.c	318;"	d	file:
LEVELS2	lua/ldblib.c	319;"	d	file:
LG	lua/lstate.c	/^typedef struct LG {$/;"	s	file:
LG	lua/lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LHS_assign	lua/lparser.c	/^struct LHS_assign {$/;"	s	file:
LIBPREFIX	lua/loadlib.c	32;"	d	file:
LIB_FAIL	lua/loadlib.c	232;"	d	file:
LIB_FAIL	lua/loadlib.c	233;"	d	file:
LIB_FAIL	lua/loadlib.c	35;"	d	file:
LIMIT	lua/lauxlib.c	403;"	d	file:
LINK_CONNECTED	include/IrisComm.h	56;"	d
LINK_CONNECTED	include/IrisComm.h	59;"	d
LINK_DISCONNECTED	include/IrisComm.h	57;"	d
LINK_DISCONNECTED	include/IrisComm.h	60;"	d
LINK_INIT	include/IrisComm.h	58;"	d
LINK_INIT	include/IrisComm.h	61;"	d
LIT	include/inflate.h	/^            LIT,        \/* o: waiting for output space to write literal *\/$/;"	e	enum:__anon36
LITTLE_ENDIAN	ctlsmod.c	/^typedef enum {LITTLE_ENDIAN = 0, BIG_ENDIAN} CRC_TYPE;$/;"	e	enum:__anon3	file:
LOAD	inflate.c	389;"	d	file:
LOG_APPFILTER	include/irisfunc.h	40;"	d
LOG_PRINTF	input.c	140;"	d	file:
LUA_CORE	lua/lapi.c	14;"	d	file:
LUA_CORE	lua/lcode.c	11;"	d	file:
LUA_CORE	lua/ldebug.c	14;"	d	file:
LUA_CORE	lua/ldo.c	13;"	d	file:
LUA_CORE	lua/ldump.c	10;"	d	file:
LUA_CORE	lua/lfunc.c	11;"	d	file:
LUA_CORE	lua/lgc.c	10;"	d	file:
LUA_CORE	lua/llex.c	13;"	d	file:
LUA_CORE	lua/lmem.c	11;"	d	file:
LUA_CORE	lua/lobject.c	14;"	d	file:
LUA_CORE	lua/lopcodes.c	8;"	d	file:
LUA_CORE	lua/lparser.c	11;"	d	file:
LUA_CORE	lua/lstate.c	11;"	d	file:
LUA_CORE	lua/lstring.c	11;"	d	file:
LUA_CORE	lua/ltable.c	25;"	d	file:
LUA_CORE	lua/ltm.c	11;"	d	file:
LUA_CORE	lua/luac.c	13;"	d	file:
LUA_CORE	lua/lundump.c	10;"	d	file:
LUA_CORE	lua/lvm.c	13;"	d	file:
LUA_CORE	lua/lzio.c	11;"	d	file:
LUA_CORE	lua/print.c	11;"	d	file:
LUA_LIB	lua/lauxlib.c	21;"	d	file:
LUA_LIB	lua/lbaselib.c	15;"	d	file:
LUA_LIB	lua/ldblib.c	13;"	d	file:
LUA_LIB	lua/linit.c	9;"	d	file:
LUA_LIB	lua/liolib.c	14;"	d	file:
LUA_LIB	lua/lmathlib.c	12;"	d	file:
LUA_LIB	lua/loadlib.c	17;"	d	file:
LUA_LIB	lua/loslib.c	15;"	d	file:
LUA_LIB	lua/lstrlib.c	15;"	d	file:
LUA_LIB	lua/ltablib.c	11;"	d	file:
LUA_OFSEP	lua/loadlib.c	29;"	d	file:
LUA_POF	lua/loadlib.c	26;"	d	file:
L_ESC	lua/lstrlib.c	182;"	d	file:
Lc	include/LibCtls.h	/^  char  Lc;             \/*   (in a command) Length of DataToCard  (length of command)    *\/$/;"	m	struct:__anon26
Le	include/LibCtls.h	/^  unsigned short Le;      \/*   (in a command) Max length of DataFromCard (length expected) *\/$/;"	m	struct:__anon26
LeftGuard	Prtean13.c	/^const uchar LeftGuard[2] =	{B8(11100011),B8(10000000)};\/\/{0xC7, 0x01};$/;"	v
ListNWIF	IrisComm.c	/^static void ListNWIF (stNIInfo stArray[], int arrayCount)$/;"	f	file:
LoadBlock	lua/lundump.c	/^static void LoadBlock(LoadState* S, void* b, size_t size)$/;"	f	file:
LoadByte	lua/lundump.c	44;"	d	file:
LoadChar	lua/lundump.c	/^static int LoadChar(LoadState* S)$/;"	f	file:
LoadCode	lua/lundump.c	/^static void LoadCode(LoadState* S, Proto* f)$/;"	f	file:
LoadConstants	lua/lundump.c	/^static void LoadConstants(LoadState* S, Proto* f)$/;"	f	file:
LoadDebug	lua/lundump.c	/^static void LoadDebug(LoadState* S, Proto* f)$/;"	f	file:
LoadF	lua/lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	lua/lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadFunction	lua/lundump.c	/^static Proto* LoadFunction(LoadState* S, TString* p)$/;"	f	file:
LoadHeader	lua/lundump.c	/^static void LoadHeader(LoadState* S)$/;"	f	file:
LoadInt	lua/lundump.c	/^static int LoadInt(LoadState* S)$/;"	f	file:
LoadMem	lua/lundump.c	43;"	d	file:
LoadNumber	lua/lundump.c	/^static lua_Number LoadNumber(LoadState* S)$/;"	f	file:
LoadS	lua/lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	lua/lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadState	lua/lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anon19	file:
LoadString	lua/lundump.c	/^static TString* LoadString(LoadState* S)$/;"	f	file:
LoadVar	lua/lundump.c	45;"	d	file:
LoadVector	lua/lundump.c	46;"	d	file:
Lr	include/LibCtls.h	/^  unsigned short Lr;      \/*   (Nowhere) Actual length of DataFromCard                     *\/$/;"	m	struct:__anon26
MATCH	include/inflate.h	/^            MATCH,      \/* o: waiting for output space to copy string *\/$/;"	e	enum:__anon36
MAXASIZE	lua/ltable.c	47;"	d	file:
MAXBITS	inftrees.c	9;"	d	file:
MAXBITS	lua/ltable.c	42;"	d	file:
MAXBITS	lua/ltable.c	44;"	d	file:
MAXD	include/inftrees.h	44;"	d
MAXSEG_64K	include/zconf.h	89;"	d
MAXSRC	lua/llex.c	75;"	d	file:
MAXTAGLOOP	lua/lvm.c	32;"	d	file:
MAX_APN_LENGTH	include/IrisComm.h	23;"	d
MAX_COL	include/display.h	27;"	d
MAX_COL_LARGE_FONT	include/display.h	32;"	d
MAX_DATASIZE	include/IrisComm.h	12;"	d
MAX_DATASIZE	include/IrisComm.h	17;"	d
MAX_DISPLAY_BUFFER	include/IrisComm.h	15;"	d
MAX_FILE_LENGTH	include/IrisComm.h	22;"	d
MAX_FORMAT	lua/lstrlib.c	693;"	d	file:
MAX_IP_LENGTH	include/IrisComm.h	16;"	d
MAX_ITEM	lua/lstrlib.c	686;"	d	file:
MAX_MATCH	include/zutil.h	82;"	d
MAX_MEDIA_NAME	include/IrisComm.h	21;"	d
MAX_MEM_LEVEL	include/zconf.h	136;"	d
MAX_MEM_LEVEL	include/zconf.h	138;"	d
MAX_PASSWORD_LENGTH	include/IrisComm.h	19;"	d
MAX_PHONE_LENGTH	include/IrisComm.h	20;"	d
MAX_PTR	zutil.c	198;"	d	file:
MAX_ROW	include/display.h	24;"	d
MAX_ROW_LARGE_FONT	include/display.h	29;"	d
MAX_USERNAME_LENGTH	include/IrisComm.h	18;"	d
MAX_VERSION_LENGTH	include/IrisComm.h	14;"	d
MAX_WBITS	include/zconf.h	148;"	d
MEM	include/inflate.h	/^    MEM,        \/* got an inflate() memory error -- remain here until reset *\/$/;"	e	enum:__anon36
MINSIZEARRAY	lua/lmem.c	43;"	d	file:
MIN_MATCH	include/zutil.h	81;"	d
MOD	adler32.c	22;"	d	file:
MOD	adler32.c	43;"	d	file:
MSDOS	include/zconf.h	63;"	d
MTU	include/IrisComm.h	13;"	d
MUTUAL_AUTH	ctlsmod.c	/^	POLL = 0, ECHO, RESET, INITCOMMS, MUTUAL_AUTH, GET_KEYS, INV_READER, SWITCH_ADMIN,$/;"	e	enum:__anon9	file:
MY_ZCALLOC	zutil.c	190;"	d	file:
MY_ZCALLOC	zutil.c	268;"	d	file:
M_3DES_RSAINJECT	security.c	100;"	d	file:
M_3INJECT_3DES	security.c	86;"	d	file:
M_CLRIV	security.c	70;"	d	file:
M_COPY	security.c	62;"	d	file:
M_COPY_3DES	security.c	63;"	d	file:
M_DEC	security.c	77;"	d	file:
M_DECV	security.c	79;"	d	file:
M_DECV_3DES	security.c	80;"	d	file:
M_DEC_3DES	security.c	78;"	d	file:
M_ENC	security.c	73;"	d	file:
M_ENCV	security.c	75;"	d	file:
M_ENCV_3DES	security.c	76;"	d	file:
M_ENC_3DES	security.c	74;"	d	file:
M_ERASE	security.c	55;"	d	file:
M_ERASE_3DES	security.c	56;"	d	file:
M_GETKEY_3DES	security.c	106;"	d	file:
M_INJECT	security.c	84;"	d	file:
M_INJECT_3DES	security.c	85;"	d	file:
M_KVC	security.c	59;"	d	file:
M_KVC_3DES	security.c	60;"	d	file:
M_MOVE	security.c	64;"	d	file:
M_MOVE_3DES	security.c	65;"	d	file:
M_OFB	security.c	81;"	d	file:
M_OFB_3DES	security.c	82;"	d	file:
M_OWF	security.c	88;"	d	file:
M_OWFV_3DES	security.c	90;"	d	file:
M_OWF_3DES	security.c	89;"	d	file:
M_OWF_3DES_DATA	security.c	92;"	d	file:
M_OWF_DATA	security.c	91;"	d	file:
M_PIN	security.c	102;"	d	file:
M_PINV	security.c	104;"	d	file:
M_PINV_3DES	security.c	105;"	d	file:
M_PINV_3DES_EMV	security.c	107;"	d	file:
M_PIN_3DES	security.c	103;"	d	file:
M_RANDOM	security.c	57;"	d	file:
M_RANDOM_3DES	security.c	58;"	d	file:
M_RSA_3INJECT	security.c	97;"	d	file:
M_RSA_CRYPT	security.c	95;"	d	file:
M_RSA_INJECT	security.c	96;"	d	file:
M_RSA_RSAINJECT	security.c	98;"	d	file:
M_RSA_WRAP_3DES	security.c	99;"	d	file:
M_RSA_WRITE	security.c	94;"	d	file:
M_SETIV	security.c	71;"	d	file:
M_WRITE	security.c	53;"	d	file:
M_WRITE_3DES	security.c	54;"	d	file:
M_XOR	security.c	66;"	d	file:
M_XOR_3DES	security.c	67;"	d	file:
M_XOR_3DES_DATA	security.c	68;"	d	file:
MainMenu_OnClose	IrisComm.c	/^void MainMenu_OnClose (unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnEvtDDIAPPL	IrisComm.c	/^void MainMenu_OnEvtDDIAPPL (unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnNetDown	IrisComm.c	/^void MainMenu_OnNetDown (unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnNetFailed	IrisComm.c	/^void MainMenu_OnNetFailed (unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnNetOut	IrisComm.c	/^void MainMenu_OnNetOut (unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnNetRestored	IrisComm.c	/^void MainMenu_OnNetRestored (unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnNetUp	IrisComm.c	/^void MainMenu_OnNetUp (unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnOpen	IrisComm.c	/^void MainMenu_OnOpen (unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnSignal	IrisComm.c	/^void MainMenu_OnSignal (unsigned int nwifHandle, int signalPercent, int signaldBm, int signalRSSI, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnStartFail	IrisComm.c	/^void MainMenu_OnStartFail (unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnStartLink	IrisComm.c	/^void MainMenu_OnStartLink(unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnStartNW	IrisComm.c	/^void MainMenu_OnStartNW (unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnStopFail	IrisComm.c	/^void MainMenu_OnStopFail(unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnStopLink	IrisComm.c	/^void MainMenu_OnStopLink (unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
MainMenu_OnStopNW	IrisComm.c	/^void MainMenu_OnStopNW (unsigned int nwifHandle, int neParam1, int neParam2, int neParam3, unsigned char* szData, int iDataLen)$/;"	f
ManageCEEvents	IrisComm.c	/^static void ManageCEEvents (ceEvent_t ceEventCB)$/;"	f	file:
MatchState	lua/lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	lua/lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
MenuTch	irismain.c	/^T_MenuTch MenuTch;$/;"	v
MyPrtConnect	printer.c	/^static E_PRT_ERR MyPrtConnect(void)$/;"	f	file:
MyPrtPrint	printer.c	/^static E_PRT_ERR MyPrtPrint(uchar * pbData, uint size)$/;"	f	file:
MyPrtSend	printer.c	/^static E_PRT_ERR MyPrtSend(uchar * pbData, uint wLength)$/;"	f	file:
NAME	include/inflate.h	/^    NAME,       \/* i: waiting for end of file name (gzip) *\/$/;"	e	enum:__anon36
NEEDBITS	inflate.c	429;"	d	file:
NET_FAIL	include/IrisComm.h	25;"	d
NET_MSG_H_LOC	include/IrisComm.h	63;"	d
NET_MSG_V_LOC	include/IrisComm.h	64;"	d
NET_SUCCESS	include/IrisComm.h	26;"	d
NMAX	adler32.c	12;"	d	file:
NO_DUMMY_DECL	include/zconf.h	130;"	d
NO_MEMCPY	include/zutil.h	212;"	d
NO_MEMCPY	include/zutil.h	219;"	d
NO_vsnprintf	include/zconf.h	305;"	d
NO_vsnprintf	include/zconf.h	309;"	d
NO_vsnprintf	include/zutil.h	192;"	d
NO_vsnprintf	include/zutil.h	195;"	d
NO_vsnprintf	include/zutil.h	204;"	d
NO_vsnprintf	include/zutil.h	208;"	d
Number	input.c	/^static ulong Number;$/;"	v	file:
OF	include/zconf.h	168;"	d
OF	include/zconf.h	170;"	d
OFF	inffast.c	25;"	d	file:
OFF	inffast.c	28;"	d	file:
OS	include/inflate.h	/^    OS,         \/* i: waiting for extra flags and operating system (gzip) *\/$/;"	e	enum:__anon36
OS2	include/zconf.h	66;"	d
OS_CODE	include/zutil.h	105;"	d
OS_CODE	include/zutil.h	109;"	d
OS_CODE	include/zutil.h	115;"	d
OS_CODE	include/zutil.h	119;"	d
OS_CODE	include/zutil.h	126;"	d
OS_CODE	include/zutil.h	137;"	d
OS_CODE	include/zutil.h	142;"	d
OS_CODE	include/zutil.h	147;"	d
OS_CODE	include/zutil.h	169;"	d
OS_CODE	include/zutil.h	90;"	d
OUTPUT	lua/luac.c	27;"	d	file:
OnCEEvtDDIAPPL	include/IrisComm.h	/^	CEEvent	OnCEEvtDDIAPPL;$/;"	m	struct:tagCEEvent
OnCEEvtSignal	include/IrisComm.h	/^	CEEvent	OnCEEvtSignal;$/;"	m	struct:tagCEEvent
OnCENetDown	include/IrisComm.h	/^	CEEvent OnCENetDown;$/;"	m	struct:tagCEEvent
OnCENetFailed	include/IrisComm.h	/^	CEEvent	OnCENetFailed;$/;"	m	struct:tagCEEvent
OnCENetOut	include/IrisComm.h	/^	CEEvent	OnCENetOut;$/;"	m	struct:tagCEEvent
OnCENetRestored	include/IrisComm.h	/^	CEEvent	OnCENetRestored;$/;"	m	struct:tagCEEvent
OnCENetUp	include/IrisComm.h	/^	CEEvent OnCENetUp;$/;"	m	struct:tagCEEvent
OnCEStartFail	include/IrisComm.h	/^	CEEvent OnCEStartFail;$/;"	m	struct:tagCEEvent
OnCEStartLink	include/IrisComm.h	/^	CEEvent OnCEStartLink;$/;"	m	struct:tagCEEvent
OnCEStartNW	include/IrisComm.h	/^	CEEvent OnCEStartNW;$/;"	m	struct:tagCEEvent
OnCEStartOpen	include/IrisComm.h	/^	CEEvent	OnCEStartOpen;$/;"	m	struct:tagCEEvent
OnCEStopClose	include/IrisComm.h	/^	CEEvent OnCEStopClose;$/;"	m	struct:tagCEEvent
OnCEStopFail	include/IrisComm.h	/^	CEEvent	OnCEStopFail;$/;"	m	struct:tagCEEvent
OnCEStopLink	include/IrisComm.h	/^	CEEvent	OnCEStopLink;$/;"	m	struct:tagCEEvent
OnCEStopNW	include/IrisComm.h	/^	CEEvent OnCEStopNW;$/;"	m	struct:tagCEEvent
Output	lua/luac.c	/^static char Output[]={ OUTPUT };	\/* default output file name *\/$/;"	v	file:
Override	input.c	/^static bool Override;$/;"	v	file:
P	sha1.c	83;"	d	file:
P1	include/LibCtls.h	/^  char  P1;             \/*   (in a command)                                              *\/$/;"	m	struct:__anon26
P2	include/LibCtls.h	/^  char  P2;             \/*   (in a command)                                              *\/$/;"	m	struct:__anon26
PASSTHRU	ctlsmod.c	/^	SET_BAUD = 0, PING, PASSTHRU, SET_LED, SET_POLL, ACTIVATE_TRAN, SET_DISP, UPDATE_BAL, GET_EMV_CONFIG, SET_EMV_CONFIG,$/;"	e	enum:__anon2	file:
PI	lua/lmathlib.c	20;"	d	file:
PI	lua/lmathlib.c	21;"	d	file:
PICC_IccInstructStruct	include/LibCtls.h	/^} PICC_IccInstructStruct;$/;"	t	typeref:struct:__anon26
PING	ctlsmod.c	/^	SET_BAUD = 0, PING, PASSTHRU, SET_LED, SET_POLL, ACTIVATE_TRAN, SET_DISP, UPDATE_BAL, GET_EMV_CONFIG, SET_EMV_CONFIG,$/;"	e	enum:__anon2	file:
POF	lua/loadlib.c	155;"	d	file:
POF	lua/loadlib.c	156;"	d	file:
POF	lua/loadlib.c	34;"	d	file:
POLL	ctlsmod.c	/^	POLL = 0, ECHO, RESET, INITCOMMS, MUTUAL_AUTH, GET_KEYS, INV_READER, SWITCH_ADMIN,$/;"	e	enum:__anon9	file:
PRESET_DICT	include/zutil.h	85;"	d
PRODUCT_TYPE	ctlsmod.c	/^} PRODUCT_TYPE;$/;"	t	typeref:enum:__anon5	file:
PROGNAME	lua/luac.c	26;"	d	file:
PULLBYTE	inflate.c	419;"	d	file:
PUP	inffast.c	26;"	d	file:
PUP	inffast.c	29;"	d	file:
PUT_UINT32	sha1.c	33;"	d	file:
PrintCharLine	Prtean13.c	/^uchar    PrintCharLine[9];$/;"	v
PrintCode	lua/print.c	/^static void PrintCode(const Proto* f)$/;"	f	file:
PrintConstant	lua/print.c	/^static void PrintConstant(const Proto* f, int i)$/;"	f	file:
PrintConstants	lua/print.c	/^static void PrintConstants(const Proto* f)$/;"	f	file:
PrintFunction	lua/print.c	/^void PrintFunction(const Proto* f, int full)$/;"	f
PrintFunction	lua/print.c	18;"	d	file:
PrintHeader	lua/print.c	/^static void PrintHeader(const Proto* f)$/;"	f	file:
PrintLocals	lua/print.c	/^static void PrintLocals(const Proto* f)$/;"	f	file:
PrintString	lua/print.c	/^static void PrintString(const TString* ts)$/;"	f	file:
PrintUpvalues	lua/print.c	/^static void PrintUpvalues(const Proto* f)$/;"	f	file:
Protect	lua/lvm.c	357;"	d	file:
PrtGetErrorText	printer.c	/^char * PrtGetErrorText(E_PRT_ERR eError)$/;"	f
PrtPrint	printer.c	/^static E_PRT_ERR PrtPrint(uchar * pbData, uint wLength, E_PRINT ePrintCommand)$/;"	f	file:
PrtPrintBuffer	printer.c	/^E_PRT_ERR PrtPrintBuffer(uint wLength, uchar * pbData, E_PRINT ePrintCommand)$/;"	f
PrtPrintFormFeed	printer.c	/^E_PRT_ERR PrtPrintFormFeed()$/;"	f
PrtPrintGraphics	printer.c	/^E_PRT_ERR PrtPrintGraphics(uint wWidth, uint wHeight, uchar * pbData, bool fCenter, uchar bMultiplier)$/;"	f
PrtStatus	printer.c	/^E_PRT_ERR PrtStatus(bool fStatusCheck)$/;"	f
QX1000	ctlsmod.c	/^	DEFAULT = 0, QX1000, QX120, VX810_CTLS$/;"	e	enum:__anon5	file:
QX120	ctlsmod.c	/^	DEFAULT = 0, QX1000, QX120, VX810_CTLS$/;"	e	enum:__anon5	file:
R	sha1.c	76;"	d	file:
RA	lua/lvm.c	343;"	d	file:
RADIANS_PER_DEGREE	lua/lmathlib.c	22;"	d	file:
RB	lua/lvm.c	345;"	d	file:
RC	lua/lvm.c	346;"	d	file:
RESET	ctlsmod.c	/^	POLL = 0, ECHO, RESET, INITCOMMS, MUTUAL_AUTH, GET_KEYS, INV_READER, SWITCH_ADMIN,$/;"	e	enum:__anon9	file:
RESP_CODE_EMV_DEFAULT_APPROVED	include/emv.h	144;"	d
RESP_CODE_EMV_DEFAULT_DECLINED	include/emv.h	146;"	d
RESP_CODE_EMV_OFFLINE_APPROVED	include/emv.h	143;"	d
RESP_CODE_EMV_OFFLINE_DECLINED	include/emv.h	145;"	d
RESP_CODE_EMV_ONLINE_DECLINED	include/emv.h	147;"	d
RESTORE	inflate.c	400;"	d	file:
RET_FAILED	include/IrisComm.h	9;"	d
RET_SUCCESS	include/IrisComm.h	8;"	d
REV	crc32.c	56;"	d	file:
REVERSE	inflate.c	454;"	d	file:
RIGHT_GUARD	Prtean13.c	136;"	d	file:
RIGHT_GUARD_WIDTH	Prtean13.c	42;"	d	file:
RKB	lua/lvm.c	347;"	d	file:
RKC	lua/lvm.c	349;"	d	file:
RightGuard	Prtean13.c	/^const uchar RightGuard[2] =	{B8(11100011),B8(10000000)};\/\/{0xC7, 0x01};$/;"	v
RotateEan13	Prtean13.c	/^static void RotateEan13(uchar n, uchar * PrintCharLine)$/;"	f	file:
S	lua/print.c	159;"	d	file:
S	sha1.c	74;"	d	file:
SALE_TRAN	ctlsmod.c	/^	GET_CAPA, SET_CAPA, SALE_TRAN, SHOW_STS, GET_DATETIME, SET_DATETIME, GET_PARAMS,$/;"	e	enum:__anon9	file:
SCREEN_DELAY	include/IrisComm.h	10;"	d
SEEK_CUR	include/zconf.h	297;"	d
SEEK_END	include/zconf.h	298;"	d
SEEK_SET	include/zconf.h	296;"	d
SET_BAUD	ctlsmod.c	/^	SET_BAUD = 0, PING, PASSTHRU, SET_LED, SET_POLL, ACTIVATE_TRAN, SET_DISP, UPDATE_BAL, GET_EMV_CONFIG, SET_EMV_CONFIG,$/;"	e	enum:__anon2	file:
SET_CAPA	ctlsmod.c	/^	GET_CAPA, SET_CAPA, SALE_TRAN, SHOW_STS, GET_DATETIME, SET_DATETIME, GET_PARAMS,$/;"	e	enum:__anon9	file:
SET_CAPK	ctlsmod.c	/^	GET_VER, GET_LCD, STORE_LCD, SET_LCD, GET_ALL_AIDS, SET_CFG_AID, SET_CAPK, DEL_ALL_CAPK, GET_PRODUCT_TYPE,$/;"	e	enum:__anon2	file:
SET_CFG_AID	ctlsmod.c	/^	GET_VER, GET_LCD, STORE_LCD, SET_LCD, GET_ALL_AIDS, SET_CFG_AID, SET_CAPK, DEL_ALL_CAPK, GET_PRODUCT_TYPE,$/;"	e	enum:__anon2	file:
SET_CFG_GROUP	ctlsmod.c	/^	CANCEL_TRANSACTION, DEL_CFG_GROUP, SET_CFG_GROUP, DEL_CFG_AID, GET_CFG_AID, GET_CFG_GRP, GET_ALL_GRPS$/;"	e	enum:__anon2	file:
SET_DATETIME	ctlsmod.c	/^	GET_CAPA, SET_CAPA, SALE_TRAN, SHOW_STS, GET_DATETIME, SET_DATETIME, GET_PARAMS,$/;"	e	enum:__anon9	file:
SET_DISP	ctlsmod.c	/^	SET_BAUD = 0, PING, PASSTHRU, SET_LED, SET_POLL, ACTIVATE_TRAN, SET_DISP, UPDATE_BAL, GET_EMV_CONFIG, SET_EMV_CONFIG,$/;"	e	enum:__anon2	file:
SET_EMVTAGS	ctlsmod.c	/^	GET_VISAPK, SET_VISAPK, GET_EMVTAGS, SET_EMVTAGS, GET_CVMCAPA$/;"	e	enum:__anon9	file:
SET_EMV_CONFIG	ctlsmod.c	/^	SET_BAUD = 0, PING, PASSTHRU, SET_LED, SET_POLL, ACTIVATE_TRAN, SET_DISP, UPDATE_BAL, GET_EMV_CONFIG, SET_EMV_CONFIG,$/;"	e	enum:__anon2	file:
SET_LCD	ctlsmod.c	/^	GET_VER, GET_LCD, STORE_LCD, SET_LCD, GET_ALL_AIDS, SET_CFG_AID, SET_CAPK, DEL_ALL_CAPK, GET_PRODUCT_TYPE,$/;"	e	enum:__anon2	file:
SET_LED	ctlsmod.c	/^	SET_BAUD = 0, PING, PASSTHRU, SET_LED, SET_POLL, ACTIVATE_TRAN, SET_DISP, UPDATE_BAL, GET_EMV_CONFIG, SET_EMV_CONFIG,$/;"	e	enum:__anon2	file:
SET_POLL	ctlsmod.c	/^	SET_BAUD = 0, PING, PASSTHRU, SET_LED, SET_POLL, ACTIVATE_TRAN, SET_DISP, UPDATE_BAL, GET_EMV_CONFIG, SET_EMV_CONFIG,$/;"	e	enum:__anon2	file:
SET_VISAPK	ctlsmod.c	/^	GET_VISAPK, SET_VISAPK, GET_EMVTAGS, SET_EMVTAGS, GET_CVMCAPA$/;"	e	enum:__anon9	file:
SHA1Context	include/sha1.h	30;"	d
SHA1Input	include/sha1.h	38;"	d
SHA1Reset	include/sha1.h	34;"	d
SHA1Result	include/sha1.h	42;"	d
SHIFT	Prtean128.c	152;"	d	file:
SHOW_STS	ctlsmod.c	/^	GET_CAPA, SET_CAPA, SALE_TRAN, SHOW_STS, GET_DATETIME, SET_DATETIME, GET_PARAMS,$/;"	e	enum:__anon9	file:
SMALL_MEDIUM	include/zconf.h	183;"	d
SMALL_MEDIUM	include/zconf.h	192;"	d
SPCE_CLOSE_STOP	include/IrisComm.h	/^	SPCE_CLOSE_STOP=112,$/;"	e	enum:__anon25
SPCE_DDI_APPL	include/IrisComm.h	/^	SPCE_DDI_APPL=114	$/;"	e	enum:__anon25
SPCE_LINK_START	include/IrisComm.h	/^	SPCE_LINK_START=107,$/;"	e	enum:__anon25
SPCE_LINK_STOP	include/IrisComm.h	/^	SPCE_LINK_STOP=111,$/;"	e	enum:__anon25
SPCE_NET_DOWN	include/IrisComm.h	/^	SPCE_NET_DOWN=101,$/;"	e	enum:__anon25
SPCE_NET_FAILED	include/IrisComm.h	/^	SPCE_NET_FAILED=102,$/;"	e	enum:__anon25
SPCE_NET_OUT	include/IrisComm.h	/^	SPCE_NET_OUT=103,$/;"	e	enum:__anon25
SPCE_NET_RESTORED	include/IrisComm.h	/^	SPCE_NET_RESTORED=104,$/;"	e	enum:__anon25
SPCE_NET_START	include/IrisComm.h	/^	SPCE_NET_START=108,$/;"	e	enum:__anon25
SPCE_NET_STOP	include/IrisComm.h	/^	SPCE_NET_STOP=110,$/;"	e	enum:__anon25
SPCE_NET_UP	include/IrisComm.h	/^	SPCE_NET_UP=100,$/;"	e	enum:__anon25
SPCE_OPEN_START	include/IrisComm.h	/^	SPCE_OPEN_START=106,$/;"	e	enum:__anon25
SPCE_SIGNAL	include/IrisComm.h	/^	SPCE_SIGNAL=105,$/;"	e	enum:__anon25
SPCE_START_FAILED	include/IrisComm.h	/^	SPCE_START_FAILED=109,$/;"	e	enum:__anon25
SPCE_STOP_FAILED	include/IrisComm.h	/^	SPCE_STOP_FAILED=113,$/;"	e	enum:__anon25
SPECIALS	lua/lstrlib.c	183;"	d	file:
SParser	lua/ldo.c	/^struct SParser {  \/* data to `f_parser' *\/$/;"	s	file:
SS	lua/print.c	158;"	d	file:
START_A	Prtean128.c	154;"	d	file:
START_B	Prtean128.c	155;"	d	file:
START_C	Prtean128.c	156;"	d	file:
STATIC_TREES	include/zutil.h	77;"	d
STDC	include/zconf.h	106;"	d
STDC	include/zconf.h	109;"	d
STDC	include/zconf.h	112;"	d
STDC	include/zconf.h	115;"	d
STDC	include/zconf.h	119;"	d
STDC	include/zconf.h	97;"	d
STDC99	include/zconf.h	101;"	d
STOP	Prtean128.c	162;"	d	file:
STOP2	Prtean128.c	163;"	d	file:
STORED	include/inflate.h	/^        STORED,     \/* i: waiting for stored size (length and complement) *\/$/;"	e	enum:__anon36
STORED_BLOCK	include/zutil.h	76;"	d
STORE_LCD	ctlsmod.c	/^	GET_VER, GET_LCD, STORE_LCD, SET_LCD, GET_ALL_AIDS, SET_CFG_AID, SET_CAPK, DEL_ALL_CAPK, GET_PRODUCT_TYPE,$/;"	e	enum:__anon2	file:
SW1_SW2	include/LibCtls.h	/^  unsigned short SW1_SW2; \/*   (in a response)                                             *\/$/;"	m	struct:__anon26
SWITCH_ADMIN	ctlsmod.c	/^	POLL = 0, ECHO, RESET, INITCOMMS, MUTUAL_AUTH, GET_KEYS, INV_READER, SWITCH_ADMIN,$/;"	e	enum:__anon9	file:
SYNC	include/inflate.h	/^    SYNC        \/* looking for synchronization bytes to restart inflate() *\/$/;"	e	enum:__anon36
SYS16BIT	include/zconf.h	79;"	d
Security3DESWriteRSA	security.c	/^bool Security3DESWriteRSA(char * appName, uchar location, char * appName2, uchar to, int blockLen, uchar * block)$/;"	f
SecurityClearRSA	security.c	/^bool SecurityClearRSA(char * appName, uchar location)$/;"	f
SecurityCopyKey	security.c	/^bool SecurityCopyKey(char * appName, uchar location, uchar keySize, uchar to)$/;"	f
SecurityCrypt	security.c	/^bool SecurityCrypt(char * appName, uchar location, uchar keySize, int eDataSize, uchar * eData, bool decrypt, bool ofb)$/;"	f
SecurityCryptRSA	security.c	/^bool SecurityCryptRSA(char * appName, uchar location, int eDataSize, uchar * eData)$/;"	f
SecurityCryptWithVariant	security.c	/^bool SecurityCryptWithVariant(char * appName, uchar location, uchar keySize, int eDataSize, uchar * eData, uchar * variant, bool decrypt)$/;"	f
SecurityEraseKey	security.c	/^bool SecurityEraseKey(char * appName, uchar location, uchar keySize)$/;"	f
SecurityGenerateKey	security.c	/^bool SecurityGenerateKey(char * appName, uchar location, uchar keySize)$/;"	f
SecurityGetKey	security.c	/^bool SecurityGetKey(char * appName, uchar location, uchar* value)$/;"	f
SecurityInit	security.c	/^void SecurityInit(void)$/;"	f
SecurityInjectKey	security.c	/^bool SecurityInjectKey(char * appName, uchar location, uchar keySize, char * appName2, uchar to, uchar eKeySize, uchar * eKey, uchar * variant)$/;"	f
SecurityKVCKey	security.c	/^bool SecurityKVCKey(char * appName, uchar location, uchar keySize, uchar * kvc)$/;"	f
SecurityMAB	security.c	/^bool SecurityMAB(char * appName, uchar location, uchar keySize, int eDataSize, uchar * eData, uchar * variant, uchar * mab)$/;"	f
SecurityMoveKey	security.c	/^bool SecurityMoveKey(char * appName, uchar location, uchar keySize, uchar to)$/;"	f
SecurityOWFKey	security.c	/^bool SecurityOWFKey(char * appName, uchar location, uchar keySize, uchar to, uchar ppasn, bool variant)$/;"	f
SecurityOWFKeyWithData	security.c	/^bool SecurityOWFKeyWithData(char * appName, uchar location, uchar keySize, uchar to, uchar * variant)$/;"	f
SecurityPINBlock	security.c	/^bool SecurityPINBlock(char * appName, uchar location, uchar keySize, char * pan, uchar * ePinBlock)$/;"	f
SecurityPINBlockCba	security.c	/^bool SecurityPINBlockCba(uchar* location_1, uchar *location_2,char * pan, bool emv,uchar * ePinBlock)$/;"	f
SecurityPINBlockWithVariant	security.c	/^bool SecurityPINBlockWithVariant(char * appName, uchar location, uchar keySize, char * pan, char * stan, char * amount, bool emv,uchar * ePinBlock)$/;"	f
SecurityRSAInjectKey	security.c	/^bool SecurityRSAInjectKey(char * appName, uchar location, char * appName2, uchar to, uchar eKeySize, int eDataSize, uchar * eData)$/;"	f
SecurityRSAInjectRSA	security.c	/^bool SecurityRSAInjectRSA(char * appName, uchar location, char * appName2, uchar to, int eDataSize, uchar * eData)$/;"	f
SecurityRSAWrap3Des	security.c	/^bool SecurityRSAWrap3Des(char * appName, uchar location, uchar to, int *eDataSize, uchar * eData)$/;"	f
SecuritySetIV	security.c	/^bool SecuritySetIV(uchar * iv)$/;"	f
SecurityWriteKey	security.c	/^bool SecurityWriteKey(char * appName, uchar location, uchar keySize, uchar * key)$/;"	f
SecurityWriteRSA	security.c	/^bool SecurityWriteRSA(char * appName, uchar location, int blockLen, uchar * block)$/;"	f
SecurityXorKey	security.c	/^bool SecurityXorKey(char * appName, uchar location, uchar keySize, uchar with, uchar to)$/;"	f
SecurityXorKeyWithData	security.c	/^bool SecurityXorKeyWithData(char * appName, uchar location, uchar keySize, uchar *xdata, uchar to)$/;"	f
SerialHandle	irismain.c	/^int SerialHandle = -1;$/;"	v
SerialInit	irismain.c	/^void SerialInit()$/;"	f
Sizeof	lua/print.c	20;"	d	file:
Smain	lua/lua.c	/^struct Smain {$/;"	s	file:
Smain	lua/luac.c	/^struct Smain {$/;"	s	file:
SocketConnect	IrisComm.c	/^static int SocketConnect (int* pSocketHandle,char * tHIP, int tPort)$/;"	f	file:
String	input.c	/^static char String[MAX_COL*3+1];$/;"	v	file:
TABLE	include/inflate.h	/^        TABLE,      \/* i: waiting for dynamic block table lengths *\/$/;"	e	enum:__anon36
TACDefault	ctlsmod.c	/^	unsigned char TACDefault[5];		\/\/ xFFFE - Terminal Action Code (Default)$/;"	m	struct:__anon8	file:
TACDenial	ctlsmod.c	/^	unsigned char TACDenial[5];			\/\/ xFFFF - Terminal Action Code (Denial)$/;"	m	struct:__anon8	file:
TACOnline	ctlsmod.c	/^	unsigned char TACOnline[5];			\/\/ xFFFD - Terminal Action Code (Online)$/;"	m	struct:__anon8	file:
TBLS	crc32.c	62;"	d	file:
TBLS	crc32.c	64;"	d	file:
TIME	include/inflate.h	/^    TIME,       \/* i: waiting for modification time (gzip) *\/$/;"	e	enum:__anon36
TIMER_TYPE	include/timer.h	/^typedef ulong TIMER_TYPE;$/;"	t
TRY_FREE	include/zutil.h	267;"	d
TTQ	ctlsmod.c	/^	unsigned char TTQ[4];				\/\/ x9F66 - Terminal Transaction Qualifier (TTQ)$/;"	m	struct:__anon8	file:
TYPE	include/inflate.h	/^        TYPE,       \/* i: waiting for type bits, including last-flag bit *\/$/;"	e	enum:__anon36
TYPEDO	include/inflate.h	/^        TYPEDO,     \/* i: same, but skip check to exit inflate on new block *\/$/;"	e	enum:__anon36
TYPE_A	Prtean13.c	115;"	d	file:
TYPE_B	Prtean13.c	116;"	d	file:
TYPE_C	Prtean13.c	117;"	d	file:
T_AS2805FIELD	include/as2805.h	/^} T_AS2805FIELD;$/;"	t	typeref:struct:__anon30
T_BIG_HEAP	include/alloc.h	/^} T_BIG_HEAP;$/;"	t	typeref:struct:__anon29
T_COMMS	include/comms.h	/^} T_COMMS;$/;"	t	typeref:struct:__anon34
T_EVTBITMAP	include/inputmacro.h	/^typedef unsigned long T_EVTBITMAP;    \/* Event bitmap type *\/$/;"	t
T_FIELD_FORMAT	as2805.c	/^} T_FIELD_FORMAT;$/;"	t	typeref:struct:__anon1	file:
T_INPUTBITMAP	include/Input.h	/^} T_INPUTBITMAP;$/;"	t	typeref:struct:__anon20
T_INP_ENTRY	include/Input.h	/^} T_INP_ENTRY;$/;"	t	typeref:struct:__anon22
T_KEYBITMAP	include/inputmacro.h	/^typedef unsigned long T_KEYBITMAP;    \/* Key bitmap type *\/$/;"	t
T_MED_HEAP	include/alloc.h	/^} T_MED_HEAP;$/;"	t	typeref:struct:__anon28
T_MenuTch	include/Input.h	/^}T_MenuTch;$/;"	t	typeref:struct:__anon24
T_MenuTchDtl	include/Input.h	/^}T_MenuTchDtl;$/;"	t	typeref:struct:__anon23
T_TEMPDATA	include/iris.h	/^} T_TEMPDATA;$/;"	t	typeref:struct:__anon39
T_TEMPDATA	include/iris_old.h	/^} T_TEMPDATA;$/;"	t	typeref:struct:__anon40
T_TINY_HEAP	include/alloc.h	/^} T_TINY_HEAP;$/;"	t	typeref:struct:__anon27
TermCap	ctlsmod.c	/^	unsigned char TermCap[3];			\/\/ x9F33 - Terminal Capabilites$/;"	m	struct:__anon8	file:
TermCapCVMReq	ctlsmod.c	/^	unsigned char TermCapCVMReq[3];		\/\/ xDF29 - Terminal Capabilities - No CVM Required$/;"	m	struct:__anon8	file:
TermCapCVMReqExists	ctlsmod.c	/^	int TermCapCVMReqExists;$/;"	m	struct:__anon8	file:
TermCapNoCVMReq	ctlsmod.c	/^	unsigned char TermCapNoCVMReq[3];	\/\/ xDF28 - Terminal Capabilities - No CVM Required$/;"	m	struct:__anon8	file:
TimerArm	timer.c	/^bool TimerArm(TIMER_TYPE * timer, ulong timeout)$/;"	f
TimerExpired	timer.c	/^bool TimerExpired(TIMER_TYPE * timer)$/;"	f
Trace	include/zutil.h	246;"	d
Trace	include/zutil.h	253;"	d
Tracec	include/zutil.h	249;"	d
Tracec	include/zutil.h	256;"	d
Tracecv	include/zutil.h	250;"	d
Tracecv	include/zutil.h	257;"	d
Tracev	include/zutil.h	247;"	d
Tracev	include/zutil.h	254;"	d
Tracevv	include/zutil.h	248;"	d
Tracevv	include/zutil.h	255;"	d
TranLimit	ctlsmod.c	/^	unsigned char TranLimit[6];			\/\/ xFFF1 - Terminal Contactless Transaction Limit$/;"	m	struct:__anon8	file:
TranLimitExists	ctlsmod.c	/^	int TranLimitExists;$/;"	m	struct:__anon8	file:
TranslateBaudRate	comms.c	/^uchar TranslateBaudRate(uchar bBaudRate)$/;"	f
UNALIGNED_OK	include/zconf.h	92;"	d
UNARY_PRIORITY	lua/lparser.c	821;"	d	file:
UPDATE	inflate.c	363;"	d	file:
UPDATE	inflate.c	366;"	d	file:
UPDATE_BAL	ctlsmod.c	/^	SET_BAUD = 0, PING, PASSTHRU, SET_LED, SET_POLL, ACTIVATE_TRAN, SET_DISP, UPDATE_BAL, GET_EMV_CONFIG, SET_EMV_CONFIG,$/;"	e	enum:__anon2	file:
UpdateField_Bool	emvAid.c	/^static unsigned char UpdateField_Bool (char * ptField, unsigned char * pfDest)$/;"	f	file:
UpdateField_HexFixedLen	emvAid.c	/^static unsigned char UpdateField_HexFixedLen (char * ptField, unsigned char *pbDestBuff, unsigned char bDestBuffSize, unsigned char fAddLenByte)$/;"	f	file:
UpdateField_HexMaxLen	emvAid.c	/^static char UpdateField_HexMaxLen (char * ptField, unsigned char * pbDestBuff, char bDestBuffSize, char fAddLenByte)$/;"	f	file:
UtilBinToBCD	util.c	/^void UtilBinToBCD(uchar data, uchar * bcd, uchar length)$/;"	f
UtilBinToBCD	utilbintobcd.c	/^void UtilBinToBCD(uchar data, uchar * bcd, uchar length)$/;"	f
UtilHexToString	util.c	/^char * UtilHexToString(const char * hex, int length, char * string)$/;"	f
UtilHexToString	utilhextostring.c	/^char * UtilHexToString(uchar * hex, int length, char * string)$/;"	f
UtilStrDup	util.c	/^char * UtilStrDup(char ** dest, const char * source)$/;"	f
UtilStrDup	utilstrdup.c	/^char * UtilStrDup(char ** dest, char * source)$/;"	f
UtilStringToHex	util.c	/^int UtilStringToHex(const char * string, int length, uchar * hex)$/;"	f
UtilStringToHex	utilstringtohex.c	/^int UtilStringToHex(char * string, int length, uchar * hex)$/;"	f
UtilStringToNumber	util.c	/^long UtilStringToNumber(const char * string)$/;"	f
UtilStringToNumber	utilstringtonumber.c	/^long UtilStringToNumber(char * string)$/;"	f
VALUEWEAK	lua/lgc.c	48;"	d	file:
VMACDeactivate	input.c	/^void VMACDeactivate(void)$/;"	f
VMACHotKey	input.c	/^void VMACHotKey(char * appName, int event)$/;"	f
VMACLoop	input.c	/^int VMACLoop(void)$/;"	f
VOID	lua/print.c	21;"	d	file:
VX810_CTLS	ctlsmod.c	/^	DEFAULT = 0, QX1000, QX120, VX810_CTLS$/;"	e	enum:__anon5	file:
ViV0techGenerateKeyDataMsgs	ctlsmod.c	/^void ViV0techGenerateKeyDataMsgs(unsigned char *reqdata, int *reqdatalen, unsigned char *data, int datalen)$/;"	f
ViVOpayCheckResponse	ctlsmod.c	/^int ViVOpayCheckResponse(unsigned char *data, int length)$/;"	f
ViVOpayGetAllConfigAIDs	ctlsmod.c	/^int ViVOpayGetAllConfigAIDs(void)$/;"	f
ViVOpayGetAllConfigGroups	ctlsmod.c	/^int ViVOpayGetAllConfigGroups(void)$/;"	f
ViVOpayGetConfig	ctlsmod.c	/^int ViVOpayGetConfig(void)$/;"	f
ViVOpayGetMessages	ctlsmod.c	/^int ViVOpayGetMessages(void)$/;"	f
ViVOpayGetProductType	ctlsmod.c	/^PRODUCT_TYPE ViVOpayGetProductType(void)$/;"	f
ViVOpayLoadConfig	ctlsmod.c	/^int ViVOpayLoadConfig(void)$/;"	f
ViVOpayLoadMessages	ctlsmod.c	/^int ViVOpayLoadMessages(PRODUCT_TYPE ProdType)$/;"	f
ViVOpayProcessAIDTable	ctlsmod.c	/^int ViVOpayProcessAIDTable(void)$/;"	f
ViVOtechGenerateCommand	ctlsmod.c	/^int ViVOtechGenerateCommand(CTLS_VIVOTECH_CMD_TYPE cmd, unsigned char *sendCmd, int *sendCmdlen, unsigned char *data, int datalen)$/;"	f
ViVOtechGenerateKeyMgmtCommand	ctlsmod.c	/^int ViVOtechGenerateKeyMgmtCommand(CTLS_VIVOTECH_CMD_TYPE cmd, unsigned char *sendCmd, int *sendCmdlen, unsigned char *data, int datalen,$/;"	f
WIN32	include/zconf.h	73;"	d
WINDOWS	include/zconf.h	69;"	d
Wave3CheckResponse	ctlsmod.c	/^int Wave3CheckResponse(unsigned char *data, int length)$/;"	f
Wave3GenerateCommand	ctlsmod.c	/^int Wave3GenerateCommand(CTLS_WAVE3_CMD_TYPE cmdType, unsigned char *req, int *reqlen, unsigned char *data, int datalen)$/;"	f
Wave3GoodSeqNumber	ctlsmod.c	/^int Wave3GoodSeqNumber(unsigned int seqnumber)$/;"	f
Wave3IncreaseSeqNumber	ctlsmod.c	/^unsigned int Wave3IncreaseSeqNumber(void)$/;"	f
Wave3SetEMVTag	ctlsmod.c	/^int Wave3SetEMVTag(void)$/;"	f
Z	lua/lundump.c	/^ ZIO* Z;$/;"	m	struct:__anon19	file:
ZALLOC	include/zutil.h	264;"	d
ZCONF_H	include/zconf.h	9;"	d
ZEXPORT	include/zconf.h	225;"	d
ZEXPORT	include/zconf.h	237;"	d
ZEXPORT	include/zconf.h	240;"	d
ZEXPORT	include/zconf.h	250;"	d
ZEXPORTVA	include/zconf.h	227;"	d
ZEXPORTVA	include/zconf.h	229;"	d
ZEXPORTVA	include/zconf.h	238;"	d
ZEXPORTVA	include/zconf.h	241;"	d
ZEXPORTVA	include/zconf.h	253;"	d
ZEXTERN	include/zconf.h	208;"	d
ZEXTERN	include/zconf.h	210;"	d
ZEXTERN	include/zconf.h	247;"	d
ZFREE	include/zutil.h	266;"	d
ZLIB_H	include/zlib.h	32;"	d
ZLIB_INTERNAL	adler32.c	8;"	d	file:
ZLIB_INTERNAL	include/zutil.h	16;"	d
ZLIB_VERNUM	include/zlib.h	41;"	d
ZLIB_VERSION	include/zlib.h	40;"	d
ZUTIL_H	include/zutil.h	14;"	d
Z_ASCII	include/zlib.h	198;"	d
Z_BEST_COMPRESSION	include/zlib.h	185;"	d
Z_BEST_SPEED	include/zlib.h	184;"	d
Z_BINARY	include/zlib.h	196;"	d
Z_BLOCK	include/zlib.h	167;"	d
Z_BUF_ERROR	include/zlib.h	177;"	d
Z_DATA_ERROR	include/zlib.h	175;"	d
Z_DEFAULT_COMPRESSION	include/zlib.h	186;"	d
Z_DEFAULT_STRATEGY	include/zlib.h	193;"	d
Z_DEFLATED	include/zlib.h	202;"	d
Z_ERRNO	include/zlib.h	173;"	d
Z_FILTERED	include/zlib.h	189;"	d
Z_FINISH	include/zlib.h	166;"	d
Z_FIXED	include/zlib.h	192;"	d
Z_FULL_FLUSH	include/zlib.h	165;"	d
Z_HUFFMAN_ONLY	include/zlib.h	190;"	d
Z_MEM_ERROR	include/zlib.h	176;"	d
Z_NEED_DICT	include/zlib.h	172;"	d
Z_NO_COMPRESSION	include/zlib.h	183;"	d
Z_NO_FLUSH	include/zlib.h	162;"	d
Z_NULL	include/zlib.h	205;"	d
Z_OK	include/zlib.h	170;"	d
Z_PARTIAL_FLUSH	include/zlib.h	163;"	d
Z_RLE	include/zlib.h	191;"	d
Z_STREAM_END	include/zlib.h	171;"	d
Z_STREAM_ERROR	include/zlib.h	174;"	d
Z_SYNC_FLUSH	include/zlib.h	164;"	d
Z_TEXT	include/zlib.h	197;"	d
Z_UNKNOWN	include/zlib.h	199;"	d
Z_VERSION_ERROR	include/zlib.h	178;"	d
_EMV_H_	include/emv.h	3;"	d
_PTRDIFF_T_DEFINED	include/zutil.h	159;"	d
_SHA1_H	include/sha1.h	2;"	d
__3des_rsa_store	iriscrypt.c	/^bool __3des_rsa_store(char *data, int rsakey, int kek)$/;"	f
__ALLOC_H	include/alloc.h	2;"	d
__AS2805_H	include/as2805.h	2;"	d
__AURIS_H	include/auris.h	2;"	d
__CECALLS_H_	include/IrisComm.h	2;"	d
__COMMS_H	include/comms.h	2;"	d
__DISPLAY_H	include/display.h	2;"	d
__EmvDbAidDataAddUpdate	emvAid.c	/^int	__EmvDbAidDataAddUpdate(const EMV_AID_RECORD *psRecord)$/;"	f
__EmvDbAidIdx2EstRecAppNo	emvAid.c	81;"	d	file:
__EmvDbAidIdx2EstRecNo	emvAid.c	78;"	d	file:
__EmvDbCapkIdx2EstRecCapkNo	emvAid.c	90;"	d	file:
__EmvDbCapkIdx2EstRecNo	emvAid.c	87;"	d	file:
__EmvDbEstRecAppNo2AidIdx	emvAid.c	75;"	d	file:
__EmvDbEstRecCapkNo2CapkIdx	emvAid.c	84;"	d	file:
__EmvDbEstRecLoad	emvAid.c	/^static int	__EmvDbEstRecLoad(int iRecNo)$/;"	f	file:
__EmvDbEstRecRestore	emvAid.c	/^static int	__EmvDbEstRecRestore(void)$/;"	f	file:
__EmvDbGetAidIndex	emvAid.c	/^int		__EmvDbGetAidIndex(char *pbAid)$/;"	f
__EmvDbMvtRecLoad	emvAid.c	/^static int	__EmvDbMvtRecLoad(int iRecNo)$/;"	f	file:
__EmvDbMvtRecRestore	emvAid.c	/^static int	__EmvDbMvtRecRestore(void)$/;"	f	file:
__INPUTMACRO_H	include/inputmacro.h	2;"	d
__INPUT_H	include/Input.h	2;"	d
__IRISCOMMS_H	include/iriscomms.h	2;"	d
__IRISFUNC_H	include/irisfunc.h	2;"	d
__IRIS_H	include/iris.h	2;"	d
__IRIS_H	include/iris_old.h	2;"	d
__PRINTER_H_	include/printer.h	2;"	d
__PRTEAN128_H	include/Prtean128.h	16;"	d
__PRTEAN13_H	include/Prtean13.h	16;"	d
__SECURITY_H	include/security.h	2;"	d
__TIMER_H	include/timer.h	2;"	d
__TIME_H	include/my_time.h	2;"	d
__UTILITY_H	include/utility.h	2;"	d
____printDump	iris_io.c	/^static char * ____printDump(char * dump, char * data, int graphics)$/;"	f	file:
____ser_disconnect	irisser.c	/^int ____ser_disconnect(int myPort)$/;"	f
____time	iristime.c	/^void ____time(char * value, int * which, char * output, int * j)$/;"	f
__add_print_data	iris_io.c	/^static void __add_print_data(char ** dump, char * data, int size)$/;"	f	file:
__as2805_break	iris2805.c	/^void __as2805_break(int fldcnt,const char *msg,T_AS2805FIELD *flds , int *errfld)$/;"	f
__as2805_break_custom	iris2805.c	/^void __as2805_break_custom(const char *msg,T_AS2805FIELD **flds, int *errfld)$/;"	f
__as2805_make	iris2805.c	/^void __as2805_make(T_AS2805FIELD **flds, char **pmsg)$/;"	f
__as2805_make_custom	iris2805.c	/^void __as2805_make_custom(T_AS2805FIELD **flds, char **pmsg)$/;"	f
__battery_status	irisutil.c	/^void __battery_status(void)$/;"	f
__checksum_xor	irismath.c	/^void __checksum_xor(void)$/;"	f
__checksum_xor	irismath_new.c	/^void __checksum_xor(void)$/;"	f
__crypt	iriscrypt.c	/^char* __crypt(const char* data, const char *keySize, const char* key, const char *variant, bool decrypt, bool ofb)$/;"	f
__derive_3deskey	iriscrypt.c	/^bool __derive_3deskey(const char* data, const char* variant, const char* key, const char* kek)$/;"	f
__des_random	iriscrypt.c	/^bool __des_random(const char* keySize, const char *key, char *value)$/;"	f
__des_store	iriscrypt.c	/^bool __des_store(const char *data, const char* keySize, const char* key)$/;"	f
__dformat1	iriscrypt.c	/^void __dformat1(char *data, int int_blockSize, char *result)$/;"	f
__dock_status	irisutil.c	/^void __dock_status(void)$/;"	f
__get_key	iriscrypt.c	/^bool __get_key(int key,char *value)$/;"	f
__int8_t_defined	include/auris.h	39;"	d
__ip_connect	iristcp.c	/^void __ip_connect(const char* timeout, const char* sdns, const char *pdns, const char *gw, const char * oip, char **retmsg)$/;"	f
__iv_set	iriscrypt.c	/^bool __iv_set(const char* iv)$/;"	f
__key_xor	iriscrypt.c	/^bool __key_xor( const char* to, const char* from, const char* with_key, const char * with_data )$/;"	f
__kvc	iriscrypt.c	/^void __kvc(const char* keySize, const char * key, char *kvc_)$/;"	f
__lowPower	iris_io.c	/^void __lowPower(void)$/;"	f
__luhn	irisutil.c	/^bool __luhn(const char *pan)$/;"	f
__luhn_real	irismath.c	/^bool __luhn_real(char* pan)$/;"	f
__luhn_real	irismath_new.c	/^bool __luhn_real(char* pan)$/;"	f
__mac	iriscrypt.c	/^char* __mac(const char* data, const char* variant, const char *key , int length, bool dataIsHex, char * mac_value)$/;"	f
__manufacturer	iriscfg.c	/^char* __manufacturer(char* mf)$/;"	f
__model	iriscfg.c	/^void __model(char *model_s)$/;"	f
__now	iristime.c	/^void __now(char *result)$/;"	f
__owf	iriscrypt.c	/^bool __owf(const char* ppasn, const char* to, const char* from, bool variant, const char *data )$/;"	f
__ppid	iriscfg.c	/^void __ppid(char* ppid)$/;"	f
__ppid_remove	iriscfg.c	/^void __ppid_remove(void)$/;"	f
__ppid_update	iriscfg.c	/^void __ppid_update(const char *ppid)$/;"	f
__print_cont	iris_io.c	/^char * __print_cont(const char * data,bool endflag)$/;"	f
__print_err	iris_io.c	/^void __print_err(char *result)$/;"	f
__pstn_connect	irispstn.c	/^char* __pstn_connect(const char *bufSize,const char *baud,const char *interCharTimeout,const char *timeout,const char *phoneNo,const char *pabx,const char *fastConnect,const char *blindDial,const char *dialType,const char *sync,const char *preDial,const char* header)$/;"	f
__pstn_disconnect	irispstn.c	/^void __pstn_disconnect(void)$/;"	f
__pstn_init	irispstn.c	/^void __pstn_init(void)$/;"	f
__pstn_recv	irispstn.c	/^void __pstn_recv(char **pmsg,const char* interCharTimeout, const char *timeout, char * errmsg)$/;"	f
__pstn_send	irispstn.c	/^void __pstn_send(const char* data,char*retMsg)$/;"	f
__pstn_wait	irispstn.c	/^char * __pstn_wait(void)$/;"	f
__rand	irismath.c	/^void __rand(void)$/;"	f
__rand	irismath_new.c	/^void __rand(void)$/;"	f
__remote	irisutil.c	/^bool __remote()$/;"	f
__rsa_clear	iriscrypt.c	/^bool __rsa_clear(const char *rsa)$/;"	f
__rsa_crypt	iriscrypt.c	/^char * __rsa_crypt(const char *data, const char *rsa)$/;"	f
__rsa_store	iriscrypt.c	/^bool __rsa_store(const char *data, const char* rsa)$/;"	f
__rsa_wrap_3des	iriscrypt.c	/^bool __rsa_wrap_3des(const char *rsa_key, const char *des_key,char * result)$/;"	f
__sec_init	iriscfg.c	/^void __sec_init(void)$/;"	f
__ser_connect	irisser.c	/^int __ser_connect(const char *header, const char *port,const char* timeout,const char* interCharTimeout, const char* baud, const char* dataBits, const char* parity, const char* stopBits, const char* bufSize)$/;"	f
__ser_data	irisser.c	/^bool __ser_data(const char* port)$/;"	f
__ser_init	irisser.c	/^void __ser_init(void)$/;"	f
__ser_reconnect	irisser.c	/^int __ser_reconnect(int myPort)$/;"	f
__ser_recv	irisser.c	/^char* __ser_recv(const char *port)$/;"	f
__ser_send	irisser.c	/^int __ser_send(const char *port,const char* data)$/;"	f
__serial_no	iriscfg.c	/^void __serial_no(char* sn)$/;"	f
__sha1	irismath.c	/^void __sha1(void)$/;"	f
__sha1	irismath_new.c	/^void __sha1(void)$/;"	f
__shutdown	iris_io.c	/^void __shutdown(void)$/;"	f
__store_objects	irisutil.c	/^void __store_objects(char *objects)$/;"	f
__tcp_connect	iristcp.c	/^void __tcp_connect(const char * bufSize, const char * interCharTimeout, const char * timeout, const char * port, const char * hip, const char *sdns, const char * pdns, const char *gw, const char* oip , const char * header, char **perrmsg)$/;"	f
__tcp_disconnect	iristcp.c	/^void __tcp_disconnect(void)$/;"	f
__tcp_disconnect_check	iristcp.c	/^int __tcp_disconnect_check(void)$/;"	f
__tcp_disconnect_completely	iristcp.c	/^int __tcp_disconnect_completely(void)$/;"	f
__tcp_disconnect_do	iristcp.c	/^void __tcp_disconnect_do(void)$/;"	f
__tcp_disconnect_extend	iristcp.c	/^int __tcp_disconnect_extend(void)$/;"	f
__tcp_disconnect_ip_only	iristcp.c	/^int __tcp_disconnect_ip_only(void)$/;"	f
__tcp_disconnect_now	iristcp.c	/^void __tcp_disconnect_now(void)$/;"	f
__tcp_gprs_sts	iristcp.c	/^void __tcp_gprs_sts(void)$/;"	f
__tcp_recv	iristcp.c	/^void __tcp_recv(char **pmsg,const char* interCharTimeout, const char *timeout, char * errmsg)$/;"	f
__tcp_send	iristcp.c	/^void __tcp_send(const char* data,char*retMsg)$/;"	f
__text_table	irisutil.c	/^void __text_table(const char* search, const char* textTableObjectName, char** pfound)$/;"	f
__time_real	iristime.c	/^char*  __time_real(const char* format,char *output)$/;"	f
__time_set	iristime.c	/^void __time_set(const char *newTime)$/;"	f
__timer_start	iristime.c	/^void __timer_start(int timer_idx)$/;"	f
__timer_started	iristime.c	/^bool __timer_started(int timer_idx)$/;"	f
__timer_stop	iristime.c	/^long __timer_stop(int timer_idx)$/;"	f
__to_ascii_hex	irismath.c	/^void __to_ascii_hex(void)$/;"	f
__to_ascii_hex	irismath_new.c	/^void __to_ascii_hex(void)$/;"	f
__to_hex	irismath.c	/^void __to_hex(void)$/;"	f
__to_hex	irismath_new.c	/^void __to_hex(void)$/;"	f
__uint32_t_defined	include/auris.h	49;"	d
__upload_msg	irisutil.c	/^void __upload_msg(const char *message)$/;"	f
__upload_obj	irisutil.c	/^void __upload_obj(const char *objectName)$/;"	f
_adjustForVarBCD	as2805.c	/^static void _adjustForVarBCD(char * temp)$/;"	f	file:
_bcdToNumber	as2805.c	/^static ulong _bcdToNumber(uchar * bcd, uint * index, uint size, uchar format)$/;"	f	file:
_bcdToString	as2805.c	/^static char * _bcdToString(uchar * bcd, uint * index, uint size, uchar format, char * string)$/;"	f	file:
_delete_	include/auris.h	68;"	d
_emv_pack_tlv	irisemv.c	/^bool _emv_pack_tlv(const char* tag,char* results)$/;"	f
_getVariant	security.c	/^int _getVariant(uchar * data, uchar keySize, uchar * variant)$/;"	f
_halloc	zutil.c	271;"	d	file:
_hfree	zutil.c	272;"	d	file:
_insert	include/auris.h	69;"	d
_ser_param	irisser.c	/^static void _ser_param(T_COMMS * myComms, const char * baud, const char * dataBits, const char * parity, const char * stopBits)$/;"	f	file:
aORbFirst	Prtean128.c	/^static int aORbFirst(uchar * data)$/;"	f	file:
abBarcode	printer.c	/^uchar abBarcode[100];$/;"	v
abs_index	lua/lauxlib.c	32;"	d	file:
acct	include/emv.h	/^	char acct[10] ;$/;"	m	struct:__anon35
acct_nocr	include/emv.h	/^	bool acct_nocr ;$/;"	m	struct:__anon35
action	include/as2805.h	/^    short action;$/;"	m	struct:__anon30
active	input.c	/^	int active = -1;$/;"	v
add_s	lua/lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_value	lua/lstrlib.c	/^static void add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
addfield	lua/ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, int i) {$/;"	f	file:
addinfo	lua/ldebug.c	/^static void addinfo (lua_State *L, const char *msg) {$/;"	f	file:
addintlen	lua/lstrlib.c	/^static void addintlen (char *form) {$/;"	f	file:
addk	lua/lcode.c	/^static int addk (FuncState *fs, TValue *k, TValue *v) {$/;"	f	file:
addquoted	lua/lstrlib.c	/^static void addquoted (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	file:
adjust_assign	lua/lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	file:
adjust_varargs	lua/ldo.c	/^static StkId adjust_varargs (lua_State *L, Proto *p, int actual) {$/;"	f	file:
adjustlocalvars	lua/lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	file:
adjustresults	lua/lapi.c	768;"	d	file:
adjuststack	lua/lauxlib.c	/^static void adjuststack (luaL_Buffer *B) {$/;"	f	file:
adler	include/zlib.h	/^    uLong   adler;      \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s
adler32	adler32.c	/^uLong ZEXPORT adler32(uLong adler, const Bytef *buf, uInt len)$/;"	f
adler32	include/zconf.h	41;"	d
alloc_func	include/zconf.h	46;"	d
alloc_func	include/zlib.h	/^typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));$/;"	t
amt	include/emv.h	/^	long amt ;$/;"	m	struct:__anon35
anchor_token	lua/lparser.c	/^static void anchor_token (LexState *ls) {$/;"	f	file:
api_checknelems	lua/lapi.c	41;"	d	file:
api_checkvalidindex	lua/lapi.c	43;"	d	file:
api_incr_top	lua/lapi.c	45;"	d	file:
appConfig_t	include/IrisComm.h	/^} appConfig_t;$/;"	t	typeref:struct:tagAPPCONFIG
appsTotal	include/emv.h	/^	unsigned short appsTotal;$/;"	m	struct:__anon35
argc	lua/lua.c	/^  int argc;$/;"	m	struct:Smain	file:
argc	lua/luac.c	/^ int argc;$/;"	m	struct:Smain	file:
argv	lua/lua.c	/^  char **argv;$/;"	m	struct:Smain	file:
argv	lua/luac.c	/^ char** argv;$/;"	m	struct:Smain	file:
arith_op	lua/lvm.c	360;"	d	file:
arrayindex	lua/ltable.c	/^static int arrayindex (const TValue *key) {$/;"	f	file:
asAidData	emvAid.c	/^static EMV_AID_RECORD	asAidData[EMV_MAX_AID_RECORDS];$/;"	v	file:
ascii_to_binary	emvmisc.c	/^void ascii_to_binary(char *dest, const char *src, int length)$/;"	f
assignment	lua/lparser.c	/^static void assignment (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	file:
atomic	lua/lgc.c	/^static void atomic (lua_State *L) {$/;"	f	file:
aux_close	lua/liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	file:
aux_getn	lua/ltablib.c	19;"	d	file:
aux_lines	lua/liolib.c	/^static void aux_lines (lua_State *L, int idx, int toclose) {$/;"	f	file:
aux_upvalue	lua/lapi.c	/^static const char *aux_upvalue (StkId fi, int n, TValue **val) {$/;"	f	file:
auxgetinfo	lua/ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	file:
auxopen	lua/lbaselib.c	/^static void auxopen (lua_State *L, const char *name,$/;"	f	file:
auxresume	lua/lbaselib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:
auxsort	lua/ltablib.c	/^static void auxsort (lua_State *L, int l, int u) {$/;"	f	file:
auxupvalue	lua/ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	file:
avail_in	include/zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s
avail_out	include/zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s
b	lua/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:
b	lua/lundump.c	/^ Mbuffer* b;$/;"	m	struct:__anon19	file:
bBarcodeIndex	printer.c	/^uchar bBarcodeIndex;$/;"	v
bBaudRate	include/comms.h	/^	uint bBaudRate;$/;"	m	struct:__anon34
bConnectionTimeout	include/comms.h	/^	uint bConnectionTimeout;$/;"	m	struct:__anon34
bDataBits	include/comms.h	/^	uint bDataBits;$/;"	m	struct:__anon34
bEscapeIndex	printer.c	/^uchar bEscapeIndex;$/;"	v
bGraphicsMultiplier	printer.c	/^uchar bGraphicsMultiplier;$/;"	v
bIsCardBlackListed	emv.c	/^EMVBoolean bIsCardBlackListed(byte * pan, unsigned short panLen, byte * panSeqNo, unsigned short panSeqLen)$/;"	f
bKeyCode	input.c	/^	uchar bKeyCode;$/;"	m	struct:__anon12	file:
bResponseTimeout	include/comms.h	/^	uint bResponseTimeout;$/;"	m	struct:__anon34
bStopBits	include/comms.h	/^	uint bStopBits;$/;"	m	struct:__anon34
banner	iris_io.c	/^static const char banner[] = "**** GRAPHICS START ****";$/;"	v	file:
banner2	iris_io.c	/^static const char banner2[] = "**** GRAPHICS END   ****";$/;"	v	file:
base_funcs	lua/lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	file:
base_open	lua/lbaselib.c	/^static void base_open (lua_State *L) {$/;"	f	file:
bcdLength	as2805.c	/^static bool bcdLength = true; \/\/ false;$/;"	v	file:
big_counter	malloc.c	/^int big_counter = 0;$/;"	v
bits	include/inflate.h	/^    unsigned bits;              \/* number of bits in "in" *\/$/;"	m	struct:inflate_state
bits	include/inftrees.h	/^    unsigned char bits;         \/* bits in this part of the code *\/$/;"	m	struct:__anon37
black2gray	lua/lgc.c	38;"	d	file:
block	include/alloc.h	/^	unsigned char block[C_BIG_BLOCK_SIZE];$/;"	m	struct:__anon29
block	include/alloc.h	/^	void * block[C_MED_BLOCK_SIZE \/ sizeof(void *)];$/;"	m	struct:__anon28
block	include/alloc.h	/^	void * block[C_TINY_BLOCK_SIZE \/ sizeof(void *)];$/;"	m	struct:__anon27
block	lua/lparser.c	/^static void block (LexState *ls) {$/;"	f	file:
block_follow	lua/lparser.c	/^static int block_follow (int token) {$/;"	f	file:
body	lua/lparser.c	/^static void body (LexState *ls, expdesc *e, int needself, int line) {$/;"	f	file:
bool	include/auris.h	/^typedef	unsigned char	bool;$/;"	t
boolK	lua/lcode.c	/^static int boolK (FuncState *fs, int b) {$/;"	f	file:
boolean	include/LibCtls.h	/^typedef byte boolean;$/;"	t
breaklist	lua/lparser.c	/^  int breaklist;  \/* list of jumps out of this loop *\/$/;"	m	struct:BlockCnt	file:
breakstat	lua/lparser.c	/^static void breakstat (LexState *ls) {$/;"	f	file:
bufLen	irispstn.c	/^static int bufLen = 300;$/;"	v	file:
bufLen	irisser.c	/^static int bufLen = 300;$/;"	v	file:
bufLen	iristcp.c	/^static int bufLen = 300;$/;"	v	file:
buff	lua/lauxlib.c	/^  char buff[LUAL_BUFFERSIZE];$/;"	m	struct:LoadF	file:
buff	lua/ldo.c	/^  Mbuffer buff;  \/* buffer to be used by the scanner *\/$/;"	m	struct:SParser	file:
buffer	as2805.c	/^static uchar * buffer = NULL;$/;"	v	file:
buffer	include/sha1.h	/^    uint8 buffer[64];$/;"	m	struct:__anon43
bufffree	lua/lauxlib.c	401;"	d	file:
bufflen	lua/lauxlib.c	400;"	d	file:
buffreplace	lua/llex.c	/^static void buffreplace (LexState *ls, char from, char to) {$/;"	f	file:
buttons	include/Input.h	/^	T_MenuTchDtl buttons[10];$/;"	m	struct:__anon24
byte	include/LibCtls.h	/^typedef unsigned char   byte;$/;"	t
callTM	lua/lvm.c	/^static void callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f	file:
callTMres	lua/lvm.c	/^static void callTMres (lua_State *L, StkId res, const TValue *f,$/;"	f	file:
call_binTM	lua/lvm.c	/^static int call_binTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
call_orderTM	lua/lvm.c	/^static int call_orderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
callallgcTM	lua/lstate.c	/^static void callallgcTM (lua_State *L, void *ud) {$/;"	f	file:
callrethooks	lua/ldo.c	/^static StkId callrethooks (lua_State *L, StkId firstResult) {$/;"	f	file:
cannot	lua/luac.c	/^static void cannot(const char* what)$/;"	f	file:
capture	lua/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon18	file:
capture_to_close	lua/lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	file:
card_type	include/LibCtls.h	/^  char  card_type;      \/*   ISO14443A_CARD_TYPE or ISO14443B_CARD_TYPE                  *\/$/;"	m	struct:__anon26
ceEvent_t	include/IrisComm.h	/^} ceEvent_t;$/;"	t	typeref:struct:tagCEEvent
charf	include/zconf.h	/^typedef char  FAR charf;$/;"	t
charf	include/zconf.h	54;"	d
check	include/inflate.h	/^    unsigned long check;        \/* protected copy of check value *\/$/;"	m	struct:inflate_state
check	lua/ldebug.c	268;"	d	file:
check	lua/ldebug.c	477;"	d	file:
check	lua/lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	file:
checkArgMode	lua/ldebug.c	/^static int checkArgMode (const Proto *pt, int r, enum OpArgMask mode) {$/;"	f	file:
checkSizes	lua/lgc.c	/^static void checkSizes (lua_State *L) {$/;"	f	file:
check_capture	lua/lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	file:
check_condition	lua/lparser.c	100;"	d	file:
check_conflict	lua/lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	file:
check_match	lua/lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	file:
check_next	lua/llex.c	/^static int check_next (LexState *ls, const char *set) {$/;"	f	file:
checkint	lua/lauxlib.c	/^static int checkint (lua_State *L, int topop) {$/;"	f	file:
checkjump	lua/ldebug.c	270;"	d	file:
checkjump	lua/ldebug.c	478;"	d	file:
checkname	lua/lparser.c	/^static void checkname(LexState *ls, expdesc *e) {$/;"	f	file:
checknext	lua/lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	file:
checkopenop	lua/ldebug.c	288;"	d	file:
checkreg	lua/ldebug.c	272;"	d	file:
checkreg	lua/ldebug.c	479;"	d	file:
checkresults	lua/lapi.c	772;"	d	file:
checkstacksizes	lua/lgc.c	/^static void checkstacksizes (lua_State *L, StkId max) {$/;"	f	file:
chipfallback	include/emv.h	/^	bool chipfallback; \/\/ offline$/;"	m	struct:__anon35
chunk	lua/lparser.c	/^static void chunk (LexState *ls) {$/;"	f	file:
classend	lua/lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	file:
clearingrecindex	ctlsmod.c	/^	int clearingrecindex;$/;"	m	struct:__anon7	file:
clearingreclen	ctlsmod.c	/^	int clearingreclen;$/;"	m	struct:__anon7	file:
clearingrectag	ctlsmod.c	/^	EMV_TAG_REC clearingrectag[20];$/;"	m	struct:__anon7	file:
cleartable	lua/lgc.c	/^static void cleartable (GCObject *l) {$/;"	f	file:
close_func	lua/lparser.c	/^static void close_func (LexState *ls) {$/;"	f	file:
close_state	lua/lstate.c	/^static void close_state (lua_State *L) {$/;"	f	file:
closelistfield	lua/lparser.c	/^static void closelistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
cnt	include/Input.h	/^	int cnt;$/;"	m	struct:__anon24
co_funcs	lua/lbaselib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	file:
code	include/inftrees.h	/^} code;$/;"	t	typeref:struct:__anon37
code_label	lua/lcode.c	/^static int code_label (FuncState *fs, int A, int b, int jump) {$/;"	f	file:
codearith	lua/lcode.c	/^static void codearith (FuncState *fs, OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	file:
codecomp	lua/lcode.c	/^static void codecomp (FuncState *fs, OpCode op, int cond, expdesc *e1,$/;"	f	file:
codenot	lua/lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	file:
codes	include/inflate.h	/^    code codes[ENOUGH];         \/* space for code tables *\/$/;"	m	struct:inflate_state
codestring	lua/lparser.c	/^static void codestring (LexState *ls, expdesc *e, TString *s) {$/;"	f	file:
codetype	include/inftrees.h	/^} codetype;$/;"	t	typeref:enum:__anon38
col	include/Input.h	/^    uchar col;$/;"	m	struct:__anon22
collectargs	lua/lua.c	/^static int collectargs (char **argv, int *pi, int *pv, int *pe) {$/;"	f	file:
collectvalidlines	lua/ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	file:
combine	lua/luac.c	/^static const Proto* combine(lua_State* L, int n)$/;"	f	file:
comm_max	include/zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s
command	ctlsmod.c	/^	char command;$/;"	m	struct:__anon4	file:
command	ctlsmod.c	/^	int command;$/;"	m	struct:__anon10	file:
comment	include/zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s
comms	irispstn.c	/^static T_COMMS comms;$/;"	v	file:
comms	irisser.c	/^static T_COMMS comms[2];$/;"	v	file:
comms	iristcp.c	/^static T_COMMS comms;$/;"	v	file:
compress	include/zconf.h	37;"	d
compress2	include/zconf.h	38;"	d
compressBound	include/zconf.h	39;"	d
computesizes	lua/ltable.c	/^static int computesizes (int nums[], int *narray) {$/;"	f	file:
conHandle	irismain.c	/^int conHandle = -1;$/;"	v
cond	lua/lparser.c	/^static int cond (LexState *ls) {$/;"	f	file:
condjump	lua/lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C) {$/;"	f	file:
const	include/zconf.h	124;"	d
constfolding	lua/lcode.c	/^static int constfolding (OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	file:
constructor	lua/lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	file:
correctstack	lua/ldo.c	/^static void correctstack (lua_State *L, TValue *oldstack) {$/;"	f	file:
costatus	lua/lbaselib.c	/^static int costatus (lua_State *L, lua_State *co) {$/;"	f	file:
countint	lua/ltable.c	/^static int countint (const TValue *key, int *nums) {$/;"	f	file:
cracct_disable	include/emv.h	/^	bool cracct_disable;$/;"	m	struct:__anon35
crc32	crc32.c	/^unsigned long ZEXPORT crc32(unsigned long crc, const unsigned char FAR *buf, unsigned len)$/;"	f
crc32	include/zconf.h	42;"	d
crc32_big	crc32.c	/^local unsigned long crc32_big(unsigned long crc, const unsigned char FAR *buf, unsigned len)$/;"	f
crc32_little	crc32.c	/^local unsigned long crc32_little(unsigned long crc, const unsigned char FAR *buf, unsigned len)$/;"	f
crc_table	crc32.c	/^local unsigned long FAR crc_table[TBLS][256];$/;"	v
crc_table	include/crc32.h	/^local const unsigned long FAR crc_table[TBLS][256] =$/;"	v
crc_table_empty	crc32.c	/^local volatile int crc_table_empty = 1;$/;"	v
crctype	ctlsmod.c	/^	CRC_TYPE crctype;$/;"	m	struct:__anon4	file:
createScriptFiles	emvmisc.c	/^int createScriptFiles(const byte *scriptBuf,short bufLen)$/;"	f
createmeta	lua/liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	file:
createmetatable	lua/lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	file:
createstdfile	lua/liolib.c	/^static void createstdfile (lua_State *L, FILE *f, int k, const char *fname) {$/;"	f	file:
cryptoHandle	security.c	/^int cryptoHandle = -2;$/;"	v
ctlsCall	input.c	/^int ctlsCall( int acc, long amt, char *tr1,char *tr2,char *tlvs)$/;"	f
ctlsCommand	ctlsmod.c	/^int ctlsCommand(int vivopay, int timeout, unsigned char *req, int reqlen, unsigned char *resp, int *resplen)$/;"	f
ctlsDisable	ctlsmod.c	/^int ctlsDisable(void)$/;"	f
ctlsEnable	ctlsmod.c	/^int ctlsEnable( int timeout, int trantype, unsigned long amount, ctls_read_cb callback)$/;"	f
ctlsEnableCallback	ctlsmod.c	/^void ctlsEnableCallback(int timer)$/;"	f
ctlsGetEMVTag	ctlsmod.c	/^int ctlsGetEMVTag(int EMVTag, unsigned char *data, int *datalen)$/;"	f
ctlsGetLimit	ctlsmod.c	/^long ctlsGetLimit(int LimitType, char *AID)$/;"	f
ctlsGetTrackData	ctlsmod.c	/^int ctlsGetTrackData(int trackno, unsigned char *trackdata, int *tracklen)$/;"	f
ctlsInitialise	ctlsmod.c	/^int ctlsInitialise(int port)$/;"	f
ctlsOnlineAuthReq	ctlsmod.c	/^int ctlsOnlineAuthReq(void)$/;"	f
ctlsParseData	ctlsmod.c	/^int ctlsParseData(unsigned int *cardtype, long amount, unsigned char *data, int datalen)$/;"	f
ctlsPending	ctlsmod.c	/^int ctlsPending(void)$/;"	f
ctlsRead	ctlsmod.c	/^int ctlsRead(int vivopay, unsigned char *resp, int *resplen)$/;"	f
ctlsReset	ctlsmod.c	/^void ctlsReset(void)$/;"	f
ctlsSend	ctlsmod.c	/^int ctlsSend(unsigned char *req, int reqlen)$/;"	f
ctlsSetEMVTag	ctlsmod.c	/^int ctlsSetEMVTag(int EMVTag, unsigned char *data, int datalen)$/;"	f
ctls_evo	ctlsmod.c	/^int ctls_evo = false;$/;"	v
ctls_firsttime	ctlsmod.c	/^int ctls_firsttime = false;$/;"	v
ctls_maxtranslimit	ctlsmod.c	/^int ctls_maxtranslimit = 100;$/;"	v
ctls_on	ctlsmod.c	/^int ctls_on = false;$/;"	v
ctls_online_auth_req	ctlsmod.c	/^int ctls_online_auth_req = false;$/;"	v
ctls_port	ctlsmod.c	/^int ctls_port = 0;$/;"	v
ctls_read_callback	ctlsmod.c	/^ctls_read_cb ctls_read_callback;$/;"	v
ctls_read_cb	include/ctlsmod.h	/^typedef void (*ctls_read_cb)(int timeout, int firsttime, unsigned char *data, int length);$/;"	t
ctls_read_timer	ctlsmod.c	/^int ctls_read_timer;$/;"	v
ctls_reader	ctlsmod.c	/^int ctls_reader = false;$/;"	v
ctls_seqnumber	ctlsmod.c	/^unsigned int ctls_seqnumber = 0;$/;"	v
ctls_timeout	ctlsmod.c	/^int ctls_timeout = 100;$/;"	v
ctls_ui_stop_handler	ctlsmod.c	/^void ctls_ui_stop_handler(void* notUsed)$/;"	f
ctls_vivotech_cmd	ctlsmod.c	/^CTLS_VIVOTECH_CMD_VALUES ctls_vivotech_cmd[] =$/;"	v
ctls_wait_tap	ctlsmod.c	/^int ctls_wait_tap = false;$/;"	v
ctls_wave3_cmd	ctlsmod.c	/^CTLS_WAVE3_CMD_VALUES ctls_wave3_cmd[20] = $/;"	v
currGateway	iristcp.c	/^static char currGateway[50]="";$/;"	v	file:
currHandle	iristcp.c	/^static unsigned int currHandle=0xFFFF;$/;"	v	file:
currIPAddress	iristcp.c	/^static char currIPAddress[50]="";$/;"	v	file:
currIsNewline	lua/llex.c	33;"	d	file:
currOwnIPAddress	iristcp.c	/^static char currOwnIPAddress[50]="";$/;"	v	file:
currPDNS	iristcp.c	/^static char currPDNS[50]="";$/;"	v	file:
currPortNumber	iristcp.c	/^static unsigned int currPortNumber=0;$/;"	v	file:
currSDNS	iristcp.c	/^static char currSDNS[50]="";$/;"	v	file:
currentObject	irismain.c	/^char * currentObject = NULL;$/;"	v
currentObjectData	irismain.c	/^char * currentObjectData = NULL;$/;"	v
currentObjectGroup	irismain.c	/^char * currentObjectGroup = NULL;$/;"	v
currentScreen	irismain.c	/^char * currentScreen( int getset, char* scrname)$/;"	f
currentline	lua/ldebug.c	/^static int currentline (lua_State *L, CallInfo *ci) {$/;"	f	file:
currentpc	lua/ldebug.c	/^static int currentpc (lua_State *L, CallInfo *ci) {$/;"	f	file:
data	include/as2805.h	/^    uchar *data;$/;"	m	struct:__anon30
data	lua/ldump.c	/^ void* data;$/;"	m	struct:__anon16	file:
data_type	include/zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text *\/$/;"	m	struct:z_stream_s
datalength	ctlsmod.c	/^	int datalength;$/;"	m	struct:__anon10	file:
datalength	ctlsmod.c	/^	int datalength;$/;"	m	struct:__anon4	file:
datatag	ctlsmod.c	/^	EMV_TAG_REC datatag[100];$/;"	m	struct:__anon7	file:
datatagindex	ctlsmod.c	/^	int datatagindex;$/;"	m	struct:__anon7	file:
db_debug	lua/ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	file:
db_errorfb	lua/ldblib.c	/^static int db_errorfb (lua_State *L) {$/;"	f	file:
db_getfenv	lua/ldblib.c	/^static int db_getfenv (lua_State *L) {$/;"	f	file:
db_gethook	lua/ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	file:
db_getinfo	lua/ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	file:
db_getlocal	lua/ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	file:
db_getmetatable	lua/ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	file:
db_getregistry	lua/ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	file:
db_getupvalue	lua/ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	file:
db_setfenv	lua/ldblib.c	/^static int db_setfenv (lua_State *L) {$/;"	f	file:
db_sethook	lua/ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:
db_setlocal	lua/ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	file:
db_setmetatable	lua/ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	file:
db_setupvalue	lua/ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	file:
dblib	lua/ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	file:
dbprintf	ctlsmod.c	45;"	d	file:
dbprintf_hexdump	ctlsmod.c	/^void  dbprintf_hexdump(char *prefix, unsigned char *data, int length)$/;"	f
decimalPoint	include/Input.h	/^	uchar decimalPoint;$/;"	m	struct:__anon22
decompress	irisutil.c	/^static unsigned char * decompress(unsigned char * input, unsigned long outSize, unsigned long size)$/;"	f	file:
deflate	include/zconf.h	17;"	d
deflateBound	include/zconf.h	27;"	d
deflateCopy	include/zconf.h	24;"	d
deflateEnd	include/zconf.h	18;"	d
deflateInit	include/zlib.h	1331;"	d
deflateInit2	include/zlib.h	1335;"	d
deflateInit2_	include/zconf.h	22;"	d
deflateInit_	include/zconf.h	16;"	d
deflateParams	include/zconf.h	26;"	d
deflatePrime	include/zconf.h	28;"	d
deflateReset	include/zconf.h	25;"	d
deflateSetDictionary	include/zconf.h	23;"	d
discharge2anyreg	lua/lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	file:
discharge2reg	lua/lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
dischargejpc	lua/lcode.c	/^static void dischargejpc (FuncState *fs) {$/;"	f	file:
distbits	include/inflate.h	/^    unsigned distbits;          \/* index bits for distcode *\/$/;"	m	struct:inflate_state
distcode	include/inflate.h	/^    code const FAR *distcode;   \/* starting table for distance codes *\/$/;"	m	struct:inflate_state
distfix	include/inffixed.h	/^    static const code distfix[32] = {$/;"	v
dmax	include/inflate.h	/^    unsigned dmax;              \/* zlib header max distance (INFLATE_STRICT) *\/$/;"	m	struct:inflate_state
doargs	lua/luac.c	/^static int doargs(int argc, char* argv[])$/;"	f	file:
docall	lua/lua.c	/^static int docall (lua_State *L, int narg, int clear) {$/;"	f	file:
dofile	lua/lua.c	/^static int dofile (lua_State *L, const char *name) {$/;"	f	file:
dojump	lua/lvm.c	354;"	d	file:
dolibrary	lua/lua.c	/^static int dolibrary (lua_State *L, const char *name) {$/;"	f	file:
done	include/zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s
dooptions	lua/loadlib.c	/^static void dooptions (lua_State *L, int n) {$/;"	f	file:
dostring	lua/lua.c	/^static int dostring (lua_State *L, const char *s, const char *name) {$/;"	f	file:
dotty	lua/lua.c	/^static void dotty (lua_State *L) {$/;"	f	file:
dummy	include/zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	m	struct:internal_state
dummy	zutil.c	/^struct internal_state      {int dummy;}; \/* for buggy compilers *\/$/;"	m	struct:internal_state	file:
dummynode	lua/ltable.c	73;"	d	file:
dummynode_	lua/ltable.c	/^static const Node dummynode_ = {$/;"	v	file:
dumping	lua/luac.c	/^static int dumping=1;			\/* dump bytecodes? *\/$/;"	v	file:
dwGraphicsIndex	printer.c	/^ulong dwGraphicsIndex;$/;"	v
dwGraphicsSize	printer.c	/^ulong dwGraphicsSize;$/;"	v
dwInterCharTimeout	include/comms.h	/^	ulong dwInterCharTimeout;$/;"	m	struct:__anon34
eConnectionType	include/comms.h	/^	E_CONNECTION_TYPE eConnectionType;$/;"	m	struct:__anon34
eHeader	include/comms.h	/^	E_HEADER eHeader;$/;"	m	struct:__anon34
eState	printer.c	/^E_PRINT_STATE eState = E_PRINT_STATE_DEFAULT;$/;"	v
ean128CharValue	Prtean128.c	/^const long ean128CharValue[108] =$/;"	v
emptybuffer	lua/lauxlib.c	/^static int emptybuffer (luaL_Buffer *B) {$/;"	f	file:
emv_tlv_replace	emvmisc.c	/^bool emv_tlv_replace( char *newtlvs,short* bufLen,unsigned short btag)$/;"	f
end_capture	lua/lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	file:
enterblock	lua/lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isbreakable) {$/;"	f	file:
enterlevel	lua/lparser.c	/^static void enterlevel (LexState *ls) {$/;"	f	file:
errfile	lua/lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	file:
errno	include/zutil.h	33;"	d
errno	zutil.c	/^    int errno = 0;$/;"	v
error	lua/lundump.c	/^static void error(LoadState* S, const char* why)$/;"	f	file:
error	lua/lundump.c	32;"	d	file:
error_expected	lua/lparser.c	/^static void error_expected (LexState *ls, int token) {$/;"	f	file:
errorfromcode	lua/loadlib.c	/^static const char *errorfromcode (NSObjectFileImageReturnCode ret) {$/;"	f	file:
errorlimit	lua/lparser.c	/^static void errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	file:
exp1	lua/lparser.c	/^static int exp1 (LexState *ls) {$/;"	f	file:
exp2reg	lua/lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
explist1	lua/lparser.c	/^static int explist1 (LexState *ls, expdesc *v) {$/;"	f	file:
expr	lua/lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	file:
exprstat	lua/lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	file:
extra	include/inflate.h	/^    unsigned extra;             \/* extra bits needed *\/$/;"	m	struct:inflate_state
extra	include/zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s
extra_len	include/zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s
extra_max	include/zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s
extraline	lua/lauxlib.c	/^  int extraline;$/;"	m	struct:LoadF	file:
f	lua/lauxlib.c	/^  FILE *f;$/;"	m	struct:LoadF	file:
fBlindDial	include/comms.h	/^	bool fBlindDial;$/;"	m	struct:__anon34
fFastConnect	include/comms.h	/^	bool fFastConnect;$/;"	m	struct:__anon34
fGraphicsStart	printer.c	/^bool fGraphicsStart = false;$/;"	v
fPreDial	include/comms.h	/^	bool fPreDial;$/;"	m	struct:__anon34
fSync	include/comms.h	/^	bool fSync;$/;"	m	struct:__anon34
f_Ccall	lua/lapi.c	/^static void f_Ccall (lua_State *L, void *ud) {$/;"	f	file:
f_call	lua/lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	file:
f_flush	lua/liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	file:
f_lines	lua/liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	file:
f_luaopen	lua/lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	file:
f_parser	lua/ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	file:
f_read	lua/liolib.c	/^static int f_read (lua_State *L) {$/;"	f	file:
f_seek	lua/liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	file:
f_setvbuf	lua/liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	file:
f_write	lua/liolib.c	/^static int f_write (lua_State *L) {$/;"	f	file:
false	include/auris.h	24;"	d
fatal	lua/luac.c	/^static void fatal(const char* message)$/;"	f	file:
fdopen	include/zutil.h	131;"	d
fdopen	include/zutil.h	151;"	d
fdopen	include/zutil.h	156;"	d
fdopen	include/zutil.h	162;"	d
field	lua/lparser.c	/^static void field (LexState *ls, expdesc *v) {$/;"	f	file:
fieldType	as2805.c	/^static const T_FIELD_FORMAT fieldType[] =$/;"	v	file:
fieldnum	include/as2805.h	/^    short fieldnum;$/;"	m	struct:__anon30
fieldsIndex	as2805.c	/^static uint fieldsIndex;$/;"	v	file:
fieldsStart	as2805.c	/^static uint fieldsStart;$/;"	v	file:
fileName	iriscfg.c	/^static const char * fileName = "s2.dat";$/;"	v	file:
fileName	security.c	/^static const char * fileName = "s1.dat";$/;"	v	file:
fileerror	lua/liolib.c	/^static void fileerror (lua_State *L, int arg, const char *filename) {$/;"	f	file:
fillCodeAorB	Prtean128.c	/^static char fillCodeAorB(uchar data)$/;"	f	file:
fillCodeC	Prtean128.c	/^static void fillCodeC(char * out, uchar * data, int size)$/;"	f	file:
findTag	emvmisc.c	/^short findTag(unsigned short tag, byte *value, short *length, const byte *buffer,short bufLen)$/;"	f
findfile	lua/loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	file:
findindex	lua/ltable.c	/^static int findindex (lua_State *L, Table *t, StkId key) {$/;"	f	file:
findlocal	lua/ldebug.c	/^static const char *findlocal (lua_State *L, CallInfo *ci, int n) {$/;"	f	file:
firstInit	input.c	/^	int firstInit = -1;$/;"	v
fixedtables	inflate.c	/^local void fixedtables(struct inflate_state FAR *state)$/;"	f
fixjump	lua/lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	file:
flag	include/iris.h	/^	uchar flag;		\/\/ bit 0: Read access by other groups allowed. (.r)$/;"	m	struct:__anon39
flag	include/iris_old.h	/^	uchar flag;		\/\/ bit 0: Read access by other groups allowed. (.r)$/;"	m	struct:__anon40
flags	include/inflate.h	/^    int flags;                  \/* gzip header method and flags (0 if zlib) *\/$/;"	m	struct:inflate_state
flib	lua/liolib.c	/^static const luaL_Reg flib[] = {$/;"	v	file:
flush_touch	input.c	/^int flush_touch(void)$/;"	f
fnames	lua/liolib.c	/^static const char *const fnames[] = {"input", "output"};$/;"	v	file:
forbody	lua/lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isnum) {$/;"	f	file:
foreach	lua/ltablib.c	/^static int foreach (lua_State *L) {$/;"	f	file:
foreachi	lua/ltablib.c	/^static int foreachi (lua_State *L) {$/;"	f	file:
forlist	lua/lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	file:
format	as2805.c	/^	uchar format;$/;"	m	struct:__anon1	file:
fornum	lua/lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	file:
forstat	lua/lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	file:
free_func	include/zconf.h	47;"	d
free_func	include/zlib.h	/^typedef void   (*free_func)  OF((voidpf opaque, voidpf address));$/;"	t
freeexp	lua/lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	file:
freeobj	lua/lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	file:
freereg	lua/lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	file:
freestack	lua/lstate.c	/^static void freestack (lua_State *L, lua_State *L1) {$/;"	f	file:
fromstate	lua/lstate.c	28;"	d	file:
func	lua/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:
func	lua/lapi.c	/^  lua_CFunction func;$/;"	m	struct:CCallS	file:
funcargs	lua/lparser.c	/^static void funcargs (LexState *ls, expdesc *f) {$/;"	f	file:
funcinfo	lua/ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	file:
funcname	lua/lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	file:
funcstat	lua/lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	file:
g	lua/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:
gEmv	emv.c	/^EMV_GLOBAL gEmv;$/;"	v
gSocketHandle	IrisComm.c	/^static int gSocketHandle = -1;$/;"	v	file:
g_LinkState	IrisComm.c	/^static int g_LinkState = LINK_DISCONNECTED;$/;"	v	file:
g_ceEvent_cb	IrisComm.c	/^static ceEvent_t	g_ceEvent_cb;$/;"	v	file:
g_currMediaInfo	IrisComm.c	/^static stNIInfo g_currMediaInfo;			\/\/ Current media stNIInfo$/;"	v	file:
g_gprsHandle	IrisComm.c	/^static int g_gprsHandle = -1;				\/\/ GPRS Handle$/;"	v	file:
g_iofile	lua/liolib.c	/^static int g_iofile (lua_State *L, int f, const char *mode) {$/;"	f	file:
g_read	lua/liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	file:
g_szMsgBuff1	iriscrypt.c	/^char g_szMsgBuff1[100];$/;"	v
g_write	lua/liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	file:
gateway	include/comms.h	/^	char gateway[50];$/;"	m	struct:__anon34
gctm	lua/loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	file:
generic_reader	lua/lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getEvent	irismain.c	/^static bool getEvent(T_EVTBITMAP setEvtBitmap, T_KEYBITMAP keepKeyBitmap, T_INP_ENTRY inpEntry, ulong timeout, bool ignoreTimeout, bool largeFont, bool * flush,T_EVTBITMAP *pevtBitmap,T_KEYBITMAP *pkeyBitmap,uchar *pkey, char** pevent)$/;"	f	file:
getF	lua/lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getLastKeyDesc	irismain.c	/^char * getLastKeyDesc(unsigned char key, T_KEYBITMAP * keyBitmap)$/;"	f
getNextObject	irisutil.c	/^static uint getNextObject(char * objects, uint * index, uint objectsLength)$/;"	f	file:
getNextRawTLVData	emvmisc.c	/^short getNextRawTLVData(unsigned short *tag, byte *data, const byte *buffer)$/;"	f
getNextTLVObject	emvmisc.c	/^short getNextTLVObject(unsigned short *tag, short *length, byte *value, const byte *buffer)$/;"	f
getS	lua/lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
get_compTM	lua/lvm.c	/^static const TValue *get_compTM (lua_State *L, Table *mt1, Table *mt2,$/;"	f	file:
get_crc_table	crc32.c	/^const unsigned long FAR * ZEXPORT get_crc_table()$/;"	f
get_crc_table	include/zconf.h	43;"	d
get_csv_str	irisutil.c	/^char* get_csv_str( char * line, char sep, int idx , char *result)$/;"	f
get_prompt	lua/lua.c	/^static const char *get_prompt (lua_State *L, int firstline) {$/;"	f	file:
getargs	lua/lua.c	/^static int getargs (lua_State *L, char **argv, int n) {$/;"	f	file:
getbinopr	lua/lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	file:
getboolfield	lua/loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	file:
getch	include/auris.h	56;"	d
getcurrenv	lua/lapi.c	/^static Table *getcurrenv (lua_State *L) {$/;"	f	file:
getfield	lua/loslib.c	/^static int getfield (lua_State *L, const char *key, int d) {$/;"	f	file:
getfreepos	lua/ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	file:
getfunc	lua/lbaselib.c	/^static void getfunc (lua_State *L, int opt) {$/;"	f	file:
getfuncname	lua/ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	file:
gethooktable	lua/ldblib.c	/^static void gethooktable (lua_State *L) {$/;"	f	file:
getiofile	lua/liolib.c	/^static FILE *getiofile (lua_State *L, int findex) {$/;"	f	file:
getjump	lua/lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	file:
getjumpcontrol	lua/lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	file:
getlocvar	lua/lparser.c	32;"	d	file:
getluaproto	lua/ldebug.c	/^static Proto *getluaproto (CallInfo *ci) {$/;"	f	file:
getn	lua/ltablib.c	/^static int getn (lua_State *L) {$/;"	f	file:
getobjname	lua/ldebug.c	/^static const char *getobjname (lua_State *L, CallInfo *ci, int stackpos,$/;"	f	file:
getsizes	lua/lauxlib.c	/^static void getsizes (lua_State *L) {$/;"	f	file:
getthread	lua/ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:
getunopr	lua/lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	file:
gfind_nodef	lua/lstrlib.c	/^static int gfind_nodef (lua_State *L) {$/;"	f	file:
globalL	lua/lua.c	/^static lua_State *globalL = NULL;$/;"	v	file:
gmatch	lua/lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	file:
gmatch_aux	lua/lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	file:
group	include/iris.h	/^	char * group;$/;"	m	struct:__anon39
group	include/iris_old.h	/^	char * group;$/;"	m	struct:__anon40
growCI	lua/ldo.c	/^static CallInfo *growCI (lua_State *L) {$/;"	f	file:
gzFile	include/zlib.h	/^typedef voidp gzFile;$/;"	t
gz_header	include/zlib.h	/^} gz_header;$/;"	t	typeref:struct:gz_header_s
gz_header_s	include/zlib.h	/^typedef struct gz_header_s {$/;"	s
gz_headerp	include/zlib.h	/^typedef gz_header FAR *gz_headerp;$/;"	t
handle	iriscfg.c	/^static FILE_HANDLE handle = (FILE_HANDLE) -1;$/;"	v	file:
handle	security.c	/^static int handle = -1;$/;"	v	file:
handle_luainit	lua/lua.c	/^static int handle_luainit (lua_State *L) {$/;"	f	file:
handle_script	lua/lua.c	/^static int handle_script (lua_State *L, char **argv, int n) {$/;"	f	file:
hashboolean	lua/ltable.c	53;"	d	file:
hashmod	lua/ltable.c	60;"	d	file:
hashnum	lua/ltable.c	/^static Node *hashnum (const Table *t, lua_Number n) {$/;"	f	file:
hashpointer	lua/ltable.c	63;"	d	file:
hashpow2	lua/ltable.c	50;"	d	file:
hashstr	lua/ltable.c	52;"	d	file:
hasjumps	lua/lcode.c	27;"	d	file:
hasmultret	lua/lparser.c	30;"	d	file:
have	include/inflate.h	/^    unsigned have;              \/* number of code lengths in lens[] *\/$/;"	m	struct:inflate_state
havedict	include/inflate.h	/^    int havedict;               \/* true if dictionary provided *\/$/;"	m	struct:inflate_state
hcrc	include/zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s
head	include/inflate.h	/^    gz_headerp head;            \/* where to save gzip header information *\/$/;"	m	struct:inflate_state
heap	printer.c	/^static uchar heap[20000];$/;"	v	file:
hex_to_ascii	ctlsmod.c	/^int hex_to_ascii(char c, char d){$/;"	f
hex_to_int	ctlsmod.c	/^int hex_to_int(char c){$/;"	f
highPAN	input.c	/^		char highPAN[20];$/;"	m	struct:__anon13	file:
hold	include/inflate.h	/^    unsigned long hold;         \/* input bit accumulator *\/$/;"	m	struct:inflate_state
hookf	lua/ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:
hotKey	input.c	/^	int hotKey = -1;$/;"	v
hotKeyApp	input.c	/^	char hotKeyApp[30];$/;"	v
hotKeyEvent	input.c	/^	int hotKeyEvent;$/;"	v
iAidDataTotal	emvAid.c	/^static int				iAidDataTotal;$/;"	v	file:
iDataSize	include/IrisComm.h	/^	short iDataSize;$/;"	m	struct:tagAPPCONFIG
iEstRecNoSave	emvAid.c	/^static int	iEstRecNoSave;$/;"	v	file:
iMvtRecNoSave	emvAid.c	/^static int	iMvtRecNoSave;$/;"	v	file:
iPort	include/IrisComm.h	/^	int iPort;$/;"	m	struct:tagAPPCONFIG
iSSL	include/IrisComm.h	/^	short iSSL;$/;"	m	struct:tagAPPCONFIG
ifstat	lua/lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	file:
inCEStartGPRSNetwork	IrisComm.c	/^static int inCEStartGPRSNetwork(char *sAPN)$/;"	f	file:
inCEStopNetwork	IrisComm.c	/^static int inCEStopNetwork(void)$/;"	f	file:
inCeEvent	IrisComm.c	/^static int inCeEvent(int st_mode)$/;"	f	file:
inCeTcpConnect	IrisComm.c	/^int inCeTcpConnect(T_COMMS * psComms)$/;"	f
inCeTcpDisConnect	IrisComm.c	/^int inCeTcpDisConnect(T_COMMS * psComms)$/;"	f
inCeTcpDisConnectIP	IrisComm.c	/^int inCeTcpDisConnectIP(T_COMMS * psComms)$/;"	f
inCheckGPRSStatus	IrisComm.c	/^int inCheckGPRSStatus(int x,int y)$/;"	f
inGetApplVer	irismain.c	/^int inGetApplVer(char* ver)$/;"	f
inReceiveTCPCommunication	IrisComm.c	/^int inReceiveTCPCommunication(T_COMMS * psComms)$/;"	f
inSendTCPCommunication	IrisComm.c	/^int inSendTCPCommunication(T_COMMS * psComms)$/;"	f
in_func	include/zconf.h	48;"	d
in_func	include/zlib.h	/^typedef unsigned (*in_func) OF((void FAR *, unsigned char FAR * FAR *));$/;"	t
inc_ci	lua/ldo.c	259;"	d	file:
inclinenumber	lua/llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	file:
incomplete	lua/lua.c	/^static int incomplete (lua_State *L, int status) {$/;"	f	file:
index2adr	lua/lapi.c	/^static TValue *index2adr (lua_State *L, int idx) {$/;"	f	file:
indexupvalue	lua/lparser.c	/^static int indexupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	file:
inflate	include/zconf.h	20;"	d
inflate	inflate.c	/^int ZEXPORT inflate(z_streamp strm, int flush)$/;"	f
inflateBack	include/zconf.h	35;"	d
inflateBackEnd	include/zconf.h	36;"	d
inflateBackInit	include/zlib.h	1340;"	d
inflateCopy	include/zconf.h	33;"	d
inflateCopy	inflate.c	/^int ZEXPORT inflateCopy(z_streamp dest, z_streamp source)$/;"	f
inflateEnd	include/zconf.h	21;"	d
inflateEnd	inflate.c	/^int ZEXPORT inflateEnd(z_streamp strm)$/;"	f
inflateGetHeader	inflate.c	/^int ZEXPORT inflateGetHeader(z_streamp strm, gz_headerp head)$/;"	f
inflateInit	include/zlib.h	1333;"	d
inflateInit2	include/zlib.h	1338;"	d
inflateInit2_	include/zconf.h	29;"	d
inflateInit2_	inflate.c	/^int ZEXPORT inflateInit2_(z_streamp strm, int windowBits, const char *version, int stream_size)$/;"	f
inflateInit_	include/zconf.h	19;"	d
inflateInit_	inflate.c	/^int ZEXPORT inflateInit_(z_streamp strm, const char *version, int stream_size)$/;"	f
inflatePrime	inflate.c	/^int ZEXPORT inflatePrime(z_streamp strm, int bits, int value)$/;"	f
inflateReset	include/zconf.h	34;"	d
inflateReset	inflate.c	/^int ZEXPORT inflateReset(z_streamp strm)$/;"	f
inflateSetDictionary	include/zconf.h	30;"	d
inflateSetDictionary	inflate.c	/^int ZEXPORT inflateSetDictionary(z_streamp strm, const Bytef *dictionary, uInt dictLength)$/;"	f
inflateSync	include/zconf.h	31;"	d
inflateSync	inflate.c	/^int ZEXPORT inflateSync(z_streamp strm)$/;"	f
inflateSyncPoint	include/zconf.h	32;"	d
inflateSyncPoint	inflate.c	/^int ZEXPORT inflateSyncPoint(z_streamp strm)$/;"	f
inflate_copyright	inftrees.c	/^const char inflate_copyright[] =$/;"	v
inflate_fast	inffast.c	/^void inflate_fast(z_streamp strm, unsigned start \/* inflate()'s starting value for strm->avail_out *\/)$/;"	f
inflate_mode	include/inflate.h	/^} inflate_mode;$/;"	t	typeref:enum:__anon36
inflate_state	include/inflate.h	/^struct inflate_state {$/;"	s
inflate_table	inftrees.c	/^int inflate_table(codetype type, unsigned short FAR *lens, unsigned codes, code FAR * FAR *table, unsigned FAR *bits, unsigned short FAR *work)$/;"	f
info_tailcall	lua/ldebug.c	/^static void info_tailcall (lua_Debug *ar) {$/;"	f	file:
init	lua/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon18	file:
init_exp	lua/lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	file:
int16_t	include/auris.h	/^typedef short int16_t;$/;"	t
int64_t	include/auris.h	/^typedef long long int64_t;$/;"	t
int8_t	include/auris.h	/^typedef signed char int8_t;$/;"	t
internal_state	include/zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	s
internal_state	zutil.c	/^struct internal_state      {int dummy;}; \/* for buggy compilers *\/$/;"	s	file:
intf	include/zconf.h	/^typedef int   FAR intf;$/;"	t
intf	include/zconf.h	55;"	d
invertjump	lua/lcode.c	/^static void invertjump (FuncState *fs, expdesc *e) {$/;"	f	file:
io_close	lua/liolib.c	/^static int io_close (lua_State *L) {$/;"	f	file:
io_fclose	lua/liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	file:
io_flush	lua/liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	file:
io_gc	lua/liolib.c	/^static int io_gc (lua_State *L) {$/;"	f	file:
io_input	lua/liolib.c	/^static int io_input (lua_State *L) {$/;"	f	file:
io_lines	lua/liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	file:
io_noclose	lua/liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	file:
io_open	lua/liolib.c	/^static int io_open (lua_State *L) {$/;"	f	file:
io_output	lua/liolib.c	/^static int io_output (lua_State *L) {$/;"	f	file:
io_pclose	lua/liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	file:
io_popen	lua/liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	file:
io_read	lua/liolib.c	/^static int io_read (lua_State *L) {$/;"	f	file:
io_readline	lua/liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	file:
io_tmpfile	lua/liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	file:
io_tostring	lua/liolib.c	/^static int io_tostring (lua_State *L) {$/;"	f	file:
io_type	lua/liolib.c	/^static int io_type (lua_State *L) {$/;"	f	file:
io_write	lua/liolib.c	/^static int io_write (lua_State *L) {$/;"	f	file:
iolib	lua/liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	file:
ipAddress	include/comms.h	/^	char ipAddress[50];$/;"	m	struct:__anon34
ipairsaux	lua/lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	file:
iphandle	comms.c	/^int iphandle = -1;$/;"	v
irisCfgInit	iriscfg.c	/^static void irisCfgInit(void)$/;"	f	file:
irisGroup	iris.c	/^char irisGroup[] = "iRIS";$/;"	v
irisGroup	iris_old.c	/^char irisGroup[] = "iRIS";$/;"	v
iris_big_heap	malloc.c	/^T_BIG_HEAP iris_big_heap[C_MAX_BIG_BLOCKS];$/;"	v
iris_big_heap_used	malloc.c	/^int iris_big_heap_used[C_MAX_BIG_BLOCKS];$/;"	v
iris_ktk3	security.c	/^uchar iris_ktk3[17] = "\\x00\\xFA\\x14\\x4D\\x82\\xB1\\x5A\\x47\\xE1\\xB7\\xB1\\x53\\xA0\\xFF\\x55\\x6C";$/;"	v
iris_med_heap	malloc.c	/^T_MED_HEAP iris_med_heap[C_MAX_MED_BLOCKS];$/;"	v
iris_med_heap_head	malloc.c	/^T_MED_HEAP * iris_med_heap_head;$/;"	v
iris_realloc	realloc.c	/^static void * iris_realloc(void * ptr, unsigned int size, void * start_range, void * end_range, unsigned int block_size)$/;"	f	file:
iris_tiny_heap	malloc.c	/^T_TINY_HEAP iris_tiny_heap[C_MAX_TINY_BLOCKS];$/;"	v
iris_tiny_heap_head	malloc.c	/^T_TINY_HEAP * iris_tiny_heap_head;$/;"	v
isAlpha	include/Input.h	/^	bool isAlpha;$/;"	m	struct:__anon23
isbreakable	lua/lparser.c	/^  lu_byte isbreakable;  \/* true if `block' is a loop *\/$/;"	m	struct:BlockCnt	file:
iscleared	lua/lgc.c	/^static int iscleared (const TValue *o, int iskey) {$/;"	f	file:
isfinalized	lua/lgc.c	43;"	d	file:
isinstack	lua/ldebug.c	/^static int isinstack (CallInfo *ci, const TValue *o) {$/;"	f	file:
isnumeral	lua/lcode.c	/^static int isnumeral(expdesc *e) {$/;"	f	file:
itoa	include/auris.h	57;"	d
jumponcond	lua/lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	file:
kname	lua/ldebug.c	/^static const char *kname (Proto *p, int c) {$/;"	f	file:
l	lua/lstate.c	/^  lua_State l;$/;"	m	struct:LG	file:
l_alloc	lua/lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:
l_message	lua/lua.c	/^static void l_message (const char *pname, const char *msg) {$/;"	f	file:
l_strcmp	lua/lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	file:
laction	lua/lua.c	/^static void laction (int i) {$/;"	f	file:
lapi_c	lua/lapi.c	13;"	d	file:
last	include/inflate.h	/^    int last;                   \/* true if processing last block *\/$/;"	m	struct:inflate_state
lastFaultyFileName	irisutil.c	/^char lastFaultyFileName[100];$/;"	v
lastFaultyGroup	irisutil.c	/^char lastFaultyGroup[50];$/;"	v
lastlistfield	lua/lparser.c	/^static void lastlistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
lauxlib_c	lua/lauxlib.c	20;"	d	file:
lbaselib_c	lua/lbaselib.c	14;"	d	file:
lcode_c	lua/lcode.c	10;"	d	file:
ldblib_c	lua/ldblib.c	12;"	d	file:
ldebug_c	lua/ldebug.c	13;"	d	file:
ldo_c	lua/ldo.c	12;"	d	file:
ldump_c	lua/ldump.c	9;"	d	file:
leaveblock	lua/lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	file:
leavelevel	lua/lparser.c	282;"	d	file:
left	lua/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon17	file:
leftOver	as2805.c	/^static bool leftOver = false;$/;"	v	file:
leftOverValue	as2805.c	/^static int leftOverValue = 0;$/;"	v	file:
len	lua/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon18	file:
lenbits	include/inflate.h	/^    unsigned lenbits;           \/* index bits for lencode *\/$/;"	m	struct:inflate_state
lencode	include/inflate.h	/^    code const FAR *lencode;    \/* starting table for length\/literal codes *\/$/;"	m	struct:inflate_state
lenfix	include/inffixed.h	/^    static const code lenfix[512] = {$/;"	v
length	include/Input.h	/^    uchar length;$/;"	m	struct:__anon22
length	include/inflate.h	/^    unsigned length;            \/* literal or length of data to copy *\/$/;"	m	struct:inflate_state
lens	include/inflate.h	/^    unsigned short lens[320];   \/* temporary storage for code lengths *\/$/;"	m	struct:inflate_state
lessequal	lua/lvm.c	/^static int lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f	file:
level	lua/lstrlib.c	/^  int level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:
lfunc_c	lua/lfunc.c	10;"	d	file:
lgc_c	lua/lgc.c	9;"	d	file:
libsize	lua/lauxlib.c	/^static int libsize (const luaL_Reg *l) {$/;"	f	file:
linit_c	lua/linit.c	8;"	d	file:
liolib_c	lua/liolib.c	13;"	d	file:
listfield	lua/lparser.c	/^static void listfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
listing	lua/luac.c	/^static int listing=0;			\/* list bytecodes? *\/$/;"	v	file:
ll_funcs	lua/loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	file:
ll_load	lua/loadlib.c	/^static void *ll_load (lua_State *L, const char *path) {$/;"	f	file:
ll_loadfunc	lua/loadlib.c	/^static int ll_loadfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	file:
ll_loadlib	lua/loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	file:
ll_module	lua/loadlib.c	/^static int ll_module (lua_State *L) {$/;"	f	file:
ll_register	lua/loadlib.c	/^static void **ll_register (lua_State *L, const char *path) {$/;"	f	file:
ll_require	lua/loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	file:
ll_seeall	lua/loadlib.c	/^static int ll_seeall (lua_State *L) {$/;"	f	file:
ll_sym	lua/loadlib.c	/^static lua_CFunction ll_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	file:
ll_unloadlib	lua/loadlib.c	/^static void ll_unloadlib (void *lib) {$/;"	f	file:
llex	lua/llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
llex_c	lua/llex.c	12;"	d	file:
lmathlib_c	lua/lmathlib.c	11;"	d	file:
lmem_c	lua/lmem.c	10;"	d	file:
lmemfind	lua/lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	file:
load_aux	lua/lbaselib.c	/^static int load_aux (lua_State *L, int status) {$/;"	f	file:
loader_C	lua/loadlib.c	/^static int loader_C (lua_State *L) {$/;"	f	file:
loader_Croot	lua/loadlib.c	/^static int loader_Croot (lua_State *L) {$/;"	f	file:
loader_Lua	lua/loadlib.c	/^static int loader_Lua (lua_State *L) {$/;"	f	file:
loader_preload	lua/loadlib.c	/^static int loader_preload (lua_State *L) {$/;"	f	file:
loaderror	lua/loadlib.c	/^static void loaderror (lua_State *L, const char *filename) {$/;"	f	file:
loaders	lua/loadlib.c	/^static const lua_CFunction loaders[] =$/;"	v	file:
loadlib_c	lua/loadlib.c	16;"	d	file:
loadline	lua/lua.c	/^static int loadline (lua_State *L) {$/;"	f	file:
lobject_c	lua/lobject.c	13;"	d	file:
local	crc32.c	31;"	d	file:
local	include/zutil.h	43;"	d
localfunc	lua/lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	file:
localstat	lua/lparser.c	/^static void localstat (LexState *ls) {$/;"	f	file:
logicalName	input.c	/^		char logicalName[17];$/;"	m	struct:__anon13	file:
lopcodes_c	lua/lopcodes.c	7;"	d	file:
loslib_c	lua/loslib.c	14;"	d	file:
lowPAN	input.c	/^		char lowPAN[20];$/;"	m	struct:__anon13	file:
lparser_c	lua/lparser.c	10;"	d	file:
lstate_c	lua/lstate.c	10;"	d	file:
lstop	lua/lua.c	/^static void lstop (lua_State *L, lua_Debug *ar) {$/;"	f	file:
lstring_c	lua/lstring.c	10;"	d	file:
lstrlib_c	lua/lstrlib.c	14;"	d	file:
ltable_c	lua/ltable.c	24;"	d	file:
ltablib_c	lua/ltablib.c	10;"	d	file:
ltm_c	lua/ltm.c	10;"	d	file:
luaA_pushobject	lua/lapi.c	/^void luaA_pushobject (lua_State *L, const TValue *o) {$/;"	f
luaB_assert	lua/lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	file:
luaB_auxwrap	lua/lbaselib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:
luaB_cocreate	lua/lbaselib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:
luaB_collectgarbage	lua/lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	file:
luaB_coresume	lua/lbaselib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:
luaB_corunning	lua/lbaselib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	file:
luaB_costatus	lua/lbaselib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	file:
luaB_cowrap	lua/lbaselib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:
luaB_dofile	lua/lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	file:
luaB_error	lua/lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	file:
luaB_gcinfo	lua/lbaselib.c	/^static int luaB_gcinfo (lua_State *L) {$/;"	f	file:
luaB_getfenv	lua/lbaselib.c	/^static int luaB_getfenv (lua_State *L) {$/;"	f	file:
luaB_getmetatable	lua/lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	file:
luaB_ipairs	lua/lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	file:
luaB_load	lua/lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	file:
luaB_loadfile	lua/lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	file:
luaB_loadstring	lua/lbaselib.c	/^static int luaB_loadstring (lua_State *L) {$/;"	f	file:
luaB_newproxy	lua/lbaselib.c	/^static int luaB_newproxy (lua_State *L) {$/;"	f	file:
luaB_next	lua/lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	file:
luaB_pairs	lua/lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	file:
luaB_pcall	lua/lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	file:
luaB_print	lua/lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	file:
luaB_rawequal	lua/lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	file:
luaB_rawget	lua/lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	file:
luaB_rawset	lua/lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	file:
luaB_select	lua/lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	file:
luaB_setfenv	lua/lbaselib.c	/^static int luaB_setfenv (lua_State *L) {$/;"	f	file:
luaB_setmetatable	lua/lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	file:
luaB_tonumber	lua/lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	file:
luaB_tostring	lua/lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	file:
luaB_type	lua/lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	file:
luaB_unpack	lua/lbaselib.c	/^static int luaB_unpack (lua_State *L) {$/;"	f	file:
luaB_xpcall	lua/lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	file:
luaB_yield	lua/lbaselib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	file:
luaC_barrierback	lua/lgc.c	/^void luaC_barrierback (lua_State *L, Table *t) {$/;"	f
luaC_barrierf	lua/lgc.c	/^void luaC_barrierf (lua_State *L, GCObject *o, GCObject *v) {$/;"	f
luaC_callGCTM	lua/lgc.c	/^void luaC_callGCTM (lua_State *L) {$/;"	f
luaC_freeall	lua/lgc.c	/^void luaC_freeall (lua_State *L) {$/;"	f
luaC_fullgc	lua/lgc.c	/^void luaC_fullgc (lua_State *L) {$/;"	f
luaC_link	lua/lgc.c	/^void luaC_link (lua_State *L, GCObject *o, lu_byte tt) {$/;"	f
luaC_linkupval	lua/lgc.c	/^void luaC_linkupval (lua_State *L, UpVal *uv) {$/;"	f
luaC_separateudata	lua/lgc.c	/^size_t luaC_separateudata (lua_State *L, int all) {$/;"	f
luaC_step	lua/lgc.c	/^void luaC_step (lua_State *L) {$/;"	f
luaD_call	lua/ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults) {$/;"	f
luaD_callhook	lua/ldo.c	/^void luaD_callhook (lua_State *L, int event, int line) {$/;"	f
luaD_growstack	lua/ldo.c	/^void luaD_growstack (lua_State *L, int n) {$/;"	f
luaD_pcall	lua/ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f
luaD_poscall	lua/ldo.c	/^int luaD_poscall (lua_State *L, StkId firstResult) {$/;"	f
luaD_precall	lua/ldo.c	/^int luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f
luaD_protectedparser	lua/ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name) {$/;"	f
luaD_rawrunprotected	lua/ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f
luaD_reallocCI	lua/ldo.c	/^void luaD_reallocCI (lua_State *L, int newsize) {$/;"	f
luaD_reallocstack	lua/ldo.c	/^void luaD_reallocstack (lua_State *L, int newsize) {$/;"	f
luaD_seterrorobj	lua/ldo.c	/^void luaD_seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f
luaD_throw	lua/ldo.c	/^void luaD_throw (lua_State *L, int errcode) {$/;"	f
luaE_freethread	lua/lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f
luaE_newthread	lua/lstate.c	/^lua_State *luaE_newthread (lua_State *L) {$/;"	f
luaF_close	lua/lfunc.c	/^void luaF_close (lua_State *L, StkId level) {$/;"	f
luaF_findupval	lua/lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f
luaF_freeclosure	lua/lfunc.c	/^void luaF_freeclosure (lua_State *L, Closure *c) {$/;"	f
luaF_freeproto	lua/lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f
luaF_freeupval	lua/lfunc.c	/^void luaF_freeupval (lua_State *L, UpVal *uv) {$/;"	f
luaF_getlocalname	lua/lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f
luaF_newCclosure	lua/lfunc.c	/^Closure *luaF_newCclosure (lua_State *L, int nelems, Table *e) {$/;"	f
luaF_newLclosure	lua/lfunc.c	/^Closure *luaF_newLclosure (lua_State *L, int nelems, Table *e) {$/;"	f
luaF_newproto	lua/lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f
luaF_newupval	lua/lfunc.c	/^UpVal *luaF_newupval (lua_State *L) {$/;"	f
luaG_aritherror	lua/ldebug.c	/^void luaG_aritherror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_checkcode	lua/ldebug.c	/^int luaG_checkcode (const Proto *pt) {$/;"	f
luaG_checkopenop	lua/ldebug.c	/^int luaG_checkopenop (Instruction i) {$/;"	f
luaG_concaterror	lua/ldebug.c	/^void luaG_concaterror (lua_State *L, StkId p1, StkId p2) {$/;"	f
luaG_errormsg	lua/ldebug.c	/^void luaG_errormsg (lua_State *L) {$/;"	f
luaG_ordererror	lua/ldebug.c	/^int luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_runerror	lua/ldebug.c	/^void luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f
luaG_typeerror	lua/ldebug.c	/^void luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f
luaH_free	lua/ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f
luaH_get	lua/ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f
luaH_getn	lua/ltable.c	/^int luaH_getn (Table *t) {$/;"	f
luaH_getnum	lua/ltable.c	/^const TValue *luaH_getnum (Table *t, int key) {$/;"	f
luaH_getstr	lua/ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f
luaH_isdummy	lua/ltable.c	/^int luaH_isdummy (Node *n) { return n == dummynode; }$/;"	f
luaH_mainposition	lua/ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f
luaH_new	lua/ltable.c	/^Table *luaH_new (lua_State *L, int narray, int nhash) {$/;"	f
luaH_next	lua/ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f
luaH_resizearray	lua/ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, int nasize) {$/;"	f
luaH_set	lua/ltable.c	/^TValue *luaH_set (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_setnum	lua/ltable.c	/^TValue *luaH_setnum (lua_State *L, Table *t, int key) {$/;"	f
luaH_setstr	lua/ltable.c	/^TValue *luaH_setstr (lua_State *L, Table *t, TString *key) {$/;"	f
luaI_openlib	lua/lauxlib.c	/^LUALIB_API void luaI_openlib (lua_State *L, const char *libname,$/;"	f
luaK_checkstack	lua/lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f
luaK_code	lua/lcode.c	/^static int luaK_code (FuncState *fs, Instruction i, int line) {$/;"	f	file:
luaK_codeABC	lua/lcode.c	/^int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {$/;"	f
luaK_codeABx	lua/lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f
luaK_concat	lua/lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f
luaK_dischargevars	lua/lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2RK	lua/lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyreg	lua/lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2nextreg	lua/lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2val	lua/lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f
luaK_fixline	lua/lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f
luaK_getlabel	lua/lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f
luaK_goiffalse	lua/lcode.c	/^static void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f	file:
luaK_goiftrue	lua/lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f
luaK_indexed	lua/lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f
luaK_infix	lua/lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f
luaK_jump	lua/lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f
luaK_nil	lua/lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f
luaK_numberK	lua/lcode.c	/^int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f
luaK_patchlist	lua/lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f
luaK_patchtohere	lua/lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f
luaK_posfix	lua/lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr op, expdesc *e1, expdesc *e2) {$/;"	f
luaK_prefix	lua/lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e) {$/;"	f
luaK_reserveregs	lua/lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f
luaK_ret	lua/lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f
luaK_self	lua/lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f
luaK_setlist	lua/lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f
luaK_setoneret	lua/lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f
luaK_setreturns	lua/lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f
luaK_storevar	lua/lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f
luaK_stringK	lua/lcode.c	/^int luaK_stringK (FuncState *fs, TString *s) {$/;"	f
luaL_addlstring	lua/lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f
luaL_addstring	lua/lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f
luaL_addvalue	lua/lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f
luaL_argerror	lua/lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int narg, const char *extramsg) {$/;"	f
luaL_buffinit	lua/lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f
luaL_callmeta	lua/lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f
luaL_checkany	lua/lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int narg) {$/;"	f
luaL_checkinteger	lua/lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int narg) {$/;"	f
luaL_checklstring	lua/lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {$/;"	f
luaL_checknumber	lua/lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int narg) {$/;"	f
luaL_checkoption	lua/lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int narg, const char *def,$/;"	f
luaL_checkstack	lua/lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *mes) {$/;"	f
luaL_checktype	lua/lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int narg, int t) {$/;"	f
luaL_checkudata	lua/lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_error	lua/lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f
luaL_findtable	lua/lauxlib.c	/^LUALIB_API const char *luaL_findtable (lua_State *L, int idx,$/;"	f
luaL_getmetafield	lua/lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f
luaL_getn	lua/lauxlib.c	/^LUALIB_API int luaL_getn (lua_State *L, int t) {$/;"	f
luaL_gsub	lua/lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s, const char *p,$/;"	f
luaL_loadbuffer	lua/lauxlib.c	/^LUALIB_API int luaL_loadbuffer (lua_State *L, const char *buff, size_t size,$/;"	f
luaL_loadfile	lua/lauxlib.c	/^LUALIB_API int luaL_loadfile (lua_State *L, const char *filename) {$/;"	f
luaL_loadstring	lua/lauxlib.c	/^LUALIB_API int (luaL_loadstring) (lua_State *L, const char *s) {$/;"	f
luaL_newmetatable	lua/lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_newstate	lua/lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f
luaL_openlibs	lua/linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f
luaL_optinteger	lua/lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int narg,$/;"	f
luaL_optlstring	lua/lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int narg,$/;"	f
luaL_optnumber	lua/lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int narg, lua_Number def) {$/;"	f
luaL_prepbuffer	lua/lauxlib.c	/^LUALIB_API char *luaL_prepbuffer (luaL_Buffer *B) {$/;"	f
luaL_pushresult	lua/lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f
luaL_ref	lua/lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f
luaL_register	lua/lauxlib.c	/^LUALIB_API void (luaL_register) (lua_State *L, const char *libname,$/;"	f
luaL_setn	lua/lauxlib.c	/^LUALIB_API void luaL_setn (lua_State *L, int t, int n) {$/;"	f
luaL_typerror	lua/lauxlib.c	/^LUALIB_API int luaL_typerror (lua_State *L, int narg, const char *tname) {$/;"	f
luaL_unref	lua/lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f
luaL_where	lua/lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f
luaM_growaux_	lua/lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,$/;"	f
luaM_realloc_	lua/lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f
luaM_toobig	lua/lmem.c	/^void *luaM_toobig (lua_State *L) {$/;"	f
luaO_chunkid	lua/lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t bufflen) {$/;"	f
luaO_fb2int	lua/lobject.c	/^int luaO_fb2int (int x) {$/;"	f
luaO_int2fb	lua/lobject.c	/^int luaO_int2fb (unsigned int x) {$/;"	f
luaO_log2	lua/lobject.c	/^int luaO_log2 (unsigned int x) {$/;"	f
luaO_nilobject_	lua/lobject.c	/^const TValue luaO_nilobject_ = {{NULL}, LUA_TNIL};$/;"	v
luaO_pushfstring	lua/lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
luaO_pushvfstring	lua/lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f
luaO_rawequalObj	lua/lobject.c	/^int luaO_rawequalObj (const TValue *t1, const TValue *t2) {$/;"	f
luaO_str2d	lua/lobject.c	/^int luaO_str2d (const char *s, lua_Number *result) {$/;"	f
luaP_opmodes	lua/lopcodes.c	/^const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v
luaP_opnames	lua/lopcodes.c	/^const char *const luaP_opnames[NUM_OPCODES+1] = {$/;"	v
luaS_newlstr	lua/lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f
luaS_newudata	lua/lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s, Table *e) {$/;"	f
luaS_resize	lua/lstring.c	/^void luaS_resize (lua_State *L, int newsize) {$/;"	f
luaT_gettm	lua/ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f
luaT_gettmbyobj	lua/ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f
luaT_init	lua/ltm.c	/^void luaT_init (lua_State *L) {$/;"	f
luaT_typenames	lua/ltm.c	/^const char *const luaT_typenames[] = {$/;"	v
luaU_dump	lua/ldump.c	/^int luaU_dump (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)$/;"	f
luaU_header	lua/lundump.c	/^void luaU_header (char* h)$/;"	f
luaU_undump	lua/lundump.c	/^Proto* luaU_undump (lua_State* L, ZIO* Z, Mbuffer* buff, const char* name)$/;"	f
luaV_concat	lua/lvm.c	/^void luaV_concat (lua_State *L, int total, int last) {$/;"	f
luaV_equalval	lua/lvm.c	/^int luaV_equalval (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f
luaV_execute	lua/lvm.c	/^void luaV_execute (lua_State *L, int nexeccalls) {$/;"	f
luaV_gettable	lua/lvm.c	/^void luaV_gettable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_lessthan	lua/lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_settable	lua/lvm.c	/^void luaV_settable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_tonumber	lua/lvm.c	/^const TValue *luaV_tonumber (const TValue *obj, TValue *n) {$/;"	f
luaV_tostring	lua/lvm.c	/^int luaV_tostring (lua_State *L, StkId obj) {$/;"	f
luaX_init	lua/llex.c	/^void luaX_init (lua_State *L) {$/;"	f
luaX_lexerror	lua/llex.c	/^void luaX_lexerror (LexState *ls, const char *msg, int token) {$/;"	f
luaX_lookahead	lua/llex.c	/^void luaX_lookahead (LexState *ls) {$/;"	f
luaX_newstring	lua/llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f
luaX_next	lua/llex.c	/^void luaX_next (LexState *ls) {$/;"	f
luaX_setinput	lua/llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source) {$/;"	f
luaX_syntaxerror	lua/llex.c	/^void luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f
luaX_token2str	lua/llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f
luaX_tokens	lua/llex.c	/^const char *const luaX_tokens [] = {$/;"	v
luaY_checklimit	lua/lparser.c	34;"	d	file:
luaY_parser	lua/lparser.c	/^Proto *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff, const char *name) {$/;"	f
luaZ_fill	lua/lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f
luaZ_init	lua/lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f
luaZ_lookahead	lua/lzio.c	/^int luaZ_lookahead (ZIO *z) {$/;"	f
luaZ_openspace	lua/lzio.c	/^char *luaZ_openspace (lua_State *L, Mbuffer *buff, size_t n) {$/;"	f
luaZ_read	lua/lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f
lua_atpanic	lua/lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f
lua_c	lua/lterminallib.c	7;"	d	file:
lua_c	lua/lua.c	12;"	d	file:
lua_call	lua/lapi.c	/^LUA_API void lua_call (lua_State *L, int nargs, int nresults) {$/;"	f
lua_checkstack	lua/lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int size) {$/;"	f
lua_close	lua/lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f
lua_concat	lua/lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f
lua_cpcall	lua/lapi.c	/^LUA_API int lua_cpcall (lua_State *L, lua_CFunction func, void *ud) {$/;"	f
lua_createtable	lua/lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f
lua_dump	lua/lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data) {$/;"	f
lua_equal	lua/lapi.c	/^LUA_API int lua_equal (lua_State *L, int index1, int index2) {$/;"	f
lua_error	lua/lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f
lua_gc	lua/lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, int data) {$/;"	f
lua_getallocf	lua/lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f
lua_getfenv	lua/lapi.c	/^LUA_API void lua_getfenv (lua_State *L, int idx) {$/;"	f
lua_getfield	lua/lapi.c	/^LUA_API void lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_gethook	lua/ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f
lua_gethookcount	lua/ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f
lua_gethookmask	lua/ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f
lua_getinfo	lua/ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f
lua_getlocal	lua/ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_getmetatable	lua/lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f
lua_getstack	lua/ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f
lua_gettable	lua/lapi.c	/^LUA_API void lua_gettable (lua_State *L, int idx) {$/;"	f
lua_gettop	lua/lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f
lua_getupvalue	lua/lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_ident	lua/lapi.c	/^const char lua_ident[] =$/;"	v
lua_insert	lua/lapi.c	/^LUA_API void lua_insert (lua_State *L, int idx) {$/;"	f
lua_iscfunction	lua/lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f
lua_isnumber	lua/lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f
lua_isstring	lua/lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f
lua_isuserdata	lua/lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f
lua_lessthan	lua/lapi.c	/^LUA_API int lua_lessthan (lua_State *L, int index1, int index2) {$/;"	f
lua_load	lua/lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f
lua_longjmp	lua/ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_main	lua/lua.c	/^int lua_main ( char *file) {$/;"	f
lua_main1	lua/lua.c	/^int lua_main1 (int argc, char **argv) {$/;"	f
lua_newstate	lua/lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newthread	lua/lapi.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f
lua_newuserdata	lua/lapi.c	/^LUA_API void *lua_newuserdata (lua_State *L, size_t size) {$/;"	f
lua_next	lua/lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f
lua_objlen	lua/lapi.c	/^LUA_API size_t lua_objlen (lua_State *L, int idx) {$/;"	f
lua_pcall	lua/lapi.c	/^LUA_API int lua_pcall (lua_State *L, int nargs, int nresults, int errfunc) {$/;"	f
lua_pushboolean	lua/lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f
lua_pushcclosure	lua/lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f
lua_pushfstring	lua/lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
lua_pushinteger	lua/lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f
lua_pushlightuserdata	lua/lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f
lua_pushlstring	lua/lapi.c	/^LUA_API void lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f
lua_pushnil	lua/lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f
lua_pushnumber	lua/lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f
lua_pushstring	lua/lapi.c	/^LUA_API void lua_pushstring (lua_State *L, const char *s) {$/;"	f
lua_pushthread	lua/lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f
lua_pushvalue	lua/lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f
lua_pushvfstring	lua/lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f
lua_rawequal	lua/lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f
lua_rawget	lua/lapi.c	/^LUA_API void lua_rawget (lua_State *L, int idx) {$/;"	f
lua_rawgeti	lua/lapi.c	/^LUA_API void lua_rawgeti (lua_State *L, int idx, int n) {$/;"	f
lua_rawset	lua/lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f
lua_rawseti	lua/lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, int n) {$/;"	f
lua_remove	lua/lapi.c	/^LUA_API void lua_remove (lua_State *L, int idx) {$/;"	f
lua_replace	lua/lapi.c	/^LUA_API void lua_replace (lua_State *L, int idx) {$/;"	f
lua_resume	lua/ldo.c	/^LUA_API int lua_resume (lua_State *L, int nargs) {$/;"	f
lua_setallocf	lua/lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f
lua_setfenv	lua/lapi.c	/^LUA_API int lua_setfenv (lua_State *L, int idx) {$/;"	f
lua_setfield	lua/lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_sethook	lua/ldebug.c	/^LUA_API int lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f
lua_setlevel	lua/lapi.c	/^LUA_API void lua_setlevel (lua_State *from, lua_State *to) {$/;"	f
lua_setlocal	lua/ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_setmetatable	lua/lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f
lua_settable	lua/lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f
lua_settop	lua/lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f
lua_setupvalue	lua/lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_status	lua/lapi.c	/^LUA_API int  lua_status (lua_State *L) {$/;"	f
lua_toboolean	lua/lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f
lua_tocfunction	lua/lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f
lua_tointeger	lua/lapi.c	/^LUA_API lua_Integer lua_tointeger (lua_State *L, int idx) {$/;"	f
lua_tolstring	lua/lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
lua_tonumber	lua/lapi.c	/^LUA_API lua_Number lua_tonumber (lua_State *L, int idx) {$/;"	f
lua_topointer	lua/lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f
lua_tothread	lua/lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f
lua_touserdata	lua/lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f
lua_type	lua/lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f
lua_typename	lua/lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f
lua_xmove	lua/lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f
lua_yield	lua/ldo.c	/^LUA_API int lua_yield (lua_State *L, int nresults) {$/;"	f
luac_c	lua/luac.c	12;"	d	file:
luac_c	lua/print.c	10;"	d	file:
lualibs	lua/linit.c	/^static const luaL_Reg lualibs[] = {$/;"	v	file:
luaopen_base	lua/lbaselib.c	/^LUALIB_API int luaopen_base (lua_State *L) {$/;"	f
luaopen_debug	lua/ldblib.c	/^LUALIB_API int luaopen_debug (lua_State *L) {$/;"	f
luaopen_io	lua/liolib.c	/^LUALIB_API int luaopen_io (lua_State *L) {$/;"	f
luaopen_math	lua/lmathlib.c	/^LUALIB_API int luaopen_math (lua_State *L) {$/;"	f
luaopen_os	lua/loslib.c	/^LUALIB_API int luaopen_os (lua_State *L) {$/;"	f
luaopen_package	lua/loadlib.c	/^LUALIB_API int luaopen_package (lua_State *L) {$/;"	f
luaopen_string	lua/lstrlib.c	/^LUALIB_API int luaopen_string (lua_State *L) {$/;"	f
luaopen_table	lua/ltablib.c	/^LUALIB_API int luaopen_table (lua_State *L) {$/;"	f
luaopen_terminal	lua/lterminallib.c	/^LUALIB_API int luaopen_terminal (lua_State *L) {$/;"	f
lundump_c	lua/lundump.c	9;"	d	file:
lvm_c	lua/lvm.c	12;"	d	file:
lzio_c	lua/lzio.c	10;"	d	file:
macDiv2	emvAid.c	92;"	d	file:
main	irismain.c	/^main(int argc, char * argv[])$/;"	f
main	lua/luac.c	/^int main(int argc, char* argv[])$/;"	f
mainposition	lua/ltable.c	/^static Node *mainposition (const Table *t, const TValue *key) {$/;"	f	file:
make_crc_table	crc32.c	/^local void make_crc_table()$/;"	f
makefixed	inflate.c	/^void makefixed()$/;"	f
makemask	lua/ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:
makewhite	lua/lgc.c	34;"	d	file:
markfinalized	lua/lgc.c	44;"	d	file:
markmt	lua/lgc.c	/^static void markmt (global_State *g) {$/;"	f	file:
markobject	lua/lgc.c	55;"	d	file:
markroot	lua/lgc.c	/^static void markroot (lua_State *L) {$/;"	f	file:
marktmu	lua/lgc.c	/^static void marktmu (global_State *g) {$/;"	f	file:
markupval	lua/lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	file:
markvalue	lua/lgc.c	52;"	d	file:
maskmarks	lua/lgc.c	32;"	d	file:
match	lua/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	file:
match_capture	lua/lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	file:
match_class	lua/lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	file:
matchbalance	lua/lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	file:
matchbracketclass	lua/lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	file:
math_abs	lua/lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	file:
math_acos	lua/lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	file:
math_asin	lua/lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	file:
math_atan	lua/lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	file:
math_atan2	lua/lmathlib.c	/^static int math_atan2 (lua_State *L) {$/;"	f	file:
math_ceil	lua/lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	file:
math_cos	lua/lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	file:
math_cosh	lua/lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	file:
math_deg	lua/lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	file:
math_exp	lua/lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	file:
math_floor	lua/lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	file:
math_fmod	lua/lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	file:
math_frexp	lua/lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	file:
math_ldexp	lua/lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	file:
math_log	lua/lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	file:
math_log10	lua/lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	file:
math_max	lua/lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	file:
math_min	lua/lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	file:
math_modf	lua/lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	file:
math_pow	lua/lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	file:
math_rad	lua/lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	file:
math_random	lua/lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	file:
math_randomseed	lua/lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	file:
math_sin	lua/lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	file:
math_sinh	lua/lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	file:
math_sqrt	lua/lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	file:
math_tan	lua/lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	file:
math_tanh	lua/lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	file:
mathlib	lua/lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	file:
maxRedirectPAN	input.c	/^	int maxRedirectPAN = 0;$/;"	v
max_big_counter	malloc.c	/^int max_big_counter = 0;$/;"	v
max_expand	lua/lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	file:
max_med_counter	malloc.c	/^int max_med_counter = 0;$/;"	v
max_tiny_counter	malloc.c	/^int max_tiny_counter = 0;$/;"	v
maxn	lua/ltablib.c	/^static int maxn (lua_State *L) {$/;"	f	file:
mcrHandle	input.c	/^int mcrHandle = 0;$/;"	v
med_counter	malloc.c	/^int med_counter = 0;$/;"	v
minLength	include/Input.h	/^	ulong minLength;$/;"	m	struct:__anon22
min_expand	lua/lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	file:
mkfuncname	lua/loadlib.c	/^static const char *mkfuncname (lua_State *L, const char *modname) {$/;"	f	file:
mode	include/inflate.h	/^    inflate_mode mode;          \/* current inflate mode *\/$/;"	m	struct:inflate_state
model	comms.c	/^char model[13]="";$/;"	v
modinit	lua/loadlib.c	/^static void modinit (lua_State *L, const char *modname) {$/;"	f	file:
monthDays	time.c	/^static const int monthDays[2][12] = {{31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365},$/;"	v	file:
msg	include/zlib.h	/^    char     *msg;      \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s
myTime	time.c	/^static struct tm myTime;$/;"	v	typeref:struct:tm	file:
my_calloc	alloc.c	/^void * my_calloc(unsigned int size)$/;"	f
my_calloc	calloc.c	/^void * my_calloc(unsigned int size)$/;"	f
my_free	malloc.c	/^void my_free(void * block)$/;"	f
my_gmtime	time.c	/^struct tm * my_gmtime(time_t_ris * someTime) \/\/KK changed$/;"	f
my_malloc	alloc.c	/^void * my_malloc(unsigned int size)$/;"	f
my_malloc	malloc.c	/^void * my_malloc(unsigned int size)$/;"	f
my_mktime	time.c	/^time_t_ris my_mktime(struct tm * someTime) \/\/kk changed$/;"	f
my_realloc	alloc.c	/^void * my_realloc(void * ptr, unsigned int size)$/;"	f
my_realloc	realloc.c	/^void * my_realloc(void * ptr, unsigned int size)$/;"	f
my_time	time.c	/^time_t_ris my_time(time_t_ris * now)	\/\/KK changed$/;"	f
na	lua/lparser.c	/^  int na;  \/* total number of array elements *\/$/;"	m	struct:ConsControl	file:
nactvar	lua/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the breakable structure *\/$/;"	m	struct:BlockCnt	file:
name	include/iris.h	/^	char * name;$/;"	m	struct:__anon39
name	include/iris_old.h	/^	char * name;$/;"	m	struct:__anon40
name	include/zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s
name	lua/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:
name	lua/lundump.c	/^ const char* name;$/;"	m	struct:__anon19	file:
name_max	include/zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s
ncode	include/inflate.h	/^    unsigned ncode;             \/* number of code length code lengths *\/$/;"	m	struct:inflate_state
ndist	include/inflate.h	/^    unsigned ndist;             \/* number of distance code lengths *\/$/;"	m	struct:inflate_state
need_value	lua/lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	file:
new_localvar	lua/lparser.c	/^static void new_localvar (LexState *ls, TString *name, int n) {$/;"	f	file:
new_localvarliteral	lua/lparser.c	156;"	d	file:
new_ptr	zutil.c	/^    voidpf new_ptr;$/;"	m	struct:ptr_table_s	file:
newfenv	lua/liolib.c	/^static void newfenv (lua_State *L, lua_CFunction cls) {$/;"	f	file:
newfile	lua/liolib.c	/^static FILE **newfile (lua_State *L) {$/;"	f	file:
newkey	lua/ltable.c	/^static TValue *newkey (lua_State *L, Table *t, const TValue *key) {$/;"	f	file:
newlstr	lua/lstring.c	/^static TString *newlstr (lua_State *L, const char *str, size_t l,$/;"	f	file:
next	include/inflate.h	/^    code FAR *next;             \/* next available space in codes[] *\/$/;"	m	struct:inflate_state
next	lua/llex.c	28;"	d	file:
nextObject	irismain.c	/^char * nextObject = NULL;$/;"	v
next_in	include/zlib.h	/^    Bytef    *next_in;  \/* next input byte *\/$/;"	m	struct:z_stream_s
next_out	include/zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s
next_ptr	zutil.c	/^local int next_ptr = 0;$/;"	v
nh	lua/lparser.c	/^  int nh;  \/* total number of `record' elements *\/$/;"	m	struct:ConsControl	file:
nilK	lua/lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	file:
nlen	include/inflate.h	/^    unsigned nlen;              \/* number of length code lengths *\/$/;"	m	struct:inflate_state
notail	lua/lua.c	255;"	d	file:
nresults	lua/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:
null	ctlsmod.c	43;"	d	file:
numDigits	Prtean128.c	/^static int numDigits(uchar * data)$/;"	f	file:
numberEntry	input.c	/^bool numberEntry = false;$/;"	v
numints	lua/ltable.c	69;"	d	file:
numusearray	lua/ltable.c	/^static int numusearray (const Table *t, int *nums) {$/;"	f	file:
numusehash	lua/ltable.c	/^static int numusehash (const Table *t, int *nums, int *pnasize) {$/;"	f	file:
offlinepin	include/emv.h	/^	bool offlinepin;$/;"	m	struct:__anon35
offset	include/inflate.h	/^    unsigned offset;            \/* distance back to copy string from *\/$/;"	m	struct:inflate_state
onlinepin	include/emv.h	/^	bool onlinepin;$/;"	m	struct:__anon35
op	include/inftrees.h	/^    unsigned char op;           \/* operation, extra bits, table bits *\/$/;"	m	struct:__anon37
opaque	include/zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s
open_func	lua/lparser.c	/^static void open_func (LexState *ls, FuncState *fs) {$/;"	f	file:
opmode	lua/lopcodes.c	59;"	d	file:
org_ptr	zutil.c	/^    voidpf org_ptr;$/;"	m	struct:ptr_table_s	file:
os	include/zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s
os_clock	lua/loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	file:
os_date	lua/loslib.c	/^static int os_date (lua_State *L) {$/;"	f	file:
os_difftime	lua/loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	file:
os_execute	lua/loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	file:
os_exit	lua/loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	file:
os_getenv	lua/loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	file:
os_pushresult	lua/loslib.c	/^static int os_pushresult (lua_State *L, int i, const char *filename) {$/;"	f	file:
os_remove	lua/loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	file:
os_rename	lua/loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	file:
os_setlocale	lua/loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	file:
os_time	lua/loslib.c	/^static int os_time (lua_State *L) {$/;"	f	file:
os_tmpname	lua/loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	file:
out_func	include/zconf.h	49;"	d
out_func	include/zlib.h	/^typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));$/;"	t
output	lua/luac.c	/^static const char* output=Output;	\/* actual output file name *\/$/;"	v	file:
ownIpAddress	include/comms.h	/^	char ownIpAddress[50];$/;"	m	struct:__anon34
panic	lua/lauxlib.c	/^static int panic (lua_State *L) {$/;"	f	file:
parlist	lua/lparser.c	/^static void parlist (LexState *ls) {$/;"	f	file:
partNo	comms.c	/^char partNo[13];$/;"	v
patchlistaux	lua/lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	file:
patchtestreg	lua/lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	file:
pbData	include/comms.h	/^	uchar * pbData;$/;"	m	struct:__anon34
pdns	include/comms.h	/^	char pdns[50];$/;"	m	struct:__anon34
pin	include/emv.h	/^	unsigned char pin[10] ;$/;"	m	struct:__anon35
pinbypass_disable	include/emv.h	/^	bool pinbypass_disable;$/;"	m	struct:__anon35
pk_funcs	lua/loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	file:
pmain	lua/lua.c	/^static int pmain (lua_State *L) {$/;"	f	file:
pmain	lua/luac.c	/^static int pmain(lua_State* L)$/;"	f	file:
posrelat	lua/lstrlib.c	/^static ptrdiff_t posrelat (ptrdiff_t pos, size_t len) {$/;"	f	file:
pppAuthType	include/IrisComm.h	/^	int pppAuthType;$/;"	m	struct:tagAPPCONFIG
precheck	lua/ldebug.c	/^static int precheck (const Proto *pt) {$/;"	f	file:
prefixexp	lua/lparser.c	/^static void prefixexp (LexState *ls, expdesc *v) {$/;"	f	file:
preinit_state	lua/lstate.c	/^static void preinit_state (lua_State *L, global_State *g) {$/;"	f	file:
pressed	include/Input.h	/^	int pressed ;$/;"	m	struct:__anon24
prev	lua/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:
previous	lua/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:
previous	lua/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:
primaryexp	lua/lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	file:
print_usage	lua/lua.c	/^static void print_usage (void) {$/;"	f	file:
print_version	lua/lua.c	/^static void print_version (void) {$/;"	f	file:
printf	include/auris.h	71;"	d
priority	lua/lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:struct:__anon17	file:
processDisplayObject	irismain.c	/^static void processDisplayObject()$/;"	f	file:
processObjectLoop	irismain.c	/^static void processObjectLoop()$/;"	f	file:
progname	lua/lua.c	/^static const char *progname = LUA_PROGNAME;$/;"	v	file:
progname	lua/luac.c	/^static const char* progname=PROGNAME;	\/* actual program name *\/$/;"	v	file:
propagateall	lua/lgc.c	/^static size_t propagateall (global_State *g) {$/;"	f	file:
propagatemark	lua/lgc.c	/^static l_mem propagatemark (global_State *g) {$/;"	f	file:
prtHandle	printer.c	/^int prtHandle = -1;$/;"	v
ptCLNPDest	include/comms.h	/^	char * ptCLNPDest;$/;"	m	struct:__anon34
ptCLNPSource	include/comms.h	/^	char * ptCLNPSource;$/;"	m	struct:__anon34
ptDialPrefix	include/comms.h	/^	char ptDialPrefix[50];$/;"	m	struct:__anon34
ptPhoneNumber	include/comms.h	/^	char ptPhoneNumber[50];$/;"	m	struct:__anon34
ptTPDUHeader	include/comms.h	/^	char * ptTPDUHeader;$/;"	m	struct:__anon34
ptr_table	zutil.c	/^} ptr_table;$/;"	t	typeref:struct:ptr_table_s	file:
ptr_table_s	zutil.c	/^typedef struct ptr_table_s {$/;"	s	file:
ptrdiff_t	include/zutil.h	/^       typedef int ptrdiff_t;$/;"	t
push_captures	lua/lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	file:
push_onecapture	lua/lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
pushclosure	lua/lparser.c	/^static void pushclosure (LexState *ls, FuncState *func, expdesc *v) {$/;"	f	file:
pusherror	lua/loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	file:
pushline	lua/lua.c	/^static int pushline (lua_State *L, int firstline) {$/;"	f	file:
pushnexttemplate	lua/loadlib.c	/^static const char *pushnexttemplate (lua_State *L, const char *path) {$/;"	f	file:
pushresult	lua/liolib.c	/^static int pushresult (lua_State *L, int i, const char *filename) {$/;"	f	file:
pushstr	lua/lobject.c	/^static void pushstr (lua_State *L, const char *str) {$/;"	f	file:
readCtlsRecord	ctlsmod.c	/^int readCtlsRecord(int fHandle , char *buf, int AllowNewLine)$/;"	f
read_chars	lua/liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	file:
read_line	lua/liolib.c	/^static int read_line (lua_State *L, FILE *f) {$/;"	f	file:
read_long_string	lua/llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, int sep) {$/;"	f	file:
read_number	lua/liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	file:
read_numeral	lua/llex.c	/^static void read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
read_string	lua/llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	file:
readable	lua/loadlib.c	/^static int readable (const char *filename) {$/;"	f	file:
reallymarkobject	lua/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	file:
recfield	lua/lparser.c	/^static void recfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
redirectPAN	input.c	/^	typeRedirectPAN * redirectPAN = NULL;$/;"	v
registerlocalvar	lua/lparser.c	/^static int registerlocalvar (LexState *ls, TString *varname) {$/;"	f	file:
rehash	lua/ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	file:
remarkupvals	lua/lgc.c	/^static void remarkupvals (global_State *g) {$/;"	f	file:
remoteTms	iris.c	/^bool remoteTms()$/;"	f
remoteTms	iris_old.c	/^void remoteTms()$/;"	f
removeentry	lua/lgc.c	/^static void removeentry (Node *n) {$/;"	f	file:
removevalues	lua/lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	file:
removevars	lua/lparser.c	/^static void removevars (LexState *ls, int tolevel) {$/;"	f	file:
repeatstat	lua/lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	file:
replace	iris_io.c	/^	char * replace;$/;"	m	struct:__anon14	file:
report	lua/lua.c	/^static int report (lua_State *L, int status) {$/;"	f	file:
reserved	include/zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s
resetstack	lua/ldo.c	/^static void resetstack (lua_State *L, int status) {$/;"	f	file:
resize	lua/ltable.c	/^static void resize (lua_State *L, Table *t, int nasize, int nhsize) {$/;"	f	file:
restore_stack_limit	lua/ldo.c	/^static void restore_stack_limit (lua_State *L) {$/;"	f	file:
resume	lua/ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	file:
resume_error	lua/ldo.c	/^static int resume_error (lua_State *L, const char *msg) {$/;"	f	file:
retVal	irispstn.c	/^static int retVal = ERR_COMMS_NONE;$/;"	v	file:
retVal	irisser.c	/^static int retVal = ERR_COMMS_NONE;$/;"	v	file:
retVal	iristcp.c	/^static int retVal;$/;"	v	file:
retstat	lua/lparser.c	/^static void retstat (LexState *ls) {$/;"	f	file:
right	lua/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon17	file:
row	include/Input.h	/^    uchar row;$/;"	m	struct:__anon22
runargs	lua/lua.c	/^static int runargs (lua_State *L, char **argv, int n) {$/;"	f	file:
runtime_check	lua/lvm.c	341;"	d	file:
s	lua/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:
sCodeSets	Prtean13.c	/^const uchar sCodeSets[10][6] = {$/;"	v
sEvtCode	include/Input.h	/^	char sEvtCode[30];$/;"	m	struct:__anon23
sFontEAN13Table	Prtean13.c	/^static const uchar sFontEAN13Table[] =$/;"	v	file:
sKey	input.c	/^} sKey[] = $/;"	v	typeref:struct:__anon12
sPrntBuff	ctlsmod.c	/^char sPrntBuff[200];$/;"	v
save	lua/llex.c	/^static void save (LexState *ls, int c) {$/;"	f	file:
save_and_next	lua/llex.c	48;"	d	file:
scanformat	lua/lstrlib.c	/^static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {$/;"	f	file:
sdns	include/comms.h	/^	char sdns[50];$/;"	m	struct:__anon34
search	iris_io.c	/^	char * search;$/;"	m	struct:__anon14	file:
searchvar	lua/lparser.c	/^static int searchvar (FuncState *fs, TString *n) {$/;"	f	file:
sentinel	lua/loadlib.c	448;"	d	file:
sentinel_	lua/loadlib.c	/^static const int sentinel_ = 0;$/;"	v	file:
ser_line0	input.c	/^int ser_line0;$/;"	v
ser_line1	input.c	/^int ser_line1;$/;"	v
set2	lua/ltablib.c	/^static void set2 (lua_State *L, int i, int j) {$/;"	f	file:
set_nextObj	irismain.c	/^int set_nextObj( const char* nextObj)$/;"	f
setarrayvector	lua/ltable.c	/^static void setarrayvector (lua_State *L, Table *t, int size) {$/;"	f	file:
setboolfield	lua/loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setfenv	lua/loadlib.c	/^static void setfenv (lua_State *L) {$/;"	f	file:
setfield	lua/loslib.c	/^static void setfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setn	lua/ltablib.c	/^static int setn (lua_State *L) {$/;"	f	file:
setnodevector	lua/ltable.c	/^static void setnodevector (lua_State *L, Table *t, int size) {$/;"	f	file:
setpath	lua/loadlib.c	/^static void setpath (lua_State *L, const char *fieldname, const char *envname,$/;"	f	file:
setprogdir	lua/loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	file:
setprogdir	lua/loadlib.c	42;"	d	file:
setprogdir	lua/loadlib.c	95;"	d	file:
settabsi	lua/ldblib.c	/^static void settabsi (lua_State *L, const char *i, int v) {$/;"	f	file:
settabss	lua/ldblib.c	/^static void settabss (lua_State *L, const char *i, const char *v) {$/;"	f	file:
setthreshold	lua/lgc.c	59;"	d	file:
sha1_context	include/sha1.h	/^sha1_context;$/;"	t	typeref:struct:__anon43
sha1_finish	sha1.c	/^void sha1_finish( sha1_context *ctx, uint8 digest[20] )$/;"	f
sha1_padding	sha1.c	/^static uint8 sha1_padding[64] =$/;"	v	file:
sha1_process	sha1.c	/^void sha1_process( sha1_context *ctx, uint8 data[64] )$/;"	f
sha1_starts	sha1.c	/^void sha1_starts( sha1_context *ctx )$/;"	f
sha1_update	sha1.c	/^void sha1_update( sha1_context *ctx, uint8 *input, uint32 length )$/;"	f
sign	include/emv.h	/^	bool sign ;$/;"	m	struct:__anon35
simpleexp	lua/lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	file:
singlematch	lua/lstrlib.c	/^static int singlematch (int c, const char *p, const char *ep) {$/;"	f	file:
singlestep	lua/lgc.c	/^static l_mem singlestep (lua_State *L) {$/;"	f	file:
singlevar	lua/lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	file:
singlevaraux	lua/lparser.c	/^static int singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	file:
sint	include/LibCtls.h	/^typedef short sint;$/;"	t
size	as2805.c	/^	int size;$/;"	m	struct:__anon1	file:
size	lua/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:
skip_sep	lua/llex.c	/^static int skip_sep (LexState *ls) {$/;"	f	file:
sort	lua/ltablib.c	/^static int sort (lua_State *L) {$/;"	f	file:
sort_comp	lua/ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	file:
special	iris_io.c	/^} special[5] = {	{"**** COMMA ****", ","}, {"**** WIGGLY ****", "{"}, {"**** YLGGIW ****", "}"}, {"**** BRACKET ****", "["}, {"**** TEKCARB ****", "]"}	};$/;"	v	typeref:struct:__anon14	file:
src_end	lua/lstrlib.c	/^  const char *src_end;  \/* end (`\\0') of source string *\/$/;"	m	struct:MatchState	file:
src_init	lua/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:
stack_init	lua/lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	file:
start_capture	lua/lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	file:
state	include/sha1.h	/^    uint32 state[5];$/;"	m	struct:__anon43
state	include/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR
state_size	lua/lstate.c	27;"	d	file:
statement	lua/lparser.c	/^static int statement (LexState *ls) {$/;"	f	file:
statnames	lua/lbaselib.c	/^static const char *const statnames[] =$/;"	v	file:
status	lua/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:
status	lua/ldump.c	/^ int status;$/;"	m	struct:__anon16	file:
status	lua/lua.c	/^  int status;$/;"	m	struct:Smain	file:
str_byte	lua/lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	file:
str_char	lua/lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	file:
str_checkname	lua/lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	file:
str_dump	lua/lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	file:
str_find	lua/lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	file:
str_find_aux	lua/lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	file:
str_format	lua/lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	file:
str_gsub	lua/lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	file:
str_len	lua/lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	file:
str_lower	lua/lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	file:
str_match	lua/lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	file:
str_rep	lua/lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	file:
str_reverse	lua/lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	file:
str_sub	lua/lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	file:
str_upper	lua/lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	file:
stringmark	lua/lgc.c	40;"	d	file:
strip	lua/ldump.c	/^ int strip;$/;"	m	struct:__anon16	file:
stripping	lua/luac.c	/^static int stripping=0;			\/* strip debug information? *\/$/;"	v	file:
strlib	lua/lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	file:
subcommand	ctlsmod.c	/^	char subcommand;$/;"	m	struct:__anon4	file:
subexpr	lua/lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, unsigned int limit) {$/;"	f	file:
sweeplist	lua/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, lu_mem count) {$/;"	f	file:
sweepwholelist	lua/lgc.c	404;"	d	file:
symbexec	lua/ldebug.c	/^static Instruction symbexec (const Proto *pt, int lastpc, int reg) {$/;"	f	file:
syncsearch	inflate.c	/^local unsigned syncsearch(unsigned FAR *have, unsigned char FAR *buf, unsigned len)$/;"	f
syslib	lua/loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	file:
systicks	time.c	/^unsigned long systicks()$/;"	f
szAPN	include/IrisComm.h	/^	char szAPN [MAX_APN_LENGTH+1];$/;"	m	struct:tagAPPCONFIG
szCAFile	include/IrisComm.h	/^	char szCAFile [MAX_FILE_LENGTH+1];$/;"	m	struct:tagAPPCONFIG
szHostIP	include/IrisComm.h	/^	char szHostIP [MAX_IP_LENGTH+1];	$/;"	m	struct:tagAPPCONFIG
szPassword	include/IrisComm.h	/^	char szPassword [MAX_PASSWORD_LENGTH+1];$/;"	m	struct:tagAPPCONFIG
szPhone	include/IrisComm.h	/^	char szPhone [MAX_PHONE_LENGTH+1];$/;"	m	struct:tagAPPCONFIG
szUser	include/IrisComm.h	/^	char szUser [MAX_USERNAME_LENGTH+1];$/;"	m	struct:tagAPPCONFIG
t	lua/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:
tDialType	include/comms.h	/^	char tDialType;$/;"	m	struct:__anon34
tEvtBitMap	include/Input.h	/^    T_EVTBITMAP tEvtBitMap;$/;"	m	struct:__anon20
tKeyBitmap	include/Input.h	/^    T_KEYBITMAP tKeyBitmap;$/;"	m	struct:__anon20
tKeyBitmap	input.c	/^	T_KEYBITMAP	tKeyBitmap;$/;"	m	struct:__anon12	file:
tParityBit	include/comms.h	/^	char tParityBit;$/;"	m	struct:__anon34
tab_funcs	lua/ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	file:
table	zutil.c	/^local ptr_table table[MAX_PTR];$/;"	v
tag	ctlsmod.c	/^	int tag;$/;"	m	struct:__anon6	file:
tagAPPCONFIG	include/IrisComm.h	/^typedef struct tagAPPCONFIG {$/;"	s
tagCEEvent	include/IrisComm.h	/^typedef struct tagCEEvent {$/;"	s
tag_error	lua/lauxlib.c	/^static void tag_error (lua_State *L, int narg, int tag) {$/;"	f	file:
tagdata	ctlsmod.c	/^	char tagdata[100];$/;"	m	struct:__anon6	file:
taglen	ctlsmod.c	/^	int taglen;$/;"	m	struct:__anon6	file:
tconcat	lua/ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	file:
techfallback	include/emv.h	/^	bool techfallback; \/\/ fallback to swipe$/;"	m	struct:__anon35
termDesicion	include/emv.h	/^	unsigned short termDesicion;$/;"	m	struct:__anon35
terminal_As2805Break	lua/lterminallib.c	/^static int terminal_As2805Break (lua_State *L) {$/;"	f	file:
terminal_As2805BreakCustom	lua/lterminallib.c	/^static int terminal_As2805BreakCustom (lua_State *L) {$/;"	f	file:
terminal_As2805Make	lua/lterminallib.c	/^static int terminal_As2805Make (lua_State *L) {$/;"	f	file:
terminal_As2805MakeCustom	lua/lterminallib.c	/^static int terminal_As2805MakeCustom (lua_State *L) {$/;"	f	file:
terminal_As2805SetBcdLength	lua/lterminallib.c	/^static int terminal_As2805SetBcdLength (lua_State *L) {$/;"	f	file:
terminal_CtlsCall	lua/lterminallib.c	/^static int terminal_CtlsCall (lua_State *L) {$/;"	f	file:
terminal_DebugDisp	lua/lterminallib.c	/^static int terminal_DebugDisp (lua_State *L) {$/;"	f	file:
terminal_Dec	lua/lterminallib.c	/^static int terminal_Dec (lua_State *L) {$/;"	f	file:
terminal_Derive3Des	lua/lterminallib.c	/^static int terminal_Derive3Des (lua_State *L) {$/;"	f	file:
terminal_DesRandom	lua/lterminallib.c	/^static int terminal_DesRandom (lua_State *L) {$/;"	f	file:
terminal_DesStore	lua/lterminallib.c	/^static int terminal_DesStore (lua_State *L) {$/;"	f	file:
terminal_DisplayArray	lua/lterminallib.c	/^static int terminal_DisplayArray (lua_State *L) {$/;"	f	file:
terminal_DisplayObject	lua/lterminallib.c	/^static int terminal_DisplayObject (lua_State *L) {$/;"	f	file:
terminal_EmvCardholderVerify	lua/lterminallib.c	/^static int terminal_EmvCardholderVerify (lua_State *L) {$/;"	f	file:
terminal_EmvDataAuth	lua/lterminallib.c	/^static int terminal_EmvDataAuth (lua_State *L) {$/;"	f	file:
terminal_EmvGetTacIac	lua/lterminallib.c	/^static int terminal_EmvGetTacIac (lua_State *L) {$/;"	f	file:
terminal_EmvGetTagData	lua/lterminallib.c	/^static int terminal_EmvGetTagData (lua_State *L) {$/;"	f	file:
terminal_EmvGlobal	lua/lterminallib.c	/^static int terminal_EmvGlobal (lua_State *L) {$/;"	f	file:
terminal_EmvIsCardPresent	lua/lterminallib.c	/^static int terminal_EmvIsCardPresent (lua_State *L) {$/;"	f	file:
terminal_EmvPackTLV	lua/lterminallib.c	/^static int terminal_EmvPackTLV (lua_State *L) {$/;"	f	file:
terminal_EmvPowerOff	lua/lterminallib.c	/^static int terminal_EmvPowerOff (lua_State *L) {$/;"	f	file:
terminal_EmvPowerOn	lua/lterminallib.c	/^static int terminal_EmvPowerOn (lua_State *L) {$/;"	f	file:
terminal_EmvProcRestrict	lua/lterminallib.c	/^static int terminal_EmvProcRestrict (lua_State *L) {$/;"	f	file:
terminal_EmvProcess1stAC	lua/lterminallib.c	/^static int terminal_EmvProcess1stAC (lua_State *L) {$/;"	f	file:
terminal_EmvReadAppData	lua/lterminallib.c	/^static int terminal_EmvReadAppData (lua_State *L) {$/;"	f	file:
terminal_EmvResetGlobal	lua/lterminallib.c	/^static int terminal_EmvResetGlobal (lua_State *L) {$/;"	f	file:
terminal_EmvSelectApplication	lua/lterminallib.c	/^static int terminal_EmvSelectApplication (lua_State *L) {$/;"	f	file:
terminal_EmvSetAccount	lua/lterminallib.c	/^static int terminal_EmvSetAccount (lua_State *L) {$/;"	f	file:
terminal_EmvSetAmt	lua/lterminallib.c	/^static int terminal_EmvSetAmt (lua_State *L) {$/;"	f	file:
terminal_EmvSetTagData	lua/lterminallib.c	/^static int terminal_EmvSetTagData (lua_State *L) {$/;"	f	file:
terminal_EmvTLVReplace	lua/lterminallib.c	/^static int terminal_EmvTLVReplace(lua_State *L) {$/;"	f	file:
terminal_EmvTransInit	lua/lterminallib.c	/^static int terminal_EmvTransInit (lua_State *L) {$/;"	f	file:
terminal_EmvUseHostData	lua/lterminallib.c	/^static int terminal_EmvUseHostData (lua_State *L) {$/;"	f	file:
terminal_Enc	lua/lterminallib.c	/^static int terminal_Enc (lua_State *L) {$/;"	f	file:
terminal_ErrorBeep	lua/lterminallib.c	/^static int terminal_ErrorBeep (lua_State *L) {$/;"	f	file:
terminal_FileCopy	lua/lterminallib.c	/^static int terminal_FileCopy (lua_State *L) {$/;"	f	file:
terminal_FileExist	lua/lterminallib.c	/^static int terminal_FileExist (lua_State *L) {$/;"	f	file:
terminal_FileRemove	lua/lterminallib.c	/^static int terminal_FileRemove (lua_State *L) {$/;"	f	file:
terminal_FileRename	lua/lterminallib.c	/^static int terminal_FileRename (lua_State *L) {$/;"	f	file:
terminal_GetApplVer	lua/lterminallib.c	/^static int terminal_GetApplVer (lua_State *L) {$/;"	f	file:
terminal_GetArrayRange	lua/lterminallib.c	/^static int terminal_GetArrayRange (lua_State *L) {$/;"	f	file:
terminal_GetJsonObject	lua/lterminallib.c	/^static int terminal_GetJsonObject (lua_State *L) {$/;"	f	file:
terminal_GetJsonValue	lua/lterminallib.c	/^static int terminal_GetJsonValue (lua_State *L) {$/;"	f	file:
terminal_GetJsonValueInt	lua/lterminallib.c	/^static int terminal_GetJsonValueInt (lua_State *L) {$/;"	f	file:
terminal_GetKey	lua/lterminallib.c	/^static int terminal_GetKey (lua_State *L) {$/;"	f	file:
terminal_GetTrack	lua/lterminallib.c	/^static int terminal_GetTrack (lua_State *L) {$/;"	f	file:
terminal_HexToString	lua/lterminallib.c	/^static int terminal_HexToString(lua_State *L) {$/;"	f	file:
terminal_InitCommEng	lua/lterminallib.c	/^static int terminal_InitCommEng (lua_State *L) {$/;"	f	file:
terminal_IpConnect	lua/lterminallib.c	/^static int terminal_IpConnect (lua_State *L) {$/;"	f	file:
terminal_IvClr	lua/lterminallib.c	/^static int terminal_IvClr (lua_State *L) {$/;"	f	file:
terminal_Kvc	lua/lterminallib.c	/^static int terminal_Kvc (lua_State *L) {$/;"	f	file:
terminal_LocateCpat	lua/lterminallib.c	/^static int terminal_LocateCpat (lua_State *L) {$/;"	f	file:
terminal_Luhn	lua/lterminallib.c	/^static int terminal_Luhn (lua_State *L) {$/;"	f	file:
terminal_Mac	lua/lterminallib.c	/^static int terminal_Mac (lua_State *L) {$/;"	f	file:
terminal_Model	lua/lterminallib.c	/^static int terminal_Model (lua_State *L) {$/;"	f	file:
terminal_NewObject	lua/lterminallib.c	/^static int terminal_NewObject (lua_State *L) {$/;"	f	file:
terminal_Now	lua/lterminallib.c	/^static int terminal_Now (lua_State *L) {$/;"	f	file:
terminal_Owf	lua/lterminallib.c	/^static int terminal_Owf (lua_State *L) {$/;"	f	file:
terminal_PinBlock	lua/lterminallib.c	/^static int terminal_PinBlock (lua_State *L) {$/;"	f	file:
terminal_PinBlockCba	lua/lterminallib.c	/^static int terminal_PinBlockCba (lua_State *L) {$/;"	f	file:
terminal_PowerSaveMode	lua/lterminallib.c	/^static int terminal_PowerSaveMode (lua_State *L) {$/;"	f	file:
terminal_Ppid	lua/lterminallib.c	/^static int terminal_Ppid (lua_State *L) {$/;"	f	file:
terminal_PpidUpdate	lua/lterminallib.c	/^static int terminal_PpidUpdate (lua_State *L) {$/;"	f	file:
terminal_Print	lua/lterminallib.c	/^static int terminal_Print (lua_State *L) {$/;"	f	file:
terminal_Print_Debug	lua/lterminallib.c	/^static int terminal_Print_Debug (lua_State *L) {$/;"	f	file:
terminal_PrinterStatus	lua/lterminallib.c	/^static int terminal_PrinterStatus (lua_State *L) {$/;"	f	file:
terminal_PstnConnect	lua/lterminallib.c	/^static int terminal_PstnConnect (lua_State *L) {$/;"	f	file:
terminal_PstnDisconnect	lua/lterminallib.c	/^static int terminal_PstnDisconnect (lua_State *L) {$/;"	f	file:
terminal_PstnRecv	lua/lterminallib.c	/^static int terminal_PstnRecv (lua_State *L) {$/;"	f	file:
terminal_PstnSend	lua/lterminallib.c	/^static int terminal_PstnSend (lua_State *L) {$/;"	f	file:
terminal_PstnWait	lua/lterminallib.c	/^static int terminal_PstnWait (lua_State *L) {$/;"	f	file:
terminal_Reboot	lua/lterminallib.c	/^static int terminal_Reboot (lua_State *L) {$/;"	f	file:
terminal_RecvTcpComm	lua/lterminallib.c	/^static int terminal_RecvTcpComm (lua_State *L) {$/;"	f	file:
terminal_Remote	lua/lterminallib.c	/^static int terminal_Remote (lua_State *L) {$/;"	f	file:
terminal_RsaEncrypt	lua/lterminallib.c	/^static int terminal_RsaEncrypt(lua_State *L) {$/;"	f	file:
terminal_RsaStore	lua/lterminallib.c	/^static int terminal_RsaStore (lua_State *L) {$/;"	f	file:
terminal_RsaWrap3Des	lua/lterminallib.c	/^static int terminal_RsaWrap3Des(lua_State *L) {$/;"	f	file:
terminal_SecInit	lua/lterminallib.c	/^static int terminal_SecInit (lua_State *L) {$/;"	f	file:
terminal_SendTcpComm	lua/lterminallib.c	/^static int terminal_SendTcpComm (lua_State *L) {$/;"	f	file:
terminal_SerConnect	lua/lterminallib.c	/^static int terminal_SerConnect (lua_State *L) {$/;"	f	file:
terminal_SerData	lua/lterminallib.c	/^static int terminal_SerData (lua_State *L) {$/;"	f	file:
terminal_SerRecv	lua/lterminallib.c	/^static int terminal_SerRecv (lua_State *L) {$/;"	f	file:
terminal_SerSend	lua/lterminallib.c	/^static int terminal_SerSend (lua_State *L) {$/;"	f	file:
terminal_SerialNo	lua/lterminallib.c	/^static int terminal_SerialNo (lua_State *L) {$/;"	f	file:
terminal_SetArrayRange	lua/lterminallib.c	/^static int terminal_SetArrayRange (lua_State *L) {$/;"	f	file:
terminal_SetJsonValue	lua/lterminallib.c	/^static int terminal_SetJsonValue (lua_State *L) {$/;"	f	file:
terminal_SetNextObject	lua/lterminallib.c	/^static int terminal_SetNextObject (lua_State *L) {$/;"	f	file:
terminal_SetScreenName	lua/lterminallib.c	/^static int terminal_SetScreenName (lua_State *L) {$/;"	f	file:
terminal_Sleep	lua/lterminallib.c	/^static int terminal_Sleep (lua_State *L) {$/;"	f	file:
terminal_StringToHex	lua/lterminallib.c	/^static int terminal_StringToHex (lua_State *L) {$/;"	f	file:
terminal_SysTicks	lua/lterminallib.c	/^static int terminal_SysTicks (lua_State *L) {$/;"	f	file:
terminal_TcpConnect	lua/lterminallib.c	/^static int terminal_TcpConnect (lua_State *L) {$/;"	f	file:
terminal_TcpReconnect	lua/lterminallib.c	/^static int terminal_TcpReconnect (lua_State *L) {$/;"	f	file:
terminal_TcpRecv	lua/lterminallib.c	/^static int terminal_TcpRecv (lua_State *L) {$/;"	f	file:
terminal_TcpSend	lua/lterminallib.c	/^static int terminal_TcpSend (lua_State *L) {$/;"	f	file:
terminal_TdesRsaStore	lua/lterminallib.c	/^static int terminal_TdesRsaStore (lua_State *L) {$/;"	f	file:
terminal_TextTable	lua/lterminallib.c	/^static int terminal_TextTable (lua_State *L) {$/;"	f	file:
terminal_Time	lua/lterminallib.c	/^static int terminal_Time (lua_State *L) {$/;"	f	file:
terminal_TimeSet	lua/lterminallib.c	/^static int terminal_TimeSet (lua_State *L) {$/;"	f	file:
terminal_UploadMsg	lua/lterminallib.c	/^static int terminal_UploadMsg (lua_State *L) {$/;"	f	file:
terminal_UploadObj	lua/lterminallib.c	/^static int terminal_UploadObj (lua_State *L) {$/;"	f	file:
terminal_Xor3Des	lua/lterminallib.c	/^static int terminal_Xor3Des (lua_State *L) {$/;"	f	file:
terminal_XorData	lua/lterminallib.c	/^static int terminal_XorData (lua_State *L) {$/;"	f	file:
terminallib	lua/lterminallib.c	/^static const luaL_Reg terminallib[] = {$/;"	v	file:
test_eof	lua/liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	file:
test_then_block	lua/lparser.c	/^static int test_then_block (LexState *ls) {$/;"	f	file:
testnext	lua/lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	file:
text	include/zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s
ticks	iristime.c	/^static unsigned long ticks[10]={0,0,0,0,0,0,0,0,0,0};$/;"	v	file:
time	include/zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s
timeFromString	time.c	/^struct tm * timeFromString(char * string)$/;"	f
timeSet	time.c	/^void timeSet(struct tm * newTime)$/;"	f
time_t_ris	include/my_time.h	/^typedef unsigned long time_t_ris;$/;"	t
timerID	input.c	/^	int timerID = -1;$/;"	v
tinsert	lua/ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	file:
tiny_counter	malloc.c	/^int tiny_counter = 0;$/;"	v
tm	include/my_time.h	/^struct tm$/;"	s
tm_hour	include/my_time.h	/^	int tm_hour;	\/\/ hours since midnight (0-23)$/;"	m	struct:tm
tm_mday	include/my_time.h	/^	int tm_mday;	\/\/ day of the month (1-31)$/;"	m	struct:tm
tm_min	include/my_time.h	/^	int tm_min;		\/\/ minutes after the hour (0-59)$/;"	m	struct:tm
tm_mon	include/my_time.h	/^	int tm_mon;		\/\/ months since January (0-11)$/;"	m	struct:tm
tm_sec	include/my_time.h	/^	int tm_sec;		\/\/ seconds after the minute (0-59)$/;"	m	struct:tm
tm_wday	include/my_time.h	/^	int tm_wday;	\/\/ days since sunday (0-6)$/;"	m	struct:tm
tm_yday	include/my_time.h	/^	int tm_yday;	\/\/ days since January 1st (0-365\/366)$/;"	m	struct:tm
tm_year	include/my_time.h	/^	int tm_year;	\/\/ years since 1900$/;"	m	struct:tm
tofile	lua/liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	file:
tofilep	lua/liolib.c	54;"	d	file:
toproto	lua/luac.c	117;"	d	file:
tostate	lua/lstate.c	29;"	d	file:
tostore	lua/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:
total	include/inflate.h	/^    unsigned long total;        \/* protected copy of output count *\/$/;"	m	struct:inflate_state
total	include/sha1.h	/^    uint32 total[2];$/;"	m	struct:__anon43
total_in	include/zlib.h	/^    uLong    total_in;  \/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s
total_out	include/zlib.h	/^    uLong    total_out; \/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s
traceback	lua/lua.c	/^static int traceback (lua_State *L) {$/;"	f	file:
traceexec	lua/lvm.c	/^static void traceexec (lua_State *L, const Instruction *pc) {$/;"	f	file:
track1	ctlsmod.c	/^	unsigned char track1[100];$/;"	m	struct:__anon7	file:
track1len	ctlsmod.c	/^	int track1len;$/;"	m	struct:__anon7	file:
track2	ctlsmod.c	/^	unsigned char track2[100];$/;"	m	struct:__anon7	file:
track2len	ctlsmod.c	/^	int track2len;$/;"	m	struct:__anon7	file:
traverseclosure	lua/lgc.c	/^static void traverseclosure (global_State *g, Closure *cl) {$/;"	f	file:
traverseproto	lua/lgc.c	/^static void traverseproto (global_State *g, Proto *f) {$/;"	f	file:
traversestack	lua/lgc.c	/^static void traversestack (global_State *g, lua_State *l) {$/;"	f	file:
traversetable	lua/lgc.c	/^static int traversetable (global_State *g, Table *h) {$/;"	f	file:
treatstackoption	lua/ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	file:
tremove	lua/ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	file:
true	include/auris.h	25;"	d
trydecpoint	lua/llex.c	/^static void trydecpoint (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
tryfuncTM	lua/ldo.c	/^static StkId tryfuncTM (lua_State *L, StkId func) {$/;"	f	file:
txtToken	lua/llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	file:
type	include/Input.h	/^    E_INP_ENTRY_TYPE type;$/;"	m	struct:__anon22
type	include/as2805.h	/^    char type[5];$/;"	m	struct:__anon30
typeRedirectPAN	input.c	/^	} typeRedirectPAN;$/;"	t	typeref:struct:__anon13	file:
u4	crc32.c	/^           typedef unsigned short u4;$/;"	t	file:
u4	crc32.c	/^         typedef unsigned long u4;$/;"	t	file:
u4	crc32.c	/^       typedef unsigned int u4;$/;"	t	file:
uInt	include/zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t
uInt	include/zconf.h	51;"	d
uIntf	include/zconf.h	/^typedef uInt  FAR uIntf;$/;"	t
uIntf	include/zconf.h	56;"	d
uLong	include/zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t
uLong	include/zconf.h	52;"	d
uLongf	include/zconf.h	/^typedef uLong FAR uLongf;$/;"	t
uLongf	include/zconf.h	57;"	d
uart_open	comms.c	/^bool uart_open[2] = {false, false};$/;"	v
ubyte	include/LibCtls.h	/^typedef unsigned char ubyte;$/;"	t
uch	include/zutil.h	/^typedef unsigned char  uch;$/;"	t
uchar	include/auris.h	/^typedef	unsigned char	uchar;$/;"	t
uchar	lua/lstrlib.c	24;"	d	file:
uchf	include/zutil.h	/^typedef uch FAR uchf;$/;"	t
ud	lua/lapi.c	/^  void *ud;$/;"	m	struct:CCallS	file:
uint	include/auris.h	/^typedef	unsigned int	uint;$/;"	t
uint16_t	include/auris.h	/^typedef unsigned short uint16_t;$/;"	t
uint32	include/sha1.h	13;"	d
uint64_t	include/auris.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8	include/sha1.h	5;"	d
uint8_t	include/auris.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	include/sha1.h	9;"	d
ulg	include/zutil.h	/^typedef unsigned long  ulg;$/;"	t
ulint	include/LibCtls.h	/^typedef unsigned int ulint;$/;"	t
ulong	include/auris.h	/^typedef	unsigned long	ulong;$/;"	t
unbound_search	lua/ltable.c	/^static int unbound_search (Table *t, unsigned int j) {$/;"	f	file:
uncompress	include/zconf.h	40;"	d
unlinkupval	lua/lfunc.c	/^static void unlinkupval (UpVal *uv) {$/;"	f	file:
unmakemask	lua/ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	file:
updatewindow	inflate.c	/^local int updatewindow(z_streamp strm, unsigned out)$/;"	f
upload	iris.c	/^static char * upload = NULL;$/;"	v	file:
upload	iris_old.c	/^static char * upload = NULL;$/;"	v	file:
upval	lua/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:
usage	lua/luac.c	/^static void usage(const char* message)$/;"	f	file:
ush	include/zutil.h	/^typedef unsigned short ush;$/;"	t
ushf	include/zutil.h	/^typedef ush FAR ushf;$/;"	t
ushort	include/auris.h	/^typedef	unsigned short	ushort;$/;"	t
usint	include/LibCtls.h	/^typedef unsigned short usint;$/;"	t
v	lua/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:
v	lua/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:
val	include/inftrees.h	/^    unsigned short val;         \/* offset in table or code value *\/$/;"	m	struct:__anon37
value	include/iris.h	/^	char * value;$/;"	m	struct:__anon39
value	include/iris_old.h	/^	char * value;$/;"	m	struct:__anon40
vdDisplayGPRSSignalStrength	IrisComm.c	/^void vdDisplayGPRSSignalStrength(int inSignalStatus, int inNetStatus,int x,int y)$/;"	f
verbose	zutil.c	119;"	d	file:
voidp	include/zconf.h	/^   typedef Byte       *voidp;$/;"	t
voidp	include/zconf.h	/^   typedef void       *voidp;$/;"	t
voidp	include/zconf.h	59;"	d
voidpc	include/zconf.h	/^   typedef Byte const *voidpc;$/;"	t
voidpc	include/zconf.h	/^   typedef void const *voidpc;$/;"	t
voidpf	include/zconf.h	/^   typedef Byte FAR   *voidpf;$/;"	t
voidpf	include/zconf.h	/^   typedef void FAR   *voidpf;$/;"	t
voidpf	include/zconf.h	58;"	d
vsnprintf	include/zutil.h	200;"	d
wGraphicsHeight	printer.c	/^uint wGraphicsHeight;$/;"	v
wGraphicsWidth	printer.c	/^uint wGraphicsWidth;$/;"	v
wHandle	include/comms.h	/^	uint wHandle;$/;"	m	struct:__anon34
wLength	include/comms.h	/^	uint wLength;$/;"	m	struct:__anon34
wPortNumber	include/comms.h	/^	uint wPortNumber;$/;"	m	struct:__anon34
wSerialPortHandle	comms.c	/^static uint wSerialPortHandle[2] = {0xFFFF, 0xFFFF};$/;"	v	file:
waitSize	printer.c	/^uint waitSize = 0;$/;"	v
wait_10003	input.c	/^	int wait_10003 = -1;$/;"	v
wbits	include/inflate.h	/^    unsigned wbits;             \/* log base 2 of requested window size *\/$/;"	m	struct:inflate_state
whave	include/inflate.h	/^    unsigned whave;             \/* valid bytes in the window *\/$/;"	m	struct:inflate_state
whilestat	lua/lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	file:
white2gray	lua/lgc.c	37;"	d	file:
window	include/inflate.h	/^    unsigned char FAR *window;  \/* allocated sliding window, if needed *\/$/;"	m	struct:inflate_state
work	include/inflate.h	/^    unsigned short work[288];   \/* work area for code table building *\/$/;"	m	struct:inflate_state
wrap	include/inflate.h	/^    int wrap;                   \/* bit 0 true for zlib, bit 1 true for gzip *\/$/;"	m	struct:inflate_state
write	include/inflate.h	/^    unsigned write;             \/* window write index *\/$/;"	m	struct:inflate_state
write_table	crc32.c	/^local void write_table(out, table)$/;"	f
writer	lua/ldump.c	/^ lua_Writer writer;$/;"	m	struct:__anon16	file:
writer	lua/lstrlib.c	/^static int writer (lua_State *L, const void* b, size_t size, void* B) {$/;"	f	file:
writer	lua/luac.c	/^static int writer(lua_State* L, const void* p, size_t size, void* u)$/;"	f	file:
wsize	include/inflate.h	/^    unsigned wsize;             \/* window size or zero if not using window *\/$/;"	m	struct:inflate_state
x1	include/Input.h	/^	int x1,y1,x2,y2;$/;"	m	struct:__anon23
x2	include/Input.h	/^	int x1,y1,x2,y2;$/;"	m	struct:__anon23
xflags	include/zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s
y1	include/Input.h	/^	int x1,y1,x2,y2;$/;"	m	struct:__anon23
y2	include/Input.h	/^	int x1,y1,x2,y2;$/;"	m	struct:__anon23
yindex	lua/lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	file:
z	lua/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:
zError	include/zconf.h	44;"	d
zError	zutil.c	/^const char * ZEXPORT zError(int err)$/;"	f
z_errmsg	zutil.c	/^const char * const z_errmsg[10] = {$/;"	v
z_error	zutil.c	/^void z_error (m)$/;"	f
z_off_t	include/zconf.h	301;"	d
z_stream	include/zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	include/zlib.h	/^typedef struct z_stream_s {$/;"	s
z_streamp	include/zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t
z_verbose	zutil.c	/^int z_verbose = verbose;$/;"	v
zalloc	include/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s
zcalloc	zutil.c	/^voidpf zcalloc (voidpf opaque, unsigned items, unsigned size)$/;"	f
zcfree	zutil.c	/^void  zcfree (voidpf opaque, voidpf ptr)$/;"	f
zfree	include/zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s
zlibCompileFlags	zutil.c	/^uLong ZEXPORT zlibCompileFlags()$/;"	f
zlibVersion	zutil.c	/^const char * ZEXPORT zlibVersion()$/;"	f
zlib_version	include/zlib.h	207;"	d
zmemcmp	include/zutil.h	227;"	d
zmemcmp	include/zutil.h	231;"	d
zmemcmp	zutil.c	/^int zmemcmp(s1, s2, len)$/;"	f
zmemcpy	include/zutil.h	226;"	d
zmemcpy	include/zutil.h	230;"	d
zmemcpy	zutil.c	/^void zmemcpy(dest, source, len)$/;"	f
zmemzero	include/zutil.h	228;"	d
zmemzero	include/zutil.h	232;"	d
zmemzero	zutil.c	/^void zmemzero(dest, len)$/;"	f
